package security

import (
	"encoding/binary"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNEA0(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		CountC    uint32
		Bearer    uint8
		Direction uint8
		Ck        [16]byte
		payload   []byte
	}{
		{
			name:      "NEA0TestCase1",
			CountC:    0x72a4f20f,
			Bearer:    0x0c,
			Direction: 1,
			Ck:        [16]byte{0x2b, 0xd6, 0x45, 0x9f, 0x82, 0xc5, 0xb3, 0x00, 0x95, 0x2c, 0x49, 0x10, 0x48, 0x81, 0xff, 0x48},
			payload: []byte{
				0x7e, 0xc6, 0x12, 0x72, 0x74, 0x3b, 0xf1, 0x61, 0x47, 0x26, 0x44, 0x6a, 0x6c, 0x38, 0xce, 0xd1,
				0x66, 0xf6, 0xca, 0x76, 0xeb, 0x54, 0x30, 0x04, 0x42, 0x86, 0x34, 0x6c, 0xef, 0x13, 0x0f, 0x92,
				0x92, 0x2b, 0x03, 0x45, 0x0d, 0x3a, 0x99, 0x75, 0xe5, 0xbd, 0x2e, 0xa0, 0xeb, 0x55, 0xad, 0x8e,
				0x1b, 0x19, 0x9e, 0x3e, 0xc4, 0x31, 0x60, 0x20, 0xe9, 0xa1, 0xb2, 0x85, 0xe7, 0x62, 0x79, 0x53,
				0x59, 0xb7, 0xbd, 0xfd, 0x39, 0xbe, 0xf4, 0xb2, 0x48, 0x45, 0x83, 0xd5, 0xaf, 0xe0, 0x82, 0xae,
				0xe6, 0x38, 0xbf, 0x5f, 0xd5, 0xa6, 0x06, 0x19, 0x39, 0x01, 0xa0, 0x8f, 0x4a, 0xb4, 0x1a, 0xab,
				0x9b, 0x13, 0x48, 0x80,
			},
		},
		{
			name:      "NEA0TestCase2",
			CountC:    0xe28bcf7b,
			Bearer:    0x18,
			Direction: 0,
			Ck:        [16]byte{0xef, 0xa8, 0xb2, 0x22, 0x9e, 0x72, 0x0c, 0x2a, 0x7c, 0x36, 0xea, 0x55, 0xe9, 0x60, 0x56, 0x95},
			payload: []byte{
				0x10, 0x11, 0x12, 0x31, 0xe0, 0x60, 0x25, 0x3a, 0x43, 0xfd, 0x3f, 0x57, 0xe3, 0x76, 0x07, 0xab,
				0x28, 0x27, 0xb5, 0x99, 0xb6, 0xb1, 0xbb, 0xda, 0x37, 0xa8, 0xab, 0xcc, 0x5a, 0x8c, 0x55, 0x0d,
				0x1b, 0xfb, 0x2f, 0x49, 0x46, 0x24, 0xfb, 0x50, 0x36, 0x7f, 0xa3, 0x6c, 0xe3, 0xbc, 0x68, 0xf1,
				0x1c, 0xf9, 0x3b, 0x15, 0x10, 0x37, 0x6b, 0x02, 0x13, 0x0f, 0x81, 0x2a, 0x9f, 0xa1, 0x69, 0xd8,
			},
		},
		{
			name:      "NEA0TestCase3",
			CountC:    0xfa556b26,
			Bearer:    0x03,
			Direction: 1,
			Ck:        [16]byte{0x5a, 0xcb, 0x1d, 0x64, 0x4c, 0x0d, 0x51, 0x20, 0x4e, 0xa5, 0xf1, 0x45, 0x10, 0x10, 0xd8, 0x52},
			payload:   []byte{0xad, 0x9c, 0x44, 0x1f, 0x89, 0x0b, 0x38, 0xc4, 0x57, 0xa4, 0x9d, 0x42, 0x14, 0x07, 0xe8, 0x00},
		},
		{
			name:      "NEA0TestCase4",
			CountC:    0x398a59b4,
			Bearer:    0x05,
			Direction: 1,
			Ck:        [16]byte{0xd3, 0xc5, 0xd5, 0x92, 0x32, 0x7f, 0xb1, 0x1c, 0x40, 0x35, 0xc6, 0x68, 0x0a, 0xf8, 0xc6, 0xd1},
			payload: []byte{
				0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29, 0xb7, 0x1d, 0x80,
				0x8c, 0xe3, 0x3e, 0x2c, 0xc3, 0xc0, 0xb5, 0xfc, 0x1f, 0x3d, 0xe8, 0xa6, 0xdc, 0x66, 0xb1, 0xf0,
			},
		},
		{
			name:      "NEA0TestCase5",
			CountC:    0x72a4f20f,
			Bearer:    0x09,
			Direction: 0,
			Ck:        [16]byte{0x60, 0x90, 0xea, 0xe0, 0x4c, 0x83, 0x70, 0x6e, 0xec, 0xbf, 0x65, 0x2b, 0xe8, 0xe3, 0x65, 0x66},
			payload: []byte{
				0x40, 0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x42, 0x86, 0xb2, 0x99, 0x78, 0x3d, 0xaf, 0x44,
				0x2c, 0x09, 0x9f, 0x7a, 0xb0, 0xf5, 0x8d, 0x5c, 0x8e, 0x46, 0xb1, 0x04, 0xf0, 0x8f, 0x01, 0xb4,
				0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29, 0xb7, 0x1d, 0x36, 0xbd, 0x1a, 0x3d, 0x90, 0xdc, 0x3a, 0x41,
				0xb4, 0x6d, 0x51, 0x67, 0x2a, 0xc4, 0xc9, 0x66, 0x3a, 0x2b, 0xe0, 0x63, 0xda, 0x4b, 0xc8, 0xd2,
				0x80, 0x8c, 0xe3, 0x3e, 0x2c, 0xcc, 0xbf, 0xc6, 0x34, 0xe1, 0xb2, 0x59, 0x06, 0x08, 0x76, 0xa0,
				0xfb, 0xb5, 0xa4, 0x37, 0xeb, 0xcc, 0x8d, 0x31, 0xc1, 0x9e, 0x44, 0x54, 0x31, 0x87, 0x45, 0xe3,
				0x98, 0x76, 0x45, 0x98, 0x7a, 0x98, 0x6f, 0x2c, 0xb0,
			},
		},
		{
			name:      "NEA0TestCase6",
			CountC:    0x02,
			Bearer:    0x01,
			Direction: 0,
			Ck:        [16]byte{0xaa, 0x3f, 0xc7, 0x8b, 0x4c, 0x1b, 0xb6, 0x1a, 0xf0, 0xa3, 0x7f, 0xa5, 0xf6, 0x23, 0xab, 0xfc},
			payload: []byte{
				0xbe, 0x40, 0x61, 0x94, 0xd3, 0x0b, 0xd7, 0x5e, 0x90, 0xea, 0xe3, 0xd7, 0x57, 0x71, 0xae, 0x7b,
				0x3a, 0x02, 0x62, 0x29, 0xe7, 0x0d, 0xd4, 0x30, 0x51, 0xe3, 0xa7, 0x1c,
			},
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			payload := make([]byte, len(tc.payload))
			copy(payload, tc.payload)
			err := NASEncrypt(AlgCiphering128NEA0, tc.Ck, tc.CountC, tc.Bearer, tc.Direction, payload)
			require.NoError(t, err)
			require.Equal(t, tc.payload, payload)
		})
	}
}

func TestNIA0(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		CountI    uint32
		Bearer    uint8
		Direction uint8
		Ik        [16]byte
		Msg       []byte
		MacI      uint32
	}{
		{
			name:      "NIA0TestCase1",
			CountI:    0x38a6f056,
			Bearer:    0x1f,
			Direction: 0,
			Ik:        [16]byte{0x2b, 0xd6, 0x45, 0x9f, 0x82, 0xc5, 0xb3, 0x00, 0x95, 0x2c, 0x49, 0x10, 0x48, 0x81, 0xff, 0x48},
			Msg: []byte{
				0x33, 0x32, 0x34, 0x62, 0x63, 0x39, 0x38, 0x61, 0x37, 0x34, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			MacI: 0,
		},
		{
			name:      "NIA0TestCase2",
			CountI:    0x36af6144,
			Bearer:    0x18,
			Direction: 1,
			Ik:        [16]byte{0x7e, 0x5e, 0x94, 0x43, 0x1e, 0x11, 0xd7, 0x38, 0x28, 0xd7, 0x39, 0xcc, 0x6c, 0xed, 0x45, 0x73},
			Msg: []byte{
				0xb3, 0xd3, 0xc9, 0x17, 0x0a, 0x4e, 0x16, 0x32, 0xf6, 0x0f, 0x86, 0x10, 0x13, 0xd2, 0x2d, 0x84,
				0xb7, 0x26, 0xb6, 0xa2, 0x78, 0xd8, 0x02, 0xd1, 0xee, 0xaf, 0x13, 0x21, 0xba, 0x59, 0x29, 0xdc,
			},
			MacI: 0,
		},
		{
			name:      "NIA0TestCase3",
			CountI:    0xc7590ea9,
			Bearer:    0x17,
			Direction: 0,
			Ik:        [16]byte{0xd3, 0x41, 0x9b, 0xe8, 0x21, 0x08, 0x7a, 0xcd, 0x02, 0x12, 0x3a, 0x92, 0x48, 0x03, 0x33, 0x59},
			Msg: []byte{
				0xbb, 0xb0, 0x57, 0x03, 0x88, 0x09, 0x49, 0x6b, 0xcf, 0xf8, 0x6d, 0x6f, 0xbc, 0x8c, 0xe5, 0xb1,
				0x35, 0xa0, 0x6b, 0x16, 0x60, 0x54, 0xf2, 0xd5, 0x65, 0xbe, 0x8a, 0xce, 0x75, 0xdc, 0x85, 0x1e,
				0x0b, 0xcd, 0xd8, 0xf0, 0x71, 0x41, 0xc4, 0x95, 0x87, 0x2f, 0xb5, 0xd8, 0xc0, 0xc6, 0x6a, 0x8b,
				0x6d, 0xa5, 0x56, 0x66, 0x3e, 0x4e, 0x46, 0x12, 0x05, 0xd8, 0x45, 0x80, 0xbe, 0xe5, 0xbc, 0x7e,
			},
			MacI: 0,
		},
		{
			name:      "NIA0TestCase4",
			CountI:    0x36af6144,
			Bearer:    0x0f,
			Direction: 1,
			Ik:        [16]byte{0x83, 0xfd, 0x23, 0xa2, 0x44, 0xa7, 0x4c, 0xf3, 0x58, 0xda, 0x30, 0x19, 0xf1, 0x72, 0x26, 0x35},
			Msg: []byte{
				0x35, 0xc6, 0x87, 0x16, 0x63, 0x3c, 0x66, 0xfb, 0x75, 0x0c, 0x26, 0x68, 0x65, 0xd5, 0x3c, 0x11,
				0xea, 0x05, 0xb1, 0xe9, 0xfa, 0x49, 0xc8, 0x39, 0x8d, 0x48, 0xe1, 0xef, 0xa5, 0x90, 0x9d, 0x39,
				0x47, 0x90, 0x28, 0x37, 0xf5, 0xae, 0x96, 0xd5, 0xa0, 0x5b, 0xc8, 0xd6, 0x1c, 0xa8, 0xdb, 0xef,
				0x1b, 0x13, 0xa4, 0xb4, 0xab, 0xfe, 0x4f, 0xb1, 0x00, 0x60, 0x45, 0xb6, 0x74, 0xbb, 0x54, 0x72,
				0x93, 0x04, 0xc3, 0x82, 0xbe, 0x53, 0xa5, 0xaf, 0x05, 0x55, 0x61, 0x76, 0xf6, 0xea, 0xa2, 0xef,
				0x1d, 0x05, 0xe4, 0xb0, 0x83, 0x18, 0x1e, 0xe6, 0x74, 0xcd, 0xa5, 0xa4, 0x85, 0xf7, 0x4d, 0x7a,
			},
			MacI: 0,
		},
		{
			name:      "NIA0TestCase5",
			CountI:    0x36af6144,
			Bearer:    0x18,
			Direction: 0,
			Ik:        [16]byte{0x68, 0x32, 0xa6, 0x5c, 0xff, 0x44, 0x73, 0x62, 0x1e, 0xbd, 0xd4, 0xba, 0x26, 0xa9, 0x21, 0xfe},
			Msg: []byte{
				0xd3, 0xc5, 0x38, 0x39, 0x62, 0x68, 0x20, 0x71, 0x77, 0x65, 0x66, 0x76, 0x20, 0x32, 0x38, 0x37,
				0x63, 0x62, 0x40, 0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29,
				0xb7, 0x1d, 0x80, 0x8c, 0xe3, 0x3e, 0x2c, 0xc3, 0xc0, 0xb5, 0xfc, 0x1f, 0x3d, 0xe8, 0xa6, 0xdc,
			},
			MacI: 0,
		},
		{
			name:      "NIA0TestCase6",
			CountI:    0x7827fab2,
			Bearer:    0x05,
			Direction: 1,
			Ik:        [16]byte{0x5d, 0x0a, 0x80, 0xd8, 0x13, 0x4a, 0xe1, 0x96, 0x77, 0x82, 0x4b, 0x67, 0x1e, 0x83, 0x8a, 0xf4},
			Msg: []byte{
				0x70, 0xde, 0xdf, 0x2d, 0xc4, 0x2c, 0x5c, 0xbd, 0x3a, 0x96, 0xf8, 0xa0, 0xb1, 0x14, 0x18, 0xb3,
				0x60, 0x8d, 0x57, 0x33, 0x60, 0x4a, 0x2c, 0xd3, 0x6a, 0xab, 0xc7, 0x0c, 0xe3, 0x19, 0x3b, 0xb5,
				0x15, 0x3b, 0xe2, 0xd3, 0xc0, 0x6d, 0xfd, 0xb2, 0xd1, 0x6e, 0x9c, 0x35, 0x71, 0x58, 0xbe, 0x6a,
				0x41, 0xd6, 0xb8, 0x61, 0xe4, 0x91, 0xdb, 0x3f, 0xbf, 0xeb, 0x51, 0x8e, 0xfc, 0xf0, 0x48, 0xd7,
				0xd5, 0x89, 0x53, 0x73, 0x0f, 0xf3, 0x0c, 0x9e, 0xc4, 0x70, 0xff, 0xcd, 0x66, 0x3d, 0xc3, 0x42,
				0x01, 0xc3, 0x6a, 0xdd, 0xc0, 0x11, 0x1c, 0x35, 0xb3, 0x8a, 0xfe, 0xe7, 0xcf, 0xdb, 0x58, 0x2e,
				0x37, 0x31, 0xf8, 0xb4, 0xba, 0xa8, 0xd1, 0xa8, 0x9c, 0x06, 0xe8, 0x11, 0x99, 0xa9, 0x71, 0x62,
				0x27, 0xbe, 0x34, 0x4e, 0xfc, 0xb4, 0x36, 0xdd, 0xd0, 0xf0, 0x96, 0xc0, 0x64, 0xc3, 0xb5, 0xe2,
				0xc3, 0x99, 0x99, 0x3f, 0xc7, 0x73, 0x94, 0xf9, 0xe0, 0x97, 0x20, 0xa8, 0x11, 0x85, 0x0e, 0xf2,
				0x3b, 0x2e, 0xe0, 0x5d, 0x9e, 0x61, 0x73, 0x60, 0x9d, 0x86, 0xe1, 0xc0, 0xc1, 0x8e, 0xa5, 0x1a,
				0x01, 0x2a, 0x00, 0xbb, 0x41, 0x3b, 0x9c, 0xb8, 0x18, 0x8a, 0x70, 0x3c, 0xd6, 0xba, 0xe3, 0x1c,
				0xc6, 0x7b, 0x34, 0xb1, 0xb0, 0x00, 0x19, 0xe6, 0xa2, 0xb2, 0xa6, 0x90, 0xf0, 0x26, 0x71, 0xfe,
				0x7c, 0x9e, 0xf8, 0xde, 0xc0, 0x09, 0x4e, 0x53, 0x37, 0x63, 0x47, 0x8d, 0x58, 0xd2, 0xc5, 0xf5,
				0xb8, 0x27, 0xa0, 0x14, 0x8c, 0x59, 0x48, 0xa9, 0x69, 0x31, 0xac, 0xf8, 0x4f, 0x46, 0x5a, 0x64,
				0xe6, 0x2c, 0xe7, 0x40, 0x07, 0xe9, 0x91, 0xe3, 0x7e, 0xa8, 0x23, 0xfa, 0x0f, 0xb2, 0x19, 0x23,
				0xb7, 0x99, 0x05, 0xb7, 0x33, 0xb6, 0x31, 0xe6, 0xc7, 0xd6, 0x86, 0x0a, 0x38, 0x31, 0xac, 0x35,
				0x1a, 0x9c, 0x73, 0x0c, 0x52, 0xff, 0x72, 0xd9, 0xd3, 0x08, 0xee, 0xdb, 0xab, 0x21, 0xfd, 0xe1,
				0x43, 0xa0, 0xea, 0x17, 0xe2, 0x3e, 0xdc, 0x1f, 0x74, 0xcb, 0xb3, 0x63, 0x8a, 0x20, 0x33, 0xaa,
				0xa1, 0x54, 0x64, 0xea, 0xa7, 0x33, 0x38, 0x5d, 0xbb, 0xeb, 0x6f, 0xd7, 0x35, 0x09, 0xb8, 0x57,
				0xe6, 0xa4, 0x19, 0xdc, 0xa1, 0xd8, 0x90, 0x7a, 0xf9, 0x77, 0xfb, 0xac, 0x4d, 0xfa, 0x35, 0xec,
			},
			MacI: 0,
		},
		{
			name:      "NIA0TestCase7",
			CountI:    0x296f393c,
			Bearer:    0x0b,
			Direction: 1,
			Ik:        [16]byte{0xb3, 0x12, 0x0f, 0xfd, 0xb2, 0xcf, 0x6a, 0xf4, 0xe7, 0x3e, 0xaf, 0x2e, 0xf4, 0xeb, 0xec, 0x69},
			Msg: []byte{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
				0xe0, 0x95, 0x80, 0x45, 0xf3, 0xa0, 0xbb, 0xa4, 0xe3, 0x96, 0x83, 0x46, 0xf0, 0xa3, 0xb8, 0xa7,
				0xc0, 0x2a, 0x01, 0x8a, 0xe6, 0x40, 0x76, 0x52, 0x26, 0xb9, 0x87, 0xc9, 0x13, 0xe6, 0xcb, 0xf0,
				0x83, 0x57, 0x00, 0x16, 0xcf, 0x83, 0xef, 0xbc, 0x61, 0xc0, 0x82, 0x51, 0x3e, 0x21, 0x56, 0x1a,
				0x42, 0x7c, 0x00, 0x9d, 0x28, 0xc2, 0x98, 0xef, 0xac, 0xe7, 0x8e, 0xd6, 0xd5, 0x6c, 0x2d, 0x45,
				0x05, 0xad, 0x03, 0x2e, 0x9c, 0x04, 0xdc, 0x60, 0xe7, 0x3a, 0x81, 0x69, 0x6d, 0xa6, 0x65, 0xc6,
				0xc4, 0x86, 0x03, 0xa5, 0x7b, 0x45, 0xab, 0x33, 0x22, 0x15, 0x85, 0xe6, 0x8e, 0xe3, 0x16, 0x91,
				0x87, 0xfb, 0x02, 0x39, 0x52, 0x86, 0x32, 0xdd, 0x65, 0x6c, 0x80, 0x7e, 0xa3, 0x24, 0x8b, 0x7b,
				0x46, 0xd0, 0x02, 0xb2, 0xb5, 0xc7, 0x45, 0x8e, 0xb8, 0x5b, 0x9c, 0xe9, 0x58, 0x79, 0xe0, 0x34,
				0x08, 0x59, 0x05, 0x5e, 0x3b, 0x0a, 0xbb, 0xc3, 0xea, 0xce, 0x87, 0x19, 0xca, 0xa8, 0x02, 0x65,
				0xc9, 0x72, 0x05, 0xd5, 0xdc, 0x4b, 0xcc, 0x90, 0x2f, 0xe1, 0x83, 0x96, 0x29, 0xed, 0x71, 0x32,
				0x8a, 0x0f, 0x04, 0x49, 0xf5, 0x88, 0x55, 0x7e, 0x68, 0x98, 0x86, 0x0e, 0x04, 0x2a, 0xec, 0xd8,
				0x4b, 0x24, 0x04, 0xc2, 0x12, 0xc9, 0x22, 0x2d, 0xa5, 0xbf, 0x8a, 0x89, 0xef, 0x67, 0x97, 0x87,
				0x0c, 0xf5, 0x07, 0x71, 0xa6, 0x0f, 0x66, 0xa2, 0xee, 0x62, 0x85, 0x36, 0x57, 0xad, 0xdf, 0x04,
				0xcd, 0xde, 0x07, 0xfa, 0x41, 0x4e, 0x11, 0xf1, 0x2b, 0x4d, 0x81, 0xb9, 0xb4, 0xe8, 0xac, 0x53,
				0x8e, 0xa3, 0x06, 0x66, 0x68, 0x8d, 0x88, 0x1f, 0x6c, 0x34, 0x84, 0x21, 0x99, 0x2f, 0x31, 0xb9,
				0x4f, 0x88, 0x06, 0xed, 0x8f, 0xcc, 0xff, 0x4c, 0x91, 0x23, 0xb8, 0x96, 0x42, 0x52, 0x7a, 0xd6,
				0x13, 0xb1, 0x09, 0xbf, 0x75, 0x16, 0x74, 0x85, 0xf1, 0x26, 0x8b, 0xf8, 0x84, 0xb4, 0xcd, 0x23,
				0xd2, 0x9a, 0x09, 0x34, 0x92, 0x57, 0x03, 0xd6, 0x34, 0x09, 0x8f, 0x77, 0x67, 0xf1, 0xbe, 0x74,
				0x91, 0xe7, 0x08, 0xa8, 0xbb, 0x94, 0x9a, 0x38, 0x73, 0x70, 0x8a, 0xef, 0x4a, 0x36, 0x23, 0x9e,
				0x50, 0xcc, 0x08, 0x23, 0x5c, 0xd5, 0xed, 0x6b, 0xbe, 0x57, 0x86, 0x68, 0xa1, 0x7b, 0x58, 0xc1,
				0x17, 0x1d, 0x0b, 0x90, 0xe8, 0x13, 0xa9, 0xe4, 0xf5, 0x8a, 0x89, 0xd7, 0x19, 0xb1, 0x10, 0x42,
				0xd6, 0x36, 0x0b, 0x1b, 0x0f, 0x52, 0xde, 0xb7, 0x30, 0xa5, 0x8d, 0x58, 0xfa, 0xf4, 0x63, 0x15,
				0x95, 0x4b, 0x0a, 0x87, 0x26, 0x91, 0x47, 0x59, 0x77, 0xdc, 0x88, 0xc0, 0xd7, 0x33, 0xfe, 0xff,
				0x54, 0x60, 0x0a, 0x0c, 0xc1, 0xd0, 0x30, 0x0a, 0xaa, 0xeb, 0x94, 0x57, 0x2c, 0x6e, 0x95, 0xb0,
				0x1a, 0xe9, 0x0d, 0xe0, 0x4f, 0x1d, 0xce, 0x47, 0xf8, 0x7e, 0x8f, 0xa7, 0xbe, 0xbf, 0x77, 0xe1,
				0xdb, 0xc2, 0x0d, 0x6b, 0xa8, 0x5c, 0xb9, 0x14, 0x3d, 0x51, 0x8b, 0x28, 0x5d, 0xfa, 0x04, 0xb6,
				0x98, 0xbf, 0x0c, 0xf7, 0x81, 0x9f, 0x20, 0xfa, 0x7a, 0x28, 0x8e, 0xb0, 0x70, 0x3d, 0x99, 0x5c,
				0x59, 0x94, 0x0c, 0x7c, 0x66, 0xde, 0x57, 0xa9, 0xb7, 0x0f, 0x82, 0x37, 0x9b, 0x70, 0xe2, 0x03,
				0x1e, 0x45, 0x0f, 0xcf, 0xd2, 0x18, 0x13, 0x26, 0xfc, 0xd2, 0x8d, 0x88, 0x23, 0xba, 0xaa, 0x80,
				0xdf, 0x6e, 0x0f, 0x44, 0x35, 0x59, 0x64, 0x75, 0x39, 0xfd, 0x89, 0x07, 0xc0, 0xff, 0xd9, 0xd7,
				0x9c, 0x13, 0x0e, 0xd8, 0x1c, 0x9a, 0xfd, 0x9b, 0x7e, 0x84, 0x8c, 0x9f, 0xed, 0x38, 0x44, 0x3d,
				0x5d, 0x38, 0x0e, 0x53, 0xfb, 0xdb, 0x8a, 0xc8, 0xc3, 0xd3, 0xf0, 0x68, 0x76, 0x05, 0x4f, 0x12,
				0x24, 0x61, 0x10, 0x7d, 0xe9, 0x2f, 0xea, 0x09, 0xc6, 0xf6, 0x92, 0x3a, 0x18, 0x8d, 0x53, 0xaf,
				0xe5, 0x4a, 0x10, 0xf6, 0x0e, 0x6e, 0x9d, 0x5a, 0x03, 0xd9, 0x96, 0xb5, 0xfb, 0xc8, 0x20, 0xf8,
				0xa6, 0x37, 0x11, 0x6a, 0x27, 0xad, 0x04, 0xb4, 0x44, 0xa0, 0x93, 0x2d, 0xd6, 0x0f, 0xbd, 0x12,
				0x67, 0x1c, 0x11, 0xe1, 0xc0, 0xec, 0x73, 0xe7, 0x89, 0x87, 0x9f, 0xaa, 0x3d, 0x42, 0xc6, 0x4d,
				0x20, 0xcd, 0x12, 0x52, 0x74, 0x2a, 0x37, 0x68, 0xc2, 0x5a, 0x90, 0x15, 0x85, 0x88, 0x8e, 0xce,
				0xe1, 0xe6, 0x12, 0xd9, 0x93, 0x6b, 0x40, 0x3b, 0x07, 0x75, 0x94, 0x9a, 0x66, 0xcd, 0xfd, 0x99,
				0xa2, 0x9b, 0x13, 0x45, 0xba, 0xa8, 0xd9, 0xd5, 0x40, 0x0c, 0x91, 0x02, 0x4b, 0x0a, 0x60, 0x73,
				0x63, 0xb0, 0x13, 0xce, 0x5d, 0xe9, 0xae, 0x86, 0x9d, 0x3b, 0x8d, 0x95, 0xb0, 0x57, 0x0b, 0x3c,
				0x2d, 0x39, 0x14, 0x22, 0xd3, 0x24, 0x50, 0xcb, 0xcf, 0xae, 0x96, 0x65, 0x22, 0x86, 0xe9, 0x6d,
				0xec, 0x12, 0x14, 0xa9, 0x34, 0x65, 0x27, 0x98, 0x0a, 0x81, 0x92, 0xea, 0xc1, 0xc3, 0x9a, 0x3a,
				0xaf, 0x6f, 0x15, 0x35, 0x1d, 0xa6, 0xbe, 0x76, 0x4d, 0xf8, 0x97, 0x72, 0xec, 0x04, 0x07, 0xd0,
				0x6e, 0x44, 0x15, 0xbe, 0xfa, 0xe7, 0xc9, 0x25, 0x80, 0xdf, 0x9b, 0xf5, 0x07, 0x49, 0x7c, 0x8f,
				0x29, 0x95, 0x16, 0x0d, 0x4e, 0x21, 0x8d, 0xaa, 0xcb, 0x02, 0x94, 0x4a, 0xbf, 0x83, 0x34, 0x0c,
				0xe8, 0xbe, 0x16, 0x86, 0xa9, 0x60, 0xfa, 0xf9, 0x0e, 0x2d, 0x90, 0xc5, 0x5c, 0xc6, 0x47, 0x5b,
				0xab, 0xc3, 0x17, 0x1a, 0x80, 0xa3, 0x63, 0x17, 0x49, 0x54, 0x95, 0x5d, 0x71, 0x01, 0xda, 0xb1,
				0x6a, 0xe8, 0x17, 0x91, 0x67, 0xe2, 0x14, 0x44, 0xb4, 0x43, 0xa9, 0xea, 0xaa, 0x7c, 0x91, 0xde,
				0x36, 0xd1, 0x18, 0xc3, 0x9d, 0x38, 0x9f, 0x8d, 0xd4, 0x46, 0x9a, 0x84, 0x6c, 0x9a, 0x26, 0x2b,
				0xf7, 0xfa, 0x18, 0x48, 0x7a, 0x79, 0xe8, 0xde, 0x11, 0x69, 0x9e, 0x0b, 0x8f, 0xdf, 0x55, 0x7c,
				0xb4, 0x87, 0x19, 0xd4, 0x53, 0xba, 0x71, 0x30, 0x56, 0x10, 0x9b, 0x93, 0xa2, 0x18, 0xc8, 0x96,
				0x75, 0xac, 0x19, 0x5f, 0xb4, 0xfb, 0x06, 0x63, 0x9b, 0x37, 0x97, 0x14, 0x49, 0x55, 0xb3, 0xc9,
				0x32, 0x7d, 0x1a, 0xec, 0x00, 0x3d, 0x42, 0xec, 0xd0, 0xea, 0x98, 0xab, 0xf1, 0x9f, 0xfb, 0x4a,
				0xf3, 0x56, 0x1a, 0x67, 0xe7, 0x7c, 0x35, 0xbf, 0x15, 0xc5, 0x9c, 0x24, 0x12, 0xda, 0x88, 0x1d,
				0xb0, 0x2b, 0x1b, 0xfb, 0xce, 0xbf, 0xac, 0x51, 0x52, 0xbc, 0x99, 0xbc, 0x3f, 0x1d, 0x15, 0xf7,
				0x71, 0x00, 0x1b, 0x70, 0x29, 0xfe, 0xdb, 0x02, 0x8f, 0x8b, 0x85, 0x2b, 0xc4, 0x40, 0x7e, 0xb8,
				0x3f, 0x89, 0x1c, 0x9c, 0xa7, 0x33, 0x25, 0x4f, 0xdd, 0x1e, 0x9e, 0xdb, 0x56, 0x91, 0x9c, 0xe9,
				0xfe, 0xa2, 0x1c, 0x17, 0x40, 0x72, 0x52, 0x1c, 0x18, 0x31, 0x9a, 0x54, 0xb5, 0xd4, 0xef, 0xbe,
				0xbd, 0xdf, 0x1d, 0x8b, 0x69, 0xb1, 0xcb, 0xf2, 0x5f, 0x48, 0x9f, 0xcc, 0x98, 0x13, 0x72, 0x54,
				0x7c, 0xf4, 0x1d, 0x00, 0x8e, 0xf0, 0xbc, 0xa1, 0x92, 0x6f, 0x93, 0x4b, 0x73, 0x5e, 0x09, 0x0b,
				0x3b, 0x25, 0x1e, 0xb3, 0x3a, 0x36, 0xf8, 0x2e, 0xd9, 0xb2, 0x9c, 0xf4, 0xcb, 0x94, 0x41, 0x88,
				0xfa, 0x0e, 0x1e, 0x38, 0xdd, 0x77, 0x8f, 0x7d, 0x1c, 0x9d, 0x98, 0x7b, 0x28, 0xd1, 0x32, 0xdf,
				0xb9, 0x73, 0x1f, 0xa4, 0xf4, 0xb4, 0x16, 0x93, 0x5b, 0xe4, 0x9d, 0xe3, 0x05, 0x16, 0xaf, 0x35,
				0x78, 0x58, 0x1f, 0x2f, 0x13, 0xf5, 0x61, 0xc0, 0x66, 0x33, 0x61, 0x94, 0x1e, 0xab, 0x24, 0x9a,
				0x4b, 0xc1, 0x23, 0xf8, 0xd1, 0x5c, 0xd7, 0x11, 0xa9, 0x56, 0xa1, 0xbf, 0x20, 0xfe, 0x6e, 0xb7,
				0x8a, 0xea, 0x23, 0x73, 0x36, 0x1d, 0xa0, 0x42, 0x6c, 0x79, 0xa5, 0x30, 0xc3, 0xbb, 0x1d, 0xe0,
				0xc9, 0x97, 0x22, 0xef, 0x1f, 0xde, 0x39, 0xac, 0x2b, 0x00, 0xa0, 0xa8, 0xee, 0x7c, 0x80, 0x0a,
				0x08, 0xbc, 0x22, 0x64, 0xf8, 0x9f, 0x4e, 0xff, 0xe6, 0x27, 0xac, 0x2f, 0x05, 0x31, 0xfb, 0x55,
				0x4f, 0x6d, 0x21, 0xd7, 0x4c, 0x59, 0x0a, 0x70, 0xad, 0xfa, 0xa3, 0x90, 0xbd, 0xfb, 0xb3, 0xd6,
				0x8e, 0x46, 0x21, 0x5c, 0xab, 0x18, 0x7d, 0x23, 0x68, 0xd5, 0xa7, 0x1f, 0x5e, 0xbe, 0xc0, 0x81,
				0xcd, 0x3b, 0x20, 0xc0, 0x82, 0xdb, 0xe4, 0xcd, 0x2f, 0xac, 0xa2, 0x87, 0x73, 0x79, 0x5d, 0x6b,
				0x0c, 0x10, 0x20, 0x4b, 0x65, 0x9a, 0x93, 0x9e, 0xf2, 0x9b, 0xbe, 0x10, 0x88, 0x24, 0x36, 0x24,
				0x42, 0x99, 0x27, 0xa7, 0xeb, 0x57, 0x6d, 0xd3, 0xa0, 0x0e, 0xa5, 0xe0, 0x1a, 0xf5, 0xd4, 0x75,
				0x83, 0xb2, 0x27, 0x2c, 0x0c, 0x16, 0x1a, 0x80, 0x65, 0x21, 0xa1, 0x6f, 0xf9, 0xb0, 0xa7, 0x22,
				0xc0, 0xcf, 0x26, 0xb0, 0x25, 0xd5, 0x83, 0x6e, 0x22, 0x58, 0xa4, 0xf7, 0xd4, 0x77, 0x3a, 0xc8,
				0x01, 0xe4, 0x26, 0x3b, 0xc2, 0x94, 0xf4, 0x3d, 0xef, 0x7f, 0xa8, 0x70, 0x3f, 0x3a, 0x41, 0x97,
				0x46, 0x35, 0x25, 0x88, 0x76, 0x52, 0xb0, 0xb2, 0xa4, 0xa2, 0xa7, 0xcf, 0x87, 0xf0, 0x09, 0x14,
				0x87, 0x1e, 0x25, 0x03, 0x91, 0x13, 0xc7, 0xe1, 0x61, 0x8d, 0xa3, 0x40, 0x64, 0xb5, 0x7a, 0x43,
				0xc4, 0x63, 0x24, 0x9f, 0xb8, 0xd0, 0x5e, 0x0f, 0x26, 0xf4, 0xa6, 0xd8, 0x49, 0x72, 0xe7, 0xa9,
				0x05, 0x48, 0x24, 0x14, 0x5f, 0x91, 0x29, 0x5c, 0xdb, 0xe3, 0x9a, 0x6f, 0x92, 0x0f, 0xac, 0xc6,
				0x59, 0x71, 0x2b, 0x46, 0xa5, 0x4b, 0xa2, 0x95, 0xbb, 0xe6, 0xa9, 0x01, 0x54, 0xe9, 0x1b, 0x33,
				0x98, 0x5a, 0x2b, 0xcd, 0x42, 0x0a, 0xd5, 0xc6, 0x7e, 0xc9, 0xad, 0x8e, 0xb7, 0xac, 0x68, 0x64,
				0xdb, 0x27, 0x2a, 0x51, 0x6b, 0xc9, 0x4c, 0x28, 0x39, 0xb0, 0xa8, 0x16, 0x9a, 0x6b, 0xf5, 0x8e,
				0x1a, 0x0c, 0x2a, 0xda, 0x8c, 0x88, 0x3b, 0x7b, 0xf4, 0x97, 0xa4, 0x91, 0x71, 0x26, 0x8e, 0xd1,
				0x5d, 0xdd, 0x29, 0x69, 0x38, 0x4e, 0x7f, 0xf4, 0xbf, 0x4a, 0xab, 0x2e, 0xc9, 0xec, 0xc6, 0x52,
				0x9c, 0xf6, 0x29, 0xe2, 0xdf, 0x0f, 0x08, 0xa7, 0x7a, 0x65, 0xaf, 0xa1, 0x2a, 0xa9, 0xb5, 0x05,
				0xdf, 0x8b, 0x28, 0x7e, 0xf6, 0xcc, 0x91, 0x49, 0x3d, 0x1c, 0xaa, 0x39, 0x07, 0x6e, 0x28, 0xef,
				0x1e, 0xa0, 0x28, 0xf5, 0x11, 0x8d, 0xe6, 0x1a, 0xe0, 0x2b, 0xb6, 0xae, 0xfc, 0x33, 0x43, 0xa0,
				0x50, 0x29, 0x2f, 0x19, 0x9f, 0x40, 0x18, 0x57, 0xb2, 0xbe, 0xad, 0x5e, 0x6e, 0xe2, 0xa1, 0xf1,
				0x91, 0x02, 0x2f, 0x92, 0x78, 0x01, 0x6f, 0x04, 0x77, 0x91, 0xa9, 0xd1, 0x8d, 0xa7, 0xd2, 0xa6,
				0xd2, 0x7f, 0x2e, 0x0e, 0x51, 0xc2, 0xf6, 0xea, 0x30, 0xe8, 0xac, 0x49, 0xa0, 0x60, 0x4f, 0x4c,
				0x13, 0x54, 0x2e, 0x85, 0xb6, 0x83, 0x81, 0xb9, 0xfd, 0xcf, 0xa0, 0xce, 0x4b, 0x2d, 0x34, 0x13,
				0x54, 0x85, 0x2d, 0x36, 0x02, 0x45, 0xc5, 0x36, 0xb6, 0x12, 0xaf, 0x71, 0xf3, 0xe7, 0x7c, 0x90,
				0x95, 0xae, 0x2d, 0xbd, 0xe5, 0x04, 0xb2, 0x65, 0x73, 0x3d, 0xab, 0xfe, 0x10, 0xa2, 0x0f, 0xc7,
				0xd6, 0xd3, 0x2c, 0x21, 0xcc, 0xc7, 0x2b, 0x8b, 0x34, 0x44, 0xae, 0x66, 0x3d, 0x65, 0x92, 0x2d,
				0x17, 0xf8, 0x2c, 0xaa, 0x2b, 0x86, 0x5c, 0xd8, 0x89, 0x13, 0xd2, 0x91, 0xa6, 0x58, 0x99, 0x02,
				0x6e, 0xa1, 0x32, 0x84, 0x39, 0x72, 0x3c, 0x19, 0x8c, 0x36, 0xb0, 0xc3, 0xc8, 0xd0, 0x85, 0xbf,
				0xaf, 0x8a, 0x32, 0x0f, 0xde, 0x33, 0x4b, 0x4a, 0x49, 0x19, 0xb4, 0x4c, 0x2b, 0x95, 0xf6, 0xe8,
				0xec, 0xf7, 0x33, 0x93, 0xf7, 0xf0, 0xd2, 0xa4, 0x0e, 0x60, 0xb1, 0xd4, 0x06, 0x52, 0x6b, 0x02,
				0x2d, 0xdc, 0x33, 0x18, 0x10, 0xb1, 0xa5, 0xf7, 0xc3, 0x47, 0xbd, 0x53, 0xed, 0x1f, 0x10, 0x5d,
				0x6a, 0x0d, 0x30, 0xab, 0xa4, 0x77, 0xe1, 0x78, 0x88, 0x9a, 0xb2, 0xec, 0x55, 0xd5, 0x58, 0xde,
				0xab, 0x26, 0x30, 0x20, 0x43, 0x36, 0x96, 0x2b, 0x4d, 0xb5, 0xb6, 0x63, 0xb6, 0x90, 0x2b, 0x89,
				0xe8, 0x5b, 0x31, 0xbc, 0x6a, 0xf5, 0x0f, 0xc5, 0x0a, 0xcc, 0xb3, 0xfb, 0x9b, 0x57, 0xb6, 0x63,
				0x29, 0x70, 0x31, 0x37, 0x8d, 0xb4, 0x78, 0x96, 0xd7, 0xfb, 0xaf, 0x6c, 0x60, 0x0a, 0xdd, 0x2c,
				0x67, 0xf9, 0x36, 0xdb, 0x03, 0x79, 0x86, 0xdb, 0x85, 0x6e, 0xb4, 0x9c, 0xf2, 0xdb, 0x3f, 0x7d,
				0xa6, 0xd2, 0x36, 0x50, 0xe4, 0x38, 0xf1, 0x88, 0x40, 0x41, 0xb0, 0x13, 0x11, 0x9e, 0x4c, 0x2a,
				0xe5, 0xaf, 0x37, 0xcc, 0xcd, 0xfb, 0x68, 0x66, 0x07, 0x38, 0xb5, 0x8b, 0x3c, 0x59, 0xd1, 0xc0,
				0x24, 0x84, 0x37, 0x47, 0x2a, 0xba, 0x1f, 0x35, 0xca, 0x1f, 0xb9, 0x0c, 0xd7, 0x14, 0xaa, 0x9f,
				0x63, 0x55, 0x34, 0xf4, 0x9e, 0x7c, 0x5b, 0xba, 0x81, 0xc2, 0xb6, 0xb3, 0x6f, 0xde, 0xe2, 0x1c,
				0xa2, 0x7e, 0x34, 0x7f, 0x79, 0x3d, 0x2c, 0xe9, 0x44, 0xed, 0xb2, 0x3c, 0x8c, 0x9b, 0x91, 0x4b,
				0xe1, 0x03, 0x35, 0xe3, 0x50, 0xfe, 0xb5, 0x07, 0x03, 0x94, 0xb7, 0xa4, 0xa1, 0x5c, 0x0c, 0xa1,
				0x20, 0x28, 0x35, 0x68, 0xb7, 0xbf, 0xc2, 0x54, 0xfe, 0x83, 0x8b, 0x13, 0x7a, 0x21, 0x47, 0xce,
				0x7c, 0x11, 0x3a, 0x3a, 0x4d, 0x65, 0x49, 0x9d, 0x9e, 0x86, 0xb8, 0x7d, 0xbc, 0xc7, 0xf0, 0x3b,
				0xbd, 0x3a, 0x3a, 0xb1, 0xaa, 0x24, 0x3e, 0xce, 0x5b, 0xa9, 0xbc, 0xf2, 0x5f, 0x82, 0x83, 0x6c,
				0xfe, 0x47, 0x3b, 0x2d, 0x83, 0xe7, 0xa7, 0x20, 0x1c, 0xd0, 0xb9, 0x6a, 0x72, 0x45, 0x1e, 0x86,
				0x3f, 0x6c, 0x3b, 0xa6, 0x64, 0xa6, 0xd0, 0x73, 0xd1, 0xf7, 0xb5, 0xed, 0x99, 0x08, 0x65, 0xd9,
				0x78, 0xbd, 0x38, 0x15, 0xd0, 0x60, 0x94, 0xfc, 0x9a, 0x2a, 0xba, 0x52, 0x21, 0xc2, 0x2d, 0x5a,
				0xb9, 0x96, 0x38, 0x9e, 0x37, 0x21, 0xe3, 0xaf, 0x5f, 0x05, 0xbe, 0xdd, 0xc2, 0x87, 0x5e, 0x0d,
				0xfa, 0xeb, 0x39, 0x02, 0x1e, 0xe2, 0x7a, 0x41, 0x18, 0x7c, 0xbb, 0x45, 0xef, 0x40, 0xc3, 0xe7,
				0x3b, 0xc0, 0x39, 0x89, 0xf9, 0xa3, 0x0d, 0x12, 0xc5, 0x4b, 0xa7, 0xd2, 0x14, 0x1d, 0xa8, 0xa8,
				0x75, 0x49, 0x3e, 0x65, 0x77, 0x6e, 0xf3, 0x5f, 0x97, 0xde, 0xbc, 0x22, 0x86, 0xcc, 0x4a, 0xf9,
				0xb4, 0x62, 0x3e, 0xee, 0x90, 0x2f, 0x84, 0x0c, 0x52, 0xf1, 0xb8, 0xad, 0x65, 0x89, 0x39, 0xae,
				0xf7, 0x1f, 0x3f, 0x72, 0xb9, 0xec, 0x1d, 0xe2, 0x15, 0x88, 0xbd, 0x35, 0x48, 0x4e, 0xa4, 0x44,
				0x36, 0x34, 0x3f, 0xf9, 0x5e, 0xad, 0x6a, 0xb1, 0xd8, 0xaf, 0xb1, 0xb2, 0xa3, 0x03, 0xdf, 0x1b,
				0x71, 0xe5, 0x3c, 0x4a, 0xea, 0x6b, 0x2e, 0x3e, 0x93, 0x72, 0xbe, 0x0d, 0x1b, 0xc9, 0x97, 0x98,
				0xb0, 0xce, 0x3c, 0xc1, 0x0d, 0x2a, 0x59, 0x6d, 0x56, 0x5d, 0xba, 0x82, 0xf8, 0x8c, 0xe4, 0xcf,
				0xf3, 0xb3, 0x3d, 0x5d, 0x24, 0xe9, 0xc0, 0x83, 0x11, 0x24, 0xbf, 0x1a, 0xd5, 0x4b, 0x79, 0x25,
				0x32, 0x98, 0x3d, 0xd6, 0xc3, 0xa8, 0xb7, 0xd0,
			},
			MacI: 0,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			buf, err := NASMacCalculate(AlgIntegrity128NIA0, tc.Ik, tc.CountI, tc.Bearer, tc.Direction, tc.Msg)
			require.NoError(t, err)
			mac := binary.BigEndian.Uint32(buf)
			require.Equal(t, tc.MacI, mac)
		})
	}
}

func TestNEA1(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		CountC    uint32
		Bearer    uint32
		Direction uint32
		Ck        [16]byte
		Length    uint32
		Ibs       []byte
		Obs       []byte
	}{
		{
			name:      "NEA1TestCase1",
			CountC:    0x72a4f20f,
			Bearer:    0x0c,
			Direction: 1,
			Ck:        [16]byte{0x2b, 0xd6, 0x45, 0x9f, 0x82, 0xc5, 0xb3, 0x00, 0x95, 0x2c, 0x49, 0x10, 0x48, 0x81, 0xff, 0x48},
			Length:    798,
			Ibs: []byte{
				0x7e, 0xc6, 0x12, 0x72, 0x74, 0x3b, 0xf1, 0x61, 0x47, 0x26, 0x44, 0x6a, 0x6c, 0x38, 0xce, 0xd1,
				0x66, 0xf6, 0xca, 0x76, 0xeb, 0x54, 0x30, 0x04, 0x42, 0x86, 0x34, 0x6c, 0xef, 0x13, 0x0f, 0x92,
				0x92, 0x2b, 0x03, 0x45, 0x0d, 0x3a, 0x99, 0x75, 0xe5, 0xbd, 0x2e, 0xa0, 0xeb, 0x55, 0xad, 0x8e,
				0x1b, 0x19, 0x9e, 0x3e, 0xc4, 0x31, 0x60, 0x20, 0xe9, 0xa1, 0xb2, 0x85, 0xe7, 0x62, 0x79, 0x53,
				0x59, 0xb7, 0xbd, 0xfd, 0x39, 0xbe, 0xf4, 0xb2, 0x48, 0x45, 0x83, 0xd5, 0xaf, 0xe0, 0x82, 0xae,
				0xe6, 0x38, 0xbf, 0x5f, 0xd5, 0xa6, 0x06, 0x19, 0x39, 0x01, 0xa0, 0x8f, 0x4a, 0xb4, 0x1a, 0xab,
				0x9b, 0x13, 0x48, 0x80,
			},
			Obs: []byte{
				0x8c, 0xeb, 0xa6, 0x29, 0x43, 0xdc, 0xed, 0x3a, 0x09, 0x90, 0xb0, 0x6e, 0xa1, 0xb0, 0xa2, 0xc4,
				0xfb, 0x3c, 0xed, 0xc7, 0x1b, 0x36, 0x9f, 0x42, 0xba, 0x64, 0xc1, 0xeb, 0x66, 0x65, 0xe7, 0x2a,
				0xa1, 0xc9, 0xbb, 0x0d, 0xea, 0xa2, 0x0f, 0xe8, 0x60, 0x58, 0xb8, 0xba, 0xee, 0x2c, 0x2e, 0x7f,
				0x0b, 0xec, 0xce, 0x48, 0xb5, 0x29, 0x32, 0xa5, 0x3c, 0x9d, 0x5f, 0x93, 0x1a, 0x3a, 0x7c, 0x53,
				0x22, 0x59, 0xaf, 0x43, 0x25, 0xe2, 0xa6, 0x5e, 0x30, 0x84, 0xad, 0x5f, 0x6a, 0x51, 0x3b, 0x7b,
				0xdd, 0xc1, 0xb6, 0x5f, 0x0a, 0xa0, 0xd9, 0x7a, 0x05, 0x3d, 0xb5, 0x5a, 0x88, 0xc4, 0xc4, 0xf9,
				0x60, 0x5e, 0x41, 0x40,
			},
		},
		{
			name:      "NEA1TestCase2",
			CountC:    0xe28bcf7b,
			Bearer:    0x18,
			Direction: 0,
			Ck:        [16]byte{0xef, 0xa8, 0xb2, 0x22, 0x9e, 0x72, 0x0c, 0x2a, 0x7c, 0x36, 0xea, 0x55, 0xe9, 0x60, 0x56, 0x95},
			Length:    510,
			Ibs: []byte{
				0x10, 0x11, 0x12, 0x31, 0xe0, 0x60, 0x25, 0x3a, 0x43, 0xfd, 0x3f, 0x57, 0xe3, 0x76, 0x07, 0xab,
				0x28, 0x27, 0xb5, 0x99, 0xb6, 0xb1, 0xbb, 0xda, 0x37, 0xa8, 0xab, 0xcc, 0x5a, 0x8c, 0x55, 0x0d,
				0x1b, 0xfb, 0x2f, 0x49, 0x46, 0x24, 0xfb, 0x50, 0x36, 0x7f, 0xa3, 0x6c, 0xe3, 0xbc, 0x68, 0xf1,
				0x1c, 0xf9, 0x3b, 0x15, 0x10, 0x37, 0x6b, 0x02, 0x13, 0x0f, 0x81, 0x2a, 0x9f, 0xa1, 0x69, 0xd8,
			},
			Obs: []byte{
				0xe0, 0xda, 0x15, 0xca, 0x8e, 0x25, 0x54, 0xf5, 0xe5, 0x6c, 0x94, 0x68, 0xdc, 0x6c, 0x7c, 0x12,
				0x9c, 0x56, 0x8a, 0xa5, 0x03, 0x23, 0x17, 0xe0, 0x4e, 0x07, 0x29, 0x64, 0x6c, 0xab, 0xef, 0xa6,
				0x89, 0x86, 0x4c, 0x41, 0x0f, 0x24, 0xf9, 0x19, 0xe6, 0x1e, 0x3d, 0xfd, 0xfa, 0xd7, 0x7e, 0x56,
				0x0d, 0xb0, 0xa9, 0xcd, 0x36, 0xc3, 0x4a, 0xe4, 0x18, 0x14, 0x90, 0xb2, 0x9f, 0x5f, 0xa2, 0xfc,
			},
		},
		{
			name:      "NEA1TestCase3",
			CountC:    0xfa556b26,
			Bearer:    0x03,
			Direction: 1,
			Ck:        [16]byte{0x5a, 0xcb, 0x1d, 0x64, 0x4c, 0x0d, 0x51, 0x20, 0x4e, 0xa5, 0xf1, 0x45, 0x10, 0x10, 0xd8, 0x52},
			Length:    120,
			Ibs:       []byte{0xad, 0x9c, 0x44, 0x1f, 0x89, 0x0b, 0x38, 0xc4, 0x57, 0xa4, 0x9d, 0x42, 0x14, 0x07, 0xe8, 0x00},
			Obs:       []byte{0xba, 0x0f, 0x31, 0x30, 0x03, 0x34, 0xc5, 0x6b, 0x52, 0xa7, 0x49, 0x7c, 0xba, 0xc0, 0x46, 0x00},
		},
		{
			name:      "NEA1TestCase4",
			CountC:    0x398a59b4,
			Bearer:    0x05,
			Direction: 1,
			Ck:        [16]byte{0xd3, 0xc5, 0xd5, 0x92, 0x32, 0x7f, 0xb1, 0x1c, 0x40, 0x35, 0xc6, 0x68, 0x0a, 0xf8, 0xc6, 0xd1},
			Length:    253,
			Ibs: []byte{
				0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29, 0xb7, 0x1d, 0x80,
				0x8c, 0xe3, 0x3e, 0x2c, 0xc3, 0xc0, 0xb5, 0xfc, 0x1f, 0x3d, 0xe8, 0xa6, 0xdc, 0x66, 0xb1, 0xf0,
			},
			Obs: []byte{
				0x98, 0x9b, 0x71, 0x9c, 0xdc, 0x33, 0xce, 0xb7, 0xcf, 0x27, 0x6a, 0x52, 0x82, 0x7c, 0xef, 0x94,
				0xa5, 0x6c, 0x40, 0xc0, 0xab, 0x9d, 0x81, 0xf7, 0xa2, 0xa9, 0xba, 0xc6, 0x0e, 0x11, 0xc4, 0xb0,
			},
		},
		{
			name:      "NEA1TestCase5",
			CountC:    0x72a4f20f,
			Bearer:    0x09,
			Direction: 0,
			Ck:        [16]byte{0x60, 0x90, 0xea, 0xe0, 0x4c, 0x83, 0x70, 0x6e, 0xec, 0xbf, 0x65, 0x2b, 0xe8, 0xe3, 0x65, 0x66},
			Length:    837,
			Ibs: []byte{
				0x40, 0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x42, 0x86, 0xb2, 0x99, 0x78, 0x3d, 0xaf, 0x44,
				0x2c, 0x09, 0x9f, 0x7a, 0xb0, 0xf5, 0x8d, 0x5c, 0x8e, 0x46, 0xb1, 0x04, 0xf0, 0x8f, 0x01, 0xb4,
				0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29, 0xb7, 0x1d, 0x36, 0xbd, 0x1a, 0x3d, 0x90, 0xdc, 0x3a, 0x41,
				0xb4, 0x6d, 0x51, 0x67, 0x2a, 0xc4, 0xc9, 0x66, 0x3a, 0x2b, 0xe0, 0x63, 0xda, 0x4b, 0xc8, 0xd2,
				0x80, 0x8c, 0xe3, 0x3e, 0x2c, 0xcc, 0xbf, 0xc6, 0x34, 0xe1, 0xb2, 0x59, 0x06, 0x08, 0x76, 0xa0,
				0xfb, 0xb5, 0xa4, 0x37, 0xeb, 0xcc, 0x8d, 0x31, 0xc1, 0x9e, 0x44, 0x54, 0x31, 0x87, 0x45, 0xe3,
				0x98, 0x76, 0x45, 0x98, 0x7a, 0x98, 0x6f, 0x2c, 0xb0,
			},
			Obs: []byte{
				0x58, 0x92, 0xbb, 0xa8, 0x8b, 0xbb, 0xca, 0xae, 0xae, 0x76, 0x9a, 0xa0, 0x6b, 0x68, 0x3d, 0x3a,
				0x17, 0xcc, 0x04, 0xa3, 0x69, 0x88, 0x16, 0x97, 0x43, 0x5e, 0x44, 0xfe, 0xd5, 0xff, 0x9a, 0xf5,
				0x7b, 0x9e, 0x89, 0x0d, 0x4d, 0x5c, 0x64, 0x70, 0x98, 0x85, 0xd4, 0x8a, 0xe4, 0x06, 0x90, 0xec,
				0x04, 0x3b, 0xaa, 0xe9, 0x70, 0x57, 0x96, 0xe4, 0xa9, 0xff, 0x5a, 0x4b, 0x8d, 0x8b, 0x36, 0xd7,
				0xf3, 0xfe, 0x57, 0xcc, 0x6c, 0xfd, 0x6c, 0xd0, 0x05, 0xcd, 0x38, 0x52, 0xa8, 0x5e, 0x94, 0xce,
				0x6b, 0xcd, 0x90, 0xd0, 0xd0, 0x78, 0x39, 0xce, 0x09, 0x73, 0x35, 0x44, 0xca, 0x8e, 0x35, 0x08,
				0x43, 0x24, 0x85, 0x50, 0x92, 0x2a, 0xc1, 0x28, 0x18,
			},
		},
		{
			name:      "NEA1TestCase6",
			CountC:    0x02,
			Bearer:    0x01,
			Direction: 0,
			Ck:        [16]byte{0xaa, 0x3f, 0xc7, 0x8b, 0x4c, 0x1b, 0xb6, 0x1a, 0xf0, 0xa3, 0x7f, 0xa5, 0xf6, 0x23, 0xab, 0xfc},
			Length:    224,
			Ibs: []byte{
				0xbe, 0x40, 0x61, 0x94, 0xd3, 0x0b, 0xd7, 0x5e, 0x90, 0xea, 0xe3, 0xd7, 0x57, 0x71, 0xae, 0x7b,
				0x3a, 0x02, 0x62, 0x29, 0xe7, 0x0d, 0xd4, 0x30, 0x51, 0xe3, 0xa7, 0x1c,
			},
			Obs: []byte{
				0x7e, 0x00, 0x67, 0x01, 0x00, 0x08, 0x2e, 0x05, 0x01, 0xc1, 0xff, 0xff, 0x91, 0xa1, 0x12, 0x05,
				0x81, 0x25, 0x09, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74,
			},
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			obs, err := NEA1(tc.Ck, tc.CountC, tc.Bearer, tc.Direction, tc.Ibs, tc.Length)
			require.NoError(t, err)
			require.Equal(t, tc.Obs, obs)
		})
	}
}

func TestNIA1(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		CountI    uint32
		Bearer    byte
		Direction uint32
		Ik        [16]byte
		Length    uint64
		Msg       []byte
		MacI      uint32
	}{
		{
			name:      "NIA1TestCase1",
			CountI:    0x38a6f056,
			Bearer:    0x1f,
			Direction: 0,
			Ik:        [16]byte{0x2b, 0xd6, 0x45, 0x9f, 0x82, 0xc5, 0xb3, 0x00, 0x95, 0x2c, 0x49, 0x10, 0x48, 0x81, 0xff, 0x48},
			Length:    88,
			Msg: []byte{
				0x33, 0x32, 0x34, 0x62, 0x63, 0x39, 0x38, 0x61, 0x37, 0x34, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			MacI: 0x731f1165,
		},
		{
			name:      "NIA1TestCase2",
			CountI:    0x36af6144,
			Bearer:    0x18,
			Direction: 1,
			Ik:        [16]byte{0x7e, 0x5e, 0x94, 0x43, 0x1e, 0x11, 0xd7, 0x38, 0x28, 0xd7, 0x39, 0xcc, 0x6c, 0xed, 0x45, 0x73},
			Length:    254,
			Msg: []byte{
				0xb3, 0xd3, 0xc9, 0x17, 0x0a, 0x4e, 0x16, 0x32, 0xf6, 0x0f, 0x86, 0x10, 0x13, 0xd2, 0x2d, 0x84,
				0xb7, 0x26, 0xb6, 0xa2, 0x78, 0xd8, 0x02, 0xd1, 0xee, 0xaf, 0x13, 0x21, 0xba, 0x59, 0x29, 0xdc,
			},
			MacI: 0xe3259f6f,
		},
		{
			name:      "NIA1TestCase3",
			CountI:    0xc7590ea9,
			Bearer:    0x17,
			Direction: 0,
			Ik:        [16]byte{0xd3, 0x41, 0x9b, 0xe8, 0x21, 0x08, 0x7a, 0xcd, 0x02, 0x12, 0x3a, 0x92, 0x48, 0x03, 0x33, 0x59},
			Length:    511,
			Msg: []byte{
				0xbb, 0xb0, 0x57, 0x03, 0x88, 0x09, 0x49, 0x6b, 0xcf, 0xf8, 0x6d, 0x6f, 0xbc, 0x8c, 0xe5, 0xb1,
				0x35, 0xa0, 0x6b, 0x16, 0x60, 0x54, 0xf2, 0xd5, 0x65, 0xbe, 0x8a, 0xce, 0x75, 0xdc, 0x85, 0x1e,
				0x0b, 0xcd, 0xd8, 0xf0, 0x71, 0x41, 0xc4, 0x95, 0x87, 0x2f, 0xb5, 0xd8, 0xc0, 0xc6, 0x6a, 0x8b,
				0x6d, 0xa5, 0x56, 0x66, 0x3e, 0x4e, 0x46, 0x12, 0x05, 0xd8, 0x45, 0x80, 0xbe, 0xe5, 0xbc, 0x7e,
			},
			MacI: 0x9a16c77d,
		},
		{
			name:      "NIA1TestCase4",
			CountI:    0x36af6144,
			Bearer:    0x0f,
			Direction: 1,
			Ik:        [16]byte{0x83, 0xfd, 0x23, 0xa2, 0x44, 0xa7, 0x4c, 0xf3, 0x58, 0xda, 0x30, 0x19, 0xf1, 0x72, 0x26, 0x35},
			Length:    768,
			Msg: []byte{
				0x35, 0xc6, 0x87, 0x16, 0x63, 0x3c, 0x66, 0xfb, 0x75, 0x0c, 0x26, 0x68, 0x65, 0xd5, 0x3c, 0x11,
				0xea, 0x05, 0xb1, 0xe9, 0xfa, 0x49, 0xc8, 0x39, 0x8d, 0x48, 0xe1, 0xef, 0xa5, 0x90, 0x9d, 0x39,
				0x47, 0x90, 0x28, 0x37, 0xf5, 0xae, 0x96, 0xd5, 0xa0, 0x5b, 0xc8, 0xd6, 0x1c, 0xa8, 0xdb, 0xef,
				0x1b, 0x13, 0xa4, 0xb4, 0xab, 0xfe, 0x4f, 0xb1, 0x00, 0x60, 0x45, 0xb6, 0x74, 0xbb, 0x54, 0x72,
				0x93, 0x04, 0xc3, 0x82, 0xbe, 0x53, 0xa5, 0xaf, 0x05, 0x55, 0x61, 0x76, 0xf6, 0xea, 0xa2, 0xef,
				0x1d, 0x05, 0xe4, 0xb0, 0x83, 0x18, 0x1e, 0xe6, 0x74, 0xcd, 0xa5, 0xa4, 0x85, 0xf7, 0x4d, 0x7a,
			},
			MacI: 0xbba74492,
		},
		{
			name:      "NIA1TestCase5",
			CountI:    0x36af6144,
			Bearer:    0x18,
			Direction: 0,
			Ik:        [16]byte{0x68, 0x32, 0xa6, 0x5c, 0xff, 0x44, 0x73, 0x62, 0x1e, 0xbd, 0xd4, 0xba, 0x26, 0xa9, 0x21, 0xfe},
			Length:    383,
			Msg: []byte{
				0xd3, 0xc5, 0x38, 0x39, 0x62, 0x68, 0x20, 0x71, 0x77, 0x65, 0x66, 0x76, 0x20, 0x32, 0x38, 0x37,
				0x63, 0x62, 0x40, 0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29,
				0xb7, 0x1d, 0x80, 0x8c, 0xe3, 0x3e, 0x2c, 0xc3, 0xc0, 0xb5, 0xfc, 0x1f, 0x3d, 0xe8, 0xa6, 0xdc,
			},
			MacI: 0x4145e4b0,
		},
		{
			name:      "NIA1TestCase6",
			CountI:    0x7827fab2,
			Bearer:    0x05,
			Direction: 1,
			Ik:        [16]byte{0x5d, 0x0a, 0x80, 0xd8, 0x13, 0x4a, 0xe1, 0x96, 0x77, 0x82, 0x4b, 0x67, 0x1e, 0x83, 0x8a, 0xf4},
			Length:    2558,
			Msg: []byte{
				0x70, 0xde, 0xdf, 0x2d, 0xc4, 0x2c, 0x5c, 0xbd, 0x3a, 0x96, 0xf8, 0xa0, 0xb1, 0x14, 0x18, 0xb3,
				0x60, 0x8d, 0x57, 0x33, 0x60, 0x4a, 0x2c, 0xd3, 0x6a, 0xab, 0xc7, 0x0c, 0xe3, 0x19, 0x3b, 0xb5,
				0x15, 0x3b, 0xe2, 0xd3, 0xc0, 0x6d, 0xfd, 0xb2, 0xd1, 0x6e, 0x9c, 0x35, 0x71, 0x58, 0xbe, 0x6a,
				0x41, 0xd6, 0xb8, 0x61, 0xe4, 0x91, 0xdb, 0x3f, 0xbf, 0xeb, 0x51, 0x8e, 0xfc, 0xf0, 0x48, 0xd7,
				0xd5, 0x89, 0x53, 0x73, 0x0f, 0xf3, 0x0c, 0x9e, 0xc4, 0x70, 0xff, 0xcd, 0x66, 0x3d, 0xc3, 0x42,
				0x01, 0xc3, 0x6a, 0xdd, 0xc0, 0x11, 0x1c, 0x35, 0xb3, 0x8a, 0xfe, 0xe7, 0xcf, 0xdb, 0x58, 0x2e,
				0x37, 0x31, 0xf8, 0xb4, 0xba, 0xa8, 0xd1, 0xa8, 0x9c, 0x06, 0xe8, 0x11, 0x99, 0xa9, 0x71, 0x62,
				0x27, 0xbe, 0x34, 0x4e, 0xfc, 0xb4, 0x36, 0xdd, 0xd0, 0xf0, 0x96, 0xc0, 0x64, 0xc3, 0xb5, 0xe2,
				0xc3, 0x99, 0x99, 0x3f, 0xc7, 0x73, 0x94, 0xf9, 0xe0, 0x97, 0x20, 0xa8, 0x11, 0x85, 0x0e, 0xf2,
				0x3b, 0x2e, 0xe0, 0x5d, 0x9e, 0x61, 0x73, 0x60, 0x9d, 0x86, 0xe1, 0xc0, 0xc1, 0x8e, 0xa5, 0x1a,
				0x01, 0x2a, 0x00, 0xbb, 0x41, 0x3b, 0x9c, 0xb8, 0x18, 0x8a, 0x70, 0x3c, 0xd6, 0xba, 0xe3, 0x1c,
				0xc6, 0x7b, 0x34, 0xb1, 0xb0, 0x00, 0x19, 0xe6, 0xa2, 0xb2, 0xa6, 0x90, 0xf0, 0x26, 0x71, 0xfe,
				0x7c, 0x9e, 0xf8, 0xde, 0xc0, 0x09, 0x4e, 0x53, 0x37, 0x63, 0x47, 0x8d, 0x58, 0xd2, 0xc5, 0xf5,
				0xb8, 0x27, 0xa0, 0x14, 0x8c, 0x59, 0x48, 0xa9, 0x69, 0x31, 0xac, 0xf8, 0x4f, 0x46, 0x5a, 0x64,
				0xe6, 0x2c, 0xe7, 0x40, 0x07, 0xe9, 0x91, 0xe3, 0x7e, 0xa8, 0x23, 0xfa, 0x0f, 0xb2, 0x19, 0x23,
				0xb7, 0x99, 0x05, 0xb7, 0x33, 0xb6, 0x31, 0xe6, 0xc7, 0xd6, 0x86, 0x0a, 0x38, 0x31, 0xac, 0x35,
				0x1a, 0x9c, 0x73, 0x0c, 0x52, 0xff, 0x72, 0xd9, 0xd3, 0x08, 0xee, 0xdb, 0xab, 0x21, 0xfd, 0xe1,
				0x43, 0xa0, 0xea, 0x17, 0xe2, 0x3e, 0xdc, 0x1f, 0x74, 0xcb, 0xb3, 0x63, 0x8a, 0x20, 0x33, 0xaa,
				0xa1, 0x54, 0x64, 0xea, 0xa7, 0x33, 0x38, 0x5d, 0xbb, 0xeb, 0x6f, 0xd7, 0x35, 0x09, 0xb8, 0x57,
				0xe6, 0xa4, 0x19, 0xdc, 0xa1, 0xd8, 0x90, 0x7a, 0xf9, 0x77, 0xfb, 0xac, 0x4d, 0xfa, 0x35, 0xec,
			},
			MacI: 0x0fa2b1ee,
		},
		{
			name:      "NIA1TestCase7",
			CountI:    0x296f393c,
			Bearer:    0x0b,
			Direction: 1,
			Ik:        [16]byte{0xb3, 0x12, 0x0f, 0xfd, 0xb2, 0xcf, 0x6a, 0xf4, 0xe7, 0x3e, 0xaf, 0x2e, 0xf4, 0xeb, 0xec, 0x69},
			Length:    16448,
			Msg: []byte{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
				0xe0, 0x95, 0x80, 0x45, 0xf3, 0xa0, 0xbb, 0xa4, 0xe3, 0x96, 0x83, 0x46, 0xf0, 0xa3, 0xb8, 0xa7,
				0xc0, 0x2a, 0x01, 0x8a, 0xe6, 0x40, 0x76, 0x52, 0x26, 0xb9, 0x87, 0xc9, 0x13, 0xe6, 0xcb, 0xf0,
				0x83, 0x57, 0x00, 0x16, 0xcf, 0x83, 0xef, 0xbc, 0x61, 0xc0, 0x82, 0x51, 0x3e, 0x21, 0x56, 0x1a,
				0x42, 0x7c, 0x00, 0x9d, 0x28, 0xc2, 0x98, 0xef, 0xac, 0xe7, 0x8e, 0xd6, 0xd5, 0x6c, 0x2d, 0x45,
				0x05, 0xad, 0x03, 0x2e, 0x9c, 0x04, 0xdc, 0x60, 0xe7, 0x3a, 0x81, 0x69, 0x6d, 0xa6, 0x65, 0xc6,
				0xc4, 0x86, 0x03, 0xa5, 0x7b, 0x45, 0xab, 0x33, 0x22, 0x15, 0x85, 0xe6, 0x8e, 0xe3, 0x16, 0x91,
				0x87, 0xfb, 0x02, 0x39, 0x52, 0x86, 0x32, 0xdd, 0x65, 0x6c, 0x80, 0x7e, 0xa3, 0x24, 0x8b, 0x7b,
				0x46, 0xd0, 0x02, 0xb2, 0xb5, 0xc7, 0x45, 0x8e, 0xb8, 0x5b, 0x9c, 0xe9, 0x58, 0x79, 0xe0, 0x34,
				0x08, 0x59, 0x05, 0x5e, 0x3b, 0x0a, 0xbb, 0xc3, 0xea, 0xce, 0x87, 0x19, 0xca, 0xa8, 0x02, 0x65,
				0xc9, 0x72, 0x05, 0xd5, 0xdc, 0x4b, 0xcc, 0x90, 0x2f, 0xe1, 0x83, 0x96, 0x29, 0xed, 0x71, 0x32,
				0x8a, 0x0f, 0x04, 0x49, 0xf5, 0x88, 0x55, 0x7e, 0x68, 0x98, 0x86, 0x0e, 0x04, 0x2a, 0xec, 0xd8,
				0x4b, 0x24, 0x04, 0xc2, 0x12, 0xc9, 0x22, 0x2d, 0xa5, 0xbf, 0x8a, 0x89, 0xef, 0x67, 0x97, 0x87,
				0x0c, 0xf5, 0x07, 0x71, 0xa6, 0x0f, 0x66, 0xa2, 0xee, 0x62, 0x85, 0x36, 0x57, 0xad, 0xdf, 0x04,
				0xcd, 0xde, 0x07, 0xfa, 0x41, 0x4e, 0x11, 0xf1, 0x2b, 0x4d, 0x81, 0xb9, 0xb4, 0xe8, 0xac, 0x53,
				0x8e, 0xa3, 0x06, 0x66, 0x68, 0x8d, 0x88, 0x1f, 0x6c, 0x34, 0x84, 0x21, 0x99, 0x2f, 0x31, 0xb9,
				0x4f, 0x88, 0x06, 0xed, 0x8f, 0xcc, 0xff, 0x4c, 0x91, 0x23, 0xb8, 0x96, 0x42, 0x52, 0x7a, 0xd6,
				0x13, 0xb1, 0x09, 0xbf, 0x75, 0x16, 0x74, 0x85, 0xf1, 0x26, 0x8b, 0xf8, 0x84, 0xb4, 0xcd, 0x23,
				0xd2, 0x9a, 0x09, 0x34, 0x92, 0x57, 0x03, 0xd6, 0x34, 0x09, 0x8f, 0x77, 0x67, 0xf1, 0xbe, 0x74,
				0x91, 0xe7, 0x08, 0xa8, 0xbb, 0x94, 0x9a, 0x38, 0x73, 0x70, 0x8a, 0xef, 0x4a, 0x36, 0x23, 0x9e,
				0x50, 0xcc, 0x08, 0x23, 0x5c, 0xd5, 0xed, 0x6b, 0xbe, 0x57, 0x86, 0x68, 0xa1, 0x7b, 0x58, 0xc1,
				0x17, 0x1d, 0x0b, 0x90, 0xe8, 0x13, 0xa9, 0xe4, 0xf5, 0x8a, 0x89, 0xd7, 0x19, 0xb1, 0x10, 0x42,
				0xd6, 0x36, 0x0b, 0x1b, 0x0f, 0x52, 0xde, 0xb7, 0x30, 0xa5, 0x8d, 0x58, 0xfa, 0xf4, 0x63, 0x15,
				0x95, 0x4b, 0x0a, 0x87, 0x26, 0x91, 0x47, 0x59, 0x77, 0xdc, 0x88, 0xc0, 0xd7, 0x33, 0xfe, 0xff,
				0x54, 0x60, 0x0a, 0x0c, 0xc1, 0xd0, 0x30, 0x0a, 0xaa, 0xeb, 0x94, 0x57, 0x2c, 0x6e, 0x95, 0xb0,
				0x1a, 0xe9, 0x0d, 0xe0, 0x4f, 0x1d, 0xce, 0x47, 0xf8, 0x7e, 0x8f, 0xa7, 0xbe, 0xbf, 0x77, 0xe1,
				0xdb, 0xc2, 0x0d, 0x6b, 0xa8, 0x5c, 0xb9, 0x14, 0x3d, 0x51, 0x8b, 0x28, 0x5d, 0xfa, 0x04, 0xb6,
				0x98, 0xbf, 0x0c, 0xf7, 0x81, 0x9f, 0x20, 0xfa, 0x7a, 0x28, 0x8e, 0xb0, 0x70, 0x3d, 0x99, 0x5c,
				0x59, 0x94, 0x0c, 0x7c, 0x66, 0xde, 0x57, 0xa9, 0xb7, 0x0f, 0x82, 0x37, 0x9b, 0x70, 0xe2, 0x03,
				0x1e, 0x45, 0x0f, 0xcf, 0xd2, 0x18, 0x13, 0x26, 0xfc, 0xd2, 0x8d, 0x88, 0x23, 0xba, 0xaa, 0x80,
				0xdf, 0x6e, 0x0f, 0x44, 0x35, 0x59, 0x64, 0x75, 0x39, 0xfd, 0x89, 0x07, 0xc0, 0xff, 0xd9, 0xd7,
				0x9c, 0x13, 0x0e, 0xd8, 0x1c, 0x9a, 0xfd, 0x9b, 0x7e, 0x84, 0x8c, 0x9f, 0xed, 0x38, 0x44, 0x3d,
				0x5d, 0x38, 0x0e, 0x53, 0xfb, 0xdb, 0x8a, 0xc8, 0xc3, 0xd3, 0xf0, 0x68, 0x76, 0x05, 0x4f, 0x12,
				0x24, 0x61, 0x10, 0x7d, 0xe9, 0x2f, 0xea, 0x09, 0xc6, 0xf6, 0x92, 0x3a, 0x18, 0x8d, 0x53, 0xaf,
				0xe5, 0x4a, 0x10, 0xf6, 0x0e, 0x6e, 0x9d, 0x5a, 0x03, 0xd9, 0x96, 0xb5, 0xfb, 0xc8, 0x20, 0xf8,
				0xa6, 0x37, 0x11, 0x6a, 0x27, 0xad, 0x04, 0xb4, 0x44, 0xa0, 0x93, 0x2d, 0xd6, 0x0f, 0xbd, 0x12,
				0x67, 0x1c, 0x11, 0xe1, 0xc0, 0xec, 0x73, 0xe7, 0x89, 0x87, 0x9f, 0xaa, 0x3d, 0x42, 0xc6, 0x4d,
				0x20, 0xcd, 0x12, 0x52, 0x74, 0x2a, 0x37, 0x68, 0xc2, 0x5a, 0x90, 0x15, 0x85, 0x88, 0x8e, 0xce,
				0xe1, 0xe6, 0x12, 0xd9, 0x93, 0x6b, 0x40, 0x3b, 0x07, 0x75, 0x94, 0x9a, 0x66, 0xcd, 0xfd, 0x99,
				0xa2, 0x9b, 0x13, 0x45, 0xba, 0xa8, 0xd9, 0xd5, 0x40, 0x0c, 0x91, 0x02, 0x4b, 0x0a, 0x60, 0x73,
				0x63, 0xb0, 0x13, 0xce, 0x5d, 0xe9, 0xae, 0x86, 0x9d, 0x3b, 0x8d, 0x95, 0xb0, 0x57, 0x0b, 0x3c,
				0x2d, 0x39, 0x14, 0x22, 0xd3, 0x24, 0x50, 0xcb, 0xcf, 0xae, 0x96, 0x65, 0x22, 0x86, 0xe9, 0x6d,
				0xec, 0x12, 0x14, 0xa9, 0x34, 0x65, 0x27, 0x98, 0x0a, 0x81, 0x92, 0xea, 0xc1, 0xc3, 0x9a, 0x3a,
				0xaf, 0x6f, 0x15, 0x35, 0x1d, 0xa6, 0xbe, 0x76, 0x4d, 0xf8, 0x97, 0x72, 0xec, 0x04, 0x07, 0xd0,
				0x6e, 0x44, 0x15, 0xbe, 0xfa, 0xe7, 0xc9, 0x25, 0x80, 0xdf, 0x9b, 0xf5, 0x07, 0x49, 0x7c, 0x8f,
				0x29, 0x95, 0x16, 0x0d, 0x4e, 0x21, 0x8d, 0xaa, 0xcb, 0x02, 0x94, 0x4a, 0xbf, 0x83, 0x34, 0x0c,
				0xe8, 0xbe, 0x16, 0x86, 0xa9, 0x60, 0xfa, 0xf9, 0x0e, 0x2d, 0x90, 0xc5, 0x5c, 0xc6, 0x47, 0x5b,
				0xab, 0xc3, 0x17, 0x1a, 0x80, 0xa3, 0x63, 0x17, 0x49, 0x54, 0x95, 0x5d, 0x71, 0x01, 0xda, 0xb1,
				0x6a, 0xe8, 0x17, 0x91, 0x67, 0xe2, 0x14, 0x44, 0xb4, 0x43, 0xa9, 0xea, 0xaa, 0x7c, 0x91, 0xde,
				0x36, 0xd1, 0x18, 0xc3, 0x9d, 0x38, 0x9f, 0x8d, 0xd4, 0x46, 0x9a, 0x84, 0x6c, 0x9a, 0x26, 0x2b,
				0xf7, 0xfa, 0x18, 0x48, 0x7a, 0x79, 0xe8, 0xde, 0x11, 0x69, 0x9e, 0x0b, 0x8f, 0xdf, 0x55, 0x7c,
				0xb4, 0x87, 0x19, 0xd4, 0x53, 0xba, 0x71, 0x30, 0x56, 0x10, 0x9b, 0x93, 0xa2, 0x18, 0xc8, 0x96,
				0x75, 0xac, 0x19, 0x5f, 0xb4, 0xfb, 0x06, 0x63, 0x9b, 0x37, 0x97, 0x14, 0x49, 0x55, 0xb3, 0xc9,
				0x32, 0x7d, 0x1a, 0xec, 0x00, 0x3d, 0x42, 0xec, 0xd0, 0xea, 0x98, 0xab, 0xf1, 0x9f, 0xfb, 0x4a,
				0xf3, 0x56, 0x1a, 0x67, 0xe7, 0x7c, 0x35, 0xbf, 0x15, 0xc5, 0x9c, 0x24, 0x12, 0xda, 0x88, 0x1d,
				0xb0, 0x2b, 0x1b, 0xfb, 0xce, 0xbf, 0xac, 0x51, 0x52, 0xbc, 0x99, 0xbc, 0x3f, 0x1d, 0x15, 0xf7,
				0x71, 0x00, 0x1b, 0x70, 0x29, 0xfe, 0xdb, 0x02, 0x8f, 0x8b, 0x85, 0x2b, 0xc4, 0x40, 0x7e, 0xb8,
				0x3f, 0x89, 0x1c, 0x9c, 0xa7, 0x33, 0x25, 0x4f, 0xdd, 0x1e, 0x9e, 0xdb, 0x56, 0x91, 0x9c, 0xe9,
				0xfe, 0xa2, 0x1c, 0x17, 0x40, 0x72, 0x52, 0x1c, 0x18, 0x31, 0x9a, 0x54, 0xb5, 0xd4, 0xef, 0xbe,
				0xbd, 0xdf, 0x1d, 0x8b, 0x69, 0xb1, 0xcb, 0xf2, 0x5f, 0x48, 0x9f, 0xcc, 0x98, 0x13, 0x72, 0x54,
				0x7c, 0xf4, 0x1d, 0x00, 0x8e, 0xf0, 0xbc, 0xa1, 0x92, 0x6f, 0x93, 0x4b, 0x73, 0x5e, 0x09, 0x0b,
				0x3b, 0x25, 0x1e, 0xb3, 0x3a, 0x36, 0xf8, 0x2e, 0xd9, 0xb2, 0x9c, 0xf4, 0xcb, 0x94, 0x41, 0x88,
				0xfa, 0x0e, 0x1e, 0x38, 0xdd, 0x77, 0x8f, 0x7d, 0x1c, 0x9d, 0x98, 0x7b, 0x28, 0xd1, 0x32, 0xdf,
				0xb9, 0x73, 0x1f, 0xa4, 0xf4, 0xb4, 0x16, 0x93, 0x5b, 0xe4, 0x9d, 0xe3, 0x05, 0x16, 0xaf, 0x35,
				0x78, 0x58, 0x1f, 0x2f, 0x13, 0xf5, 0x61, 0xc0, 0x66, 0x33, 0x61, 0x94, 0x1e, 0xab, 0x24, 0x9a,
				0x4b, 0xc1, 0x23, 0xf8, 0xd1, 0x5c, 0xd7, 0x11, 0xa9, 0x56, 0xa1, 0xbf, 0x20, 0xfe, 0x6e, 0xb7,
				0x8a, 0xea, 0x23, 0x73, 0x36, 0x1d, 0xa0, 0x42, 0x6c, 0x79, 0xa5, 0x30, 0xc3, 0xbb, 0x1d, 0xe0,
				0xc9, 0x97, 0x22, 0xef, 0x1f, 0xde, 0x39, 0xac, 0x2b, 0x00, 0xa0, 0xa8, 0xee, 0x7c, 0x80, 0x0a,
				0x08, 0xbc, 0x22, 0x64, 0xf8, 0x9f, 0x4e, 0xff, 0xe6, 0x27, 0xac, 0x2f, 0x05, 0x31, 0xfb, 0x55,
				0x4f, 0x6d, 0x21, 0xd7, 0x4c, 0x59, 0x0a, 0x70, 0xad, 0xfa, 0xa3, 0x90, 0xbd, 0xfb, 0xb3, 0xd6,
				0x8e, 0x46, 0x21, 0x5c, 0xab, 0x18, 0x7d, 0x23, 0x68, 0xd5, 0xa7, 0x1f, 0x5e, 0xbe, 0xc0, 0x81,
				0xcd, 0x3b, 0x20, 0xc0, 0x82, 0xdb, 0xe4, 0xcd, 0x2f, 0xac, 0xa2, 0x87, 0x73, 0x79, 0x5d, 0x6b,
				0x0c, 0x10, 0x20, 0x4b, 0x65, 0x9a, 0x93, 0x9e, 0xf2, 0x9b, 0xbe, 0x10, 0x88, 0x24, 0x36, 0x24,
				0x42, 0x99, 0x27, 0xa7, 0xeb, 0x57, 0x6d, 0xd3, 0xa0, 0x0e, 0xa5, 0xe0, 0x1a, 0xf5, 0xd4, 0x75,
				0x83, 0xb2, 0x27, 0x2c, 0x0c, 0x16, 0x1a, 0x80, 0x65, 0x21, 0xa1, 0x6f, 0xf9, 0xb0, 0xa7, 0x22,
				0xc0, 0xcf, 0x26, 0xb0, 0x25, 0xd5, 0x83, 0x6e, 0x22, 0x58, 0xa4, 0xf7, 0xd4, 0x77, 0x3a, 0xc8,
				0x01, 0xe4, 0x26, 0x3b, 0xc2, 0x94, 0xf4, 0x3d, 0xef, 0x7f, 0xa8, 0x70, 0x3f, 0x3a, 0x41, 0x97,
				0x46, 0x35, 0x25, 0x88, 0x76, 0x52, 0xb0, 0xb2, 0xa4, 0xa2, 0xa7, 0xcf, 0x87, 0xf0, 0x09, 0x14,
				0x87, 0x1e, 0x25, 0x03, 0x91, 0x13, 0xc7, 0xe1, 0x61, 0x8d, 0xa3, 0x40, 0x64, 0xb5, 0x7a, 0x43,
				0xc4, 0x63, 0x24, 0x9f, 0xb8, 0xd0, 0x5e, 0x0f, 0x26, 0xf4, 0xa6, 0xd8, 0x49, 0x72, 0xe7, 0xa9,
				0x05, 0x48, 0x24, 0x14, 0x5f, 0x91, 0x29, 0x5c, 0xdb, 0xe3, 0x9a, 0x6f, 0x92, 0x0f, 0xac, 0xc6,
				0x59, 0x71, 0x2b, 0x46, 0xa5, 0x4b, 0xa2, 0x95, 0xbb, 0xe6, 0xa9, 0x01, 0x54, 0xe9, 0x1b, 0x33,
				0x98, 0x5a, 0x2b, 0xcd, 0x42, 0x0a, 0xd5, 0xc6, 0x7e, 0xc9, 0xad, 0x8e, 0xb7, 0xac, 0x68, 0x64,
				0xdb, 0x27, 0x2a, 0x51, 0x6b, 0xc9, 0x4c, 0x28, 0x39, 0xb0, 0xa8, 0x16, 0x9a, 0x6b, 0xf5, 0x8e,
				0x1a, 0x0c, 0x2a, 0xda, 0x8c, 0x88, 0x3b, 0x7b, 0xf4, 0x97, 0xa4, 0x91, 0x71, 0x26, 0x8e, 0xd1,
				0x5d, 0xdd, 0x29, 0x69, 0x38, 0x4e, 0x7f, 0xf4, 0xbf, 0x4a, 0xab, 0x2e, 0xc9, 0xec, 0xc6, 0x52,
				0x9c, 0xf6, 0x29, 0xe2, 0xdf, 0x0f, 0x08, 0xa7, 0x7a, 0x65, 0xaf, 0xa1, 0x2a, 0xa9, 0xb5, 0x05,
				0xdf, 0x8b, 0x28, 0x7e, 0xf6, 0xcc, 0x91, 0x49, 0x3d, 0x1c, 0xaa, 0x39, 0x07, 0x6e, 0x28, 0xef,
				0x1e, 0xa0, 0x28, 0xf5, 0x11, 0x8d, 0xe6, 0x1a, 0xe0, 0x2b, 0xb6, 0xae, 0xfc, 0x33, 0x43, 0xa0,
				0x50, 0x29, 0x2f, 0x19, 0x9f, 0x40, 0x18, 0x57, 0xb2, 0xbe, 0xad, 0x5e, 0x6e, 0xe2, 0xa1, 0xf1,
				0x91, 0x02, 0x2f, 0x92, 0x78, 0x01, 0x6f, 0x04, 0x77, 0x91, 0xa9, 0xd1, 0x8d, 0xa7, 0xd2, 0xa6,
				0xd2, 0x7f, 0x2e, 0x0e, 0x51, 0xc2, 0xf6, 0xea, 0x30, 0xe8, 0xac, 0x49, 0xa0, 0x60, 0x4f, 0x4c,
				0x13, 0x54, 0x2e, 0x85, 0xb6, 0x83, 0x81, 0xb9, 0xfd, 0xcf, 0xa0, 0xce, 0x4b, 0x2d, 0x34, 0x13,
				0x54, 0x85, 0x2d, 0x36, 0x02, 0x45, 0xc5, 0x36, 0xb6, 0x12, 0xaf, 0x71, 0xf3, 0xe7, 0x7c, 0x90,
				0x95, 0xae, 0x2d, 0xbd, 0xe5, 0x04, 0xb2, 0x65, 0x73, 0x3d, 0xab, 0xfe, 0x10, 0xa2, 0x0f, 0xc7,
				0xd6, 0xd3, 0x2c, 0x21, 0xcc, 0xc7, 0x2b, 0x8b, 0x34, 0x44, 0xae, 0x66, 0x3d, 0x65, 0x92, 0x2d,
				0x17, 0xf8, 0x2c, 0xaa, 0x2b, 0x86, 0x5c, 0xd8, 0x89, 0x13, 0xd2, 0x91, 0xa6, 0x58, 0x99, 0x02,
				0x6e, 0xa1, 0x32, 0x84, 0x39, 0x72, 0x3c, 0x19, 0x8c, 0x36, 0xb0, 0xc3, 0xc8, 0xd0, 0x85, 0xbf,
				0xaf, 0x8a, 0x32, 0x0f, 0xde, 0x33, 0x4b, 0x4a, 0x49, 0x19, 0xb4, 0x4c, 0x2b, 0x95, 0xf6, 0xe8,
				0xec, 0xf7, 0x33, 0x93, 0xf7, 0xf0, 0xd2, 0xa4, 0x0e, 0x60, 0xb1, 0xd4, 0x06, 0x52, 0x6b, 0x02,
				0x2d, 0xdc, 0x33, 0x18, 0x10, 0xb1, 0xa5, 0xf7, 0xc3, 0x47, 0xbd, 0x53, 0xed, 0x1f, 0x10, 0x5d,
				0x6a, 0x0d, 0x30, 0xab, 0xa4, 0x77, 0xe1, 0x78, 0x88, 0x9a, 0xb2, 0xec, 0x55, 0xd5, 0x58, 0xde,
				0xab, 0x26, 0x30, 0x20, 0x43, 0x36, 0x96, 0x2b, 0x4d, 0xb5, 0xb6, 0x63, 0xb6, 0x90, 0x2b, 0x89,
				0xe8, 0x5b, 0x31, 0xbc, 0x6a, 0xf5, 0x0f, 0xc5, 0x0a, 0xcc, 0xb3, 0xfb, 0x9b, 0x57, 0xb6, 0x63,
				0x29, 0x70, 0x31, 0x37, 0x8d, 0xb4, 0x78, 0x96, 0xd7, 0xfb, 0xaf, 0x6c, 0x60, 0x0a, 0xdd, 0x2c,
				0x67, 0xf9, 0x36, 0xdb, 0x03, 0x79, 0x86, 0xdb, 0x85, 0x6e, 0xb4, 0x9c, 0xf2, 0xdb, 0x3f, 0x7d,
				0xa6, 0xd2, 0x36, 0x50, 0xe4, 0x38, 0xf1, 0x88, 0x40, 0x41, 0xb0, 0x13, 0x11, 0x9e, 0x4c, 0x2a,
				0xe5, 0xaf, 0x37, 0xcc, 0xcd, 0xfb, 0x68, 0x66, 0x07, 0x38, 0xb5, 0x8b, 0x3c, 0x59, 0xd1, 0xc0,
				0x24, 0x84, 0x37, 0x47, 0x2a, 0xba, 0x1f, 0x35, 0xca, 0x1f, 0xb9, 0x0c, 0xd7, 0x14, 0xaa, 0x9f,
				0x63, 0x55, 0x34, 0xf4, 0x9e, 0x7c, 0x5b, 0xba, 0x81, 0xc2, 0xb6, 0xb3, 0x6f, 0xde, 0xe2, 0x1c,
				0xa2, 0x7e, 0x34, 0x7f, 0x79, 0x3d, 0x2c, 0xe9, 0x44, 0xed, 0xb2, 0x3c, 0x8c, 0x9b, 0x91, 0x4b,
				0xe1, 0x03, 0x35, 0xe3, 0x50, 0xfe, 0xb5, 0x07, 0x03, 0x94, 0xb7, 0xa4, 0xa1, 0x5c, 0x0c, 0xa1,
				0x20, 0x28, 0x35, 0x68, 0xb7, 0xbf, 0xc2, 0x54, 0xfe, 0x83, 0x8b, 0x13, 0x7a, 0x21, 0x47, 0xce,
				0x7c, 0x11, 0x3a, 0x3a, 0x4d, 0x65, 0x49, 0x9d, 0x9e, 0x86, 0xb8, 0x7d, 0xbc, 0xc7, 0xf0, 0x3b,
				0xbd, 0x3a, 0x3a, 0xb1, 0xaa, 0x24, 0x3e, 0xce, 0x5b, 0xa9, 0xbc, 0xf2, 0x5f, 0x82, 0x83, 0x6c,
				0xfe, 0x47, 0x3b, 0x2d, 0x83, 0xe7, 0xa7, 0x20, 0x1c, 0xd0, 0xb9, 0x6a, 0x72, 0x45, 0x1e, 0x86,
				0x3f, 0x6c, 0x3b, 0xa6, 0x64, 0xa6, 0xd0, 0x73, 0xd1, 0xf7, 0xb5, 0xed, 0x99, 0x08, 0x65, 0xd9,
				0x78, 0xbd, 0x38, 0x15, 0xd0, 0x60, 0x94, 0xfc, 0x9a, 0x2a, 0xba, 0x52, 0x21, 0xc2, 0x2d, 0x5a,
				0xb9, 0x96, 0x38, 0x9e, 0x37, 0x21, 0xe3, 0xaf, 0x5f, 0x05, 0xbe, 0xdd, 0xc2, 0x87, 0x5e, 0x0d,
				0xfa, 0xeb, 0x39, 0x02, 0x1e, 0xe2, 0x7a, 0x41, 0x18, 0x7c, 0xbb, 0x45, 0xef, 0x40, 0xc3, 0xe7,
				0x3b, 0xc0, 0x39, 0x89, 0xf9, 0xa3, 0x0d, 0x12, 0xc5, 0x4b, 0xa7, 0xd2, 0x14, 0x1d, 0xa8, 0xa8,
				0x75, 0x49, 0x3e, 0x65, 0x77, 0x6e, 0xf3, 0x5f, 0x97, 0xde, 0xbc, 0x22, 0x86, 0xcc, 0x4a, 0xf9,
				0xb4, 0x62, 0x3e, 0xee, 0x90, 0x2f, 0x84, 0x0c, 0x52, 0xf1, 0xb8, 0xad, 0x65, 0x89, 0x39, 0xae,
				0xf7, 0x1f, 0x3f, 0x72, 0xb9, 0xec, 0x1d, 0xe2, 0x15, 0x88, 0xbd, 0x35, 0x48, 0x4e, 0xa4, 0x44,
				0x36, 0x34, 0x3f, 0xf9, 0x5e, 0xad, 0x6a, 0xb1, 0xd8, 0xaf, 0xb1, 0xb2, 0xa3, 0x03, 0xdf, 0x1b,
				0x71, 0xe5, 0x3c, 0x4a, 0xea, 0x6b, 0x2e, 0x3e, 0x93, 0x72, 0xbe, 0x0d, 0x1b, 0xc9, 0x97, 0x98,
				0xb0, 0xce, 0x3c, 0xc1, 0x0d, 0x2a, 0x59, 0x6d, 0x56, 0x5d, 0xba, 0x82, 0xf8, 0x8c, 0xe4, 0xcf,
				0xf3, 0xb3, 0x3d, 0x5d, 0x24, 0xe9, 0xc0, 0x83, 0x11, 0x24, 0xbf, 0x1a, 0xd5, 0x4b, 0x79, 0x25,
				0x32, 0x98, 0x3d, 0xd6, 0xc3, 0xa8, 0xb7, 0xd0,
			},
			MacI: 0xabf3e651,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			buf, err := NIA1(tc.Ik, tc.CountI, tc.Bearer, tc.Direction, tc.Msg, tc.Length)
			require.NoError(t, err)
			mac := binary.BigEndian.Uint32(buf)
			require.Equal(t, tc.MacI, mac)
		})
	}
}

func TestNEA2(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		CountC    uint32
		Bearer    uint8
		Direction uint8
		Ck        [16]byte
		Length    uint32
		Ibs       []byte
		Obs       []byte
	}{
		{
			name:      "NEA2TestCase1",
			CountC:    0x398a59b4,
			Bearer:    0x15,
			Direction: 1,
			Ck:        [16]byte{0xd3, 0xc5, 0xd5, 0x92, 0x32, 0x7f, 0xb1, 0x1c, 0x40, 0x35, 0xc6, 0x68, 0x0a, 0xf8, 0xc6, 0xd1},
			Length:    248,
			Ibs: []byte{
				0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29, 0xb7, 0x1d, 0x80,
				0x8c, 0xe3, 0x3e, 0x2c, 0xc3, 0xc0, 0xb5, 0xfc, 0x1f, 0x3d, 0xe8, 0xa6, 0xdc, 0x66, 0xb1,
			},
			Obs: []byte{
				0xe9, 0xfe, 0xd8, 0xa6, 0x3d, 0x15, 0x53, 0x04, 0xd7, 0x1d, 0xf2, 0x0b, 0xf3, 0xe8, 0x22, 0x14,
				0xb2, 0x0e, 0xd7, 0xda, 0xd2, 0xf2, 0x33, 0xdc, 0x3c, 0x22, 0xd7, 0xbd, 0xee, 0xed, 0x8e,
			},
		},
		{
			name:      "NEA2TestCase2",
			CountC:    0xc675a64b,
			Bearer:    0x0c,
			Direction: 1,
			Ck:        [16]byte{0x2b, 0xd6, 0x45, 0x9f, 0x82, 0xc4, 0x40, 0xe0, 0x95, 0x2c, 0x49, 0x10, 0x48, 0x05, 0xff, 0x48},
			Length:    792,
			Ibs: []byte{
				0x7e, 0xc6, 0x12, 0x72, 0x74, 0x3b, 0xf1, 0x61, 0x47, 0x26, 0x44, 0x6a, 0x6c, 0x38, 0xce, 0xd1,
				0x66, 0xf6, 0xca, 0x76, 0xeb, 0x54, 0x30, 0x04, 0x42, 0x86, 0x34, 0x6c, 0xef, 0x13, 0x0f, 0x92,
				0x92, 0x2b, 0x03, 0x45, 0x0d, 0x3a, 0x99, 0x75, 0xe5, 0xbd, 0x2e, 0xa0, 0xeb, 0x55, 0xad, 0x8e,
				0x1b, 0x19, 0x9e, 0x3e, 0xc4, 0x31, 0x60, 0x20, 0xe9, 0xa1, 0xb2, 0x85, 0xe7, 0x62, 0x79, 0x53,
				0x59, 0xb7, 0xbd, 0xfd, 0x39, 0xbe, 0xf4, 0xb2, 0x48, 0x45, 0x83, 0xd5, 0xaf, 0xe0, 0x82, 0xae,
				0xe6, 0x38, 0xbf, 0x5f, 0xd5, 0xa6, 0x06, 0x19, 0x39, 0x01, 0xa0, 0x8f, 0x4a, 0xb4, 0x1a, 0xab,
				0x9b, 0x13, 0x48,
			},
			Obs: []byte{
				0x59, 0x61, 0x60, 0x53, 0x53, 0xc6, 0x4b, 0xdc, 0xa1, 0x5b, 0x19, 0x5e, 0x28, 0x85, 0x53, 0xa9,
				0x10, 0x63, 0x25, 0x06, 0xd6, 0x20, 0x0a, 0xa7, 0x90, 0xc4, 0xc8, 0x06, 0xc9, 0x99, 0x04, 0xcf,
				0x24, 0x45, 0xcc, 0x50, 0xbb, 0x1c, 0xf1, 0x68, 0xa4, 0x96, 0x73, 0x73, 0x4e, 0x08, 0x1b, 0x57,
				0xe3, 0x24, 0xce, 0x52, 0x59, 0xc0, 0xe7, 0x8d, 0x4c, 0xd9, 0x7b, 0x87, 0x09, 0x76, 0x50, 0x3c,
				0x09, 0x43, 0xf2, 0xcb, 0x5a, 0xe8, 0xf0, 0x52, 0xc7, 0xb7, 0xd3, 0x92, 0x23, 0x95, 0x87, 0xb8,
				0x95, 0x60, 0x86, 0xbc, 0xab, 0x18, 0x83, 0x60, 0x42, 0xe2, 0xe6, 0xce, 0x42, 0x43, 0x2a, 0x17,
				0x10, 0x5c, 0x53,
			},
		},
		{
			name:      "NEA2TestCase3",
			CountC:    0x544d49cd,
			Bearer:    0x04,
			Direction: 0,
			Ck:        [16]byte{0x0a, 0x8b, 0x6b, 0xd8, 0xd9, 0xb0, 0x8b, 0x08, 0xd6, 0x4e, 0x32, 0xd1, 0x81, 0x77, 0x77, 0xfb},
			Length:    304,
			Ibs: []byte{
				0xfd, 0x40, 0xa4, 0x1d, 0x37, 0x0a, 0x1f, 0x65, 0x74, 0x50, 0x95, 0x68, 0x7d, 0x47, 0xba, 0x1d,
				0x36, 0xd2, 0x34, 0x9e, 0x23, 0xf6, 0x44, 0x39, 0x2c, 0x8e, 0xa9, 0xc4, 0x9d, 0x40, 0xc1, 0x32,
				0x71, 0xaf, 0xf2, 0x64, 0xd0, 0xf2,
			},
			Obs: []byte{
				0x75, 0x75, 0x0d, 0x37, 0xb4, 0xbb, 0xa2, 0xa4, 0xde, 0xdb, 0x34, 0x23, 0x5b, 0xd6, 0x8c, 0x66,
				0x45, 0xac, 0xda, 0xac, 0xa4, 0x81, 0x38, 0xa3, 0xb0, 0xc4, 0x71, 0xe2, 0xa7, 0x04, 0x1a, 0x57,
				0x64, 0x23, 0xd2, 0x92, 0x72, 0x87,
			},
		},
		{
			name:      "NEA2TestCase4",
			CountC:    0x72d8c671,
			Bearer:    0x10,
			Direction: 1,
			Ck:        [16]byte{0xaa, 0x1f, 0x95, 0xae, 0xa5, 0x33, 0xbc, 0xb3, 0x2e, 0xb6, 0x3b, 0xf5, 0x2d, 0x8f, 0x83, 0x1a},
			Length:    1016,
			Ibs: []byte{
				0xfb, 0x1b, 0x96, 0xc5, 0xc8, 0xba, 0xdf, 0xb2, 0xe8, 0xe8, 0xed, 0xfd, 0xe7, 0x8e, 0x57, 0xf2,
				0xad, 0x81, 0xe7, 0x41, 0x03, 0xfc, 0x43, 0x0a, 0x53, 0x4d, 0xcc, 0x37, 0xaf, 0xce, 0xc7, 0x0e,
				0x15, 0x17, 0xbb, 0x06, 0xf2, 0x72, 0x19, 0xda, 0xe4, 0x90, 0x22, 0xdd, 0xc4, 0x7a, 0x06, 0x8d,
				0xe4, 0xc9, 0x49, 0x6a, 0x95, 0x1a, 0x6b, 0x09, 0xed, 0xbd, 0xc8, 0x64, 0xc7, 0xad, 0xbd, 0x74,
				0x0a, 0xc5, 0x0c, 0x02, 0x2f, 0x30, 0x82, 0xba, 0xfd, 0x22, 0xd7, 0x81, 0x97, 0xc5, 0xd5, 0x08,
				0xb9, 0x77, 0xbc, 0xa1, 0x3f, 0x32, 0xe6, 0x52, 0xe7, 0x4b, 0xa7, 0x28, 0x57, 0x60, 0x77, 0xce,
				0x62, 0x8c, 0x53, 0x5e, 0x87, 0xdc, 0x60, 0x77, 0xba, 0x07, 0xd2, 0x90, 0x68, 0x59, 0x0c, 0x8c,
				0xb5, 0xf1, 0x08, 0x8e, 0x08, 0x2c, 0xfa, 0x0e, 0xc9, 0x61, 0x30, 0x2d, 0x69, 0xcf, 0x3d,
			},
			Obs: []byte{
				0xdf, 0xb4, 0x40, 0xac, 0xb3, 0x77, 0x35, 0x49, 0xef, 0xc0, 0x46, 0x28, 0xae, 0xb8, 0xd8, 0x15,
				0x62, 0x75, 0x23, 0x0b, 0xdc, 0x69, 0x0d, 0x94, 0xb0, 0x0d, 0x8d, 0x95, 0xf2, 0x8c, 0x4b, 0x56,
				0x30, 0x7f, 0x60, 0xf4, 0xca, 0x55, 0xeb, 0xa6, 0x61, 0xeb, 0xba, 0x72, 0xac, 0x80, 0x8f, 0xa8,
				0xc4, 0x9e, 0x26, 0x78, 0x8e, 0xd0, 0x4a, 0x5d, 0x60, 0x6c, 0xb4, 0x18, 0xde, 0x74, 0x87, 0x8b,
				0x9a, 0x22, 0xf8, 0xef, 0x29, 0x59, 0x0b, 0xc4, 0xeb, 0x57, 0xc9, 0xfa, 0xf7, 0xc4, 0x15, 0x24,
				0xa8, 0x85, 0xb8, 0x97, 0x9c, 0x42, 0x3f, 0x2f, 0x8f, 0x8e, 0x05, 0x92, 0xa9, 0x87, 0x92, 0x01,
				0xbe, 0x7f, 0xf9, 0x77, 0x7a, 0x16, 0x2a, 0xb8, 0x10, 0xfe, 0xb3, 0x24, 0xba, 0x74, 0xc4, 0xc1,
				0x56, 0xe0, 0x4d, 0x39, 0x09, 0x72, 0x09, 0x65, 0x3a, 0xc3, 0x3e, 0x5a, 0x5f, 0x2d, 0x88,
			},
		},
		{
			name:      "NEA2TestCase5",
			CountC:    0xc675a64b,
			Bearer:    0x0c,
			Direction: 1,
			Ck:        [16]byte{0x96, 0x18, 0xae, 0x46, 0x89, 0x1f, 0x86, 0x57, 0x8e, 0xeb, 0xe9, 0x0e, 0xf7, 0xa1, 0x20, 0x2e},
			Length:    1240,
			Ibs: []byte{
				0x8d, 0xaa, 0x17, 0xb1, 0xae, 0x05, 0x05, 0x29, 0xc6, 0x82, 0x7f, 0x28, 0xc0, 0xef, 0x6a, 0x12,
				0x42, 0xe9, 0x3f, 0x8b, 0x31, 0x4f, 0xb1, 0x8a, 0x77, 0xf7, 0x90, 0xae, 0x04, 0x9f, 0xed, 0xd6,
				0x12, 0x26, 0x7f, 0xec, 0xae, 0xfc, 0x45, 0x01, 0x74, 0xd7, 0x6d, 0x9f, 0x9a, 0xa7, 0x75, 0x5a,
				0x30, 0xcd, 0x90, 0xa9, 0xa5, 0x87, 0x4b, 0xf4, 0x8e, 0xaf, 0x70, 0xee, 0xa3, 0xa6, 0x2a, 0x25,
				0x0a, 0x8b, 0x6b, 0xd8, 0xd9, 0xb0, 0x8b, 0x08, 0xd6, 0x4e, 0x32, 0xd1, 0x81, 0x77, 0x77, 0xfb,
				0x54, 0x4d, 0x49, 0xcd, 0x49, 0x72, 0x0e, 0x21, 0x9d, 0xbf, 0x8b, 0xbe, 0xd3, 0x39, 0x04, 0xe1,
				0xfd, 0x40, 0xa4, 0x1d, 0x37, 0x0a, 0x1f, 0x65, 0x74, 0x50, 0x95, 0x68, 0x7d, 0x47, 0xba, 0x1d,
				0x36, 0xd2, 0x34, 0x9e, 0x23, 0xf6, 0x44, 0x39, 0x2c, 0x8e, 0xa9, 0xc4, 0x9d, 0x40, 0xc1, 0x32,
				0x71, 0xaf, 0xf2, 0x64, 0xd0, 0xf2, 0x48, 0x41, 0xd6, 0x46, 0x5f, 0x09, 0x96, 0xff, 0x84, 0xe6,
				0x5f, 0xc5, 0x17, 0xc5, 0x3e, 0xfc, 0x33, 0x63, 0xc3, 0x84, 0x92,
			},
			Obs: []byte{
				0x91, 0x9c, 0x8c, 0x33, 0xd6, 0x67, 0x89, 0x70, 0x3d, 0x05, 0xa0, 0xd7, 0xce, 0x82, 0xa2, 0xae,
				0xac, 0x4e, 0xe7, 0x6c, 0x0f, 0x4d, 0xa0, 0x50, 0x33, 0x5e, 0x8a, 0x84, 0xe7, 0x89, 0x7b, 0xa5,
				0xdf, 0x2f, 0x36, 0xbd, 0x51, 0x3e, 0x3d, 0x0c, 0x85, 0x78, 0xc7, 0xa0, 0xfc, 0xf0, 0x43, 0xe0,
				0x3a, 0xa3, 0xa3, 0x9f, 0xba, 0xad, 0x7d, 0x15, 0xbe, 0x07, 0x4f, 0xaa, 0x5d, 0x90, 0x29, 0xf7,
				0x1f, 0xb4, 0x57, 0xb6, 0x47, 0x83, 0x47, 0x14, 0xb0, 0xe1, 0x8f, 0x11, 0x7f, 0xca, 0x10, 0x67,
				0x79, 0x45, 0x09, 0x6c, 0x8c, 0x5f, 0x32, 0x6b, 0xa8, 0xd6, 0x09, 0x5e, 0xb2, 0x9c, 0x3e, 0x36,
				0xcf, 0x24, 0x5d, 0x16, 0x22, 0xaa, 0xfe, 0x92, 0x1f, 0x75, 0x66, 0xc4, 0xf5, 0xd6, 0x44, 0xf2,
				0xf1, 0xfc, 0x0e, 0xc6, 0x84, 0xdd, 0xb2, 0x13, 0x49, 0x74, 0x76, 0x22, 0xe2, 0x09, 0x29, 0x5d,
				0x27, 0xff, 0x3f, 0x95, 0x62, 0x33, 0x71, 0xd4, 0x9b, 0x14, 0x7c, 0x0a, 0xf4, 0x86, 0x17, 0x1f,
				0x22, 0xcd, 0x04, 0xb1, 0xcb, 0xeb, 0x26, 0x58, 0x22, 0x3e, 0x69,
			},
		},
		{
			name:      "NEA2TestCase6",
			CountC:    0xaca4f50f,
			Bearer:    0x0b,
			Direction: 0,
			Ck:        [16]byte{0x54, 0xf4, 0xe2, 0xe0, 0x4c, 0x83, 0x78, 0x6e, 0xec, 0x8f, 0xb5, 0xab, 0xe8, 0xe3, 0x65, 0x66},
			Length:    3856,
			Ibs: []byte{
				0x40, 0x98, 0x1b, 0xa6, 0x82, 0x4c, 0x1b, 0xfb, 0x42, 0x86, 0xb2, 0x99, 0x78, 0x3d, 0xaf, 0x44,
				0x2c, 0x09, 0x9f, 0x7a, 0xb0, 0xf5, 0x8d, 0x5c, 0x8e, 0x46, 0xb1, 0x04, 0xf0, 0x8f, 0x01, 0xb4,
				0x1a, 0xb4, 0x85, 0x47, 0x20, 0x29, 0xb7, 0x1d, 0x36, 0xbd, 0x1a, 0x3d, 0x90, 0xdc, 0x3a, 0x41,
				0xb4, 0x6d, 0x51, 0x67, 0x2a, 0xc4, 0xc9, 0x66, 0x3a, 0x2b, 0xe0, 0x63, 0xda, 0x4b, 0xc8, 0xd2,
				0x80, 0x8c, 0xe3, 0x3e, 0x2c, 0xcc, 0xbf, 0xc6, 0x34, 0xe1, 0xb2, 0x59, 0x06, 0x08, 0x76, 0xa0,
				0xfb, 0xb5, 0xa4, 0x37, 0xeb, 0xcc, 0x8d, 0x31, 0xc1, 0x9e, 0x44, 0x54, 0x31, 0x87, 0x45, 0xe3,
				0xfa, 0x16, 0xbb, 0x11, 0xad, 0xae, 0x24, 0x88, 0x79, 0xfe, 0x52, 0xdb, 0x25, 0x43, 0xe5, 0x3c,
				0xf4, 0x45, 0xd3, 0xd8, 0x28, 0xce, 0x0b, 0xf5, 0xc5, 0x60, 0x59, 0x3d, 0x97, 0x27, 0x8a, 0x59,
				0x76, 0x2d, 0xd0, 0xc2, 0xc9, 0xcd, 0x68, 0xd4, 0x49, 0x6a, 0x79, 0x25, 0x08, 0x61, 0x40, 0x14,
				0xb1, 0x3b, 0x6a, 0xa5, 0x11, 0x28, 0xc1, 0x8c, 0xd6, 0xa9, 0x0b, 0x87, 0x97, 0x8c, 0x2f, 0xf1,
				0xca, 0xbe, 0x7d, 0x9f, 0x89, 0x8a, 0x41, 0x1b, 0xfd, 0xb8, 0x4f, 0x68, 0xf6, 0x72, 0x7b, 0x14,
				0x99, 0xcd, 0xd3, 0x0d, 0xf0, 0x44, 0x3a, 0xb4, 0xa6, 0x66, 0x53, 0x33, 0x0b, 0xcb, 0xa1, 0x10,
				0x5e, 0x4c, 0xec, 0x03, 0x4c, 0x73, 0xe6, 0x05, 0xb4, 0x31, 0x0e, 0xaa, 0xad, 0xcf, 0xd5, 0xb0,
				0xca, 0x27, 0xff, 0xd8, 0x9d, 0x14, 0x4d, 0xf4, 0x79, 0x27, 0x59, 0x42, 0x7c, 0x9c, 0xc1, 0xf8,
				0xcd, 0x8c, 0x87, 0x20, 0x23, 0x64, 0xb8, 0xa6, 0x87, 0x95, 0x4c, 0xb0, 0x5a, 0x8d, 0x4e, 0x2d,
				0x99, 0xe7, 0x3d, 0xb1, 0x60, 0xde, 0xb1, 0x80, 0xad, 0x08, 0x41, 0xe9, 0x67, 0x41, 0xa5, 0xd5,
				0x9f, 0xe4, 0x18, 0x9f, 0x15, 0x42, 0x00, 0x26, 0xfe, 0x4c, 0xd1, 0x21, 0x04, 0x93, 0x2f, 0xb3,
				0x8f, 0x73, 0x53, 0x40, 0x43, 0x8a, 0xaf, 0x7e, 0xca, 0x6f, 0xd5, 0xcf, 0xd3, 0xa1, 0x95, 0xce,
				0x5a, 0xbe, 0x65, 0x27, 0x2a, 0xf6, 0x07, 0xad, 0xa1, 0xbe, 0x65, 0xa6, 0xb4, 0xc9, 0xc0, 0x69,
				0x32, 0x34, 0x09, 0x2c, 0x4d, 0x01, 0x8f, 0x17, 0x56, 0xc6, 0xdb, 0x9d, 0xc8, 0xa6, 0xd8, 0x0b,
				0x88, 0x81, 0x38, 0x61, 0x6b, 0x68, 0x12, 0x62, 0xf9, 0x54, 0xd0, 0xe7, 0x71, 0x17, 0x48, 0x78,
				0x0d, 0x92, 0x29, 0x1d, 0x86, 0x29, 0x99, 0x72, 0xdb, 0x74, 0x1c, 0xfa, 0x4f, 0x37, 0xb8, 0xb5,
				0x6c, 0xdb, 0x18, 0xa7, 0xca, 0x82, 0x18, 0xe8, 0x6e, 0x4b, 0x4b, 0x71, 0x6a, 0x4d, 0x04, 0x37,
				0x1f, 0xbe, 0xc2, 0x62, 0xfc, 0x5a, 0xd0, 0xb3, 0x81, 0x9b, 0x18, 0x7b, 0x97, 0xe5, 0x5b, 0x1a,
				0x4d, 0x7c, 0x19, 0xee, 0x24, 0xc8, 0xb4, 0xd7, 0x72, 0x3c, 0xfe, 0xdf, 0x04, 0x5b, 0x8a, 0xca,
				0xe4, 0x86, 0x95, 0x17, 0xd8, 0x0e, 0x50, 0x61, 0x5d, 0x90, 0x35, 0xd5, 0xd9, 0xc5, 0xa4, 0x0a,
				0xf6, 0x02, 0x28, 0x0b, 0x54, 0x25, 0x97, 0xb0, 0xcb, 0x18, 0x61, 0x9e, 0xeb, 0x35, 0x92, 0x57,
				0x59, 0xd1, 0x95, 0xe1, 0x00, 0xe8, 0xe4, 0xaa, 0x0c, 0x38, 0xa3, 0xc2, 0xab, 0xe0, 0xf3, 0xd8,
				0xff, 0x04, 0xf3, 0xc3, 0x3c, 0x29, 0x50, 0x69, 0xc2, 0x36, 0x94, 0xb5, 0xbb, 0xea, 0xcd, 0xd5,
				0x42, 0xe2, 0x8e, 0x8a, 0x94, 0xed, 0xb9, 0x11, 0x9f, 0x41, 0x2d, 0x05, 0x4b, 0xe1, 0xfa, 0x72,
				0x00, 0xb0,
			},
			Obs: []byte{
				0x5c, 0xb7, 0x2c, 0x6e, 0xdc, 0x87, 0x8f, 0x15, 0x66, 0xe1, 0x02, 0x53, 0xaf, 0xc3, 0x64, 0xc9,
				0xfa, 0x54, 0x0d, 0x91, 0x4d, 0xb9, 0x4c, 0xbe, 0xe2, 0x75, 0xd0, 0x91, 0x7c, 0xa6, 0xaf, 0x0d,
				0x77, 0xac, 0xb4, 0xef, 0x3b, 0xbe, 0x1a, 0x72, 0x2b, 0x2e, 0xf5, 0xbd, 0x1d, 0x4b, 0x8e, 0x2a,
				0xa5, 0x02, 0x4e, 0xc1, 0x38, 0x8a, 0x20, 0x1e, 0x7b, 0xce, 0x79, 0x20, 0xae, 0xc6, 0x15, 0x89,
				0x5f, 0x76, 0x3a, 0x55, 0x64, 0xdc, 0xc4, 0xc4, 0x82, 0xa2, 0xee, 0x1d, 0x8b, 0xfe, 0xcc, 0x44,
				0x98, 0xec, 0xa8, 0x3f, 0xbb, 0x75, 0xf9, 0xab, 0x53, 0x0e, 0x0d, 0xaf, 0xbe, 0xde, 0x2f, 0xa5,
				0x89, 0x5b, 0x82, 0x99, 0x1b, 0x62, 0x77, 0xc5, 0x29, 0xe0, 0xf2, 0x52, 0x9d, 0x7f, 0x79, 0x60,
				0x6b, 0xe9, 0x67, 0x06, 0x29, 0x6d, 0xed, 0xfa, 0x9d, 0x74, 0x12, 0xb6, 0x16, 0x95, 0x8c, 0xb5,
				0x63, 0xc6, 0x78, 0xc0, 0x28, 0x25, 0xc3, 0x0d, 0x0a, 0xee, 0x77, 0xc4, 0xc1, 0x46, 0xd2, 0x76,
				0x54, 0x12, 0x42, 0x1a, 0x80, 0x8d, 0x13, 0xce, 0xc8, 0x19, 0x69, 0x4c, 0x75, 0xad, 0x57, 0x2e,
				0x9b, 0x97, 0x3d, 0x94, 0x8b, 0x81, 0xa9, 0x33, 0x7c, 0x3b, 0x2a, 0x17, 0x19, 0x2e, 0x22, 0xc2,
				0x06, 0x9f, 0x7e, 0xd1, 0x16, 0x2a, 0xf4, 0x4c, 0xde, 0xa8, 0x17, 0x60, 0x36, 0x65, 0xe8, 0x07,
				0xce, 0x40, 0xc8, 0xe0, 0xdd, 0x9d, 0x63, 0x94, 0xdc, 0x6e, 0x31, 0x15, 0x3f, 0xe1, 0x95, 0x5c,
				0x47, 0xaf, 0xb5, 0x1f, 0x26, 0x17, 0xee, 0x0c, 0x5e, 0x3b, 0x8e, 0xf1, 0xad, 0x75, 0x74, 0xed,
				0x34, 0x3e, 0xdc, 0x27, 0x43, 0xcc, 0x94, 0xc9, 0x90, 0xe1, 0xf1, 0xfd, 0x26, 0x42, 0x53, 0xc1,
				0x78, 0xde, 0xa7, 0x39, 0xc0, 0xbe, 0xfe, 0xeb, 0xcd, 0x9f, 0x9b, 0x76, 0xd4, 0x9c, 0x10, 0x15,
				0xc9, 0xfe, 0xcf, 0x50, 0xe5, 0x3b, 0x8b, 0x52, 0x04, 0xdb, 0xcd, 0x3e, 0xed, 0x86, 0x38, 0x55,
				0xda, 0xbc, 0xdc, 0xc9, 0x4b, 0x31, 0xe3, 0x18, 0x02, 0x15, 0x68, 0x85, 0x5c, 0x8b, 0x9e, 0x52,
				0xa9, 0x81, 0x95, 0x7a, 0x11, 0x28, 0x27, 0xf9, 0x78, 0xba, 0x96, 0x0f, 0x14, 0x47, 0x91, 0x1b,
				0x31, 0x7b, 0x55, 0x11, 0xfb, 0xcc, 0x7f, 0xb1, 0x3a, 0xc1, 0x53, 0xdb, 0x74, 0x25, 0x11, 0x17,
				0xe4, 0x86, 0x1e, 0xb9, 0xe8, 0x3b, 0xff, 0xff, 0xc4, 0xeb, 0x77, 0x55, 0x57, 0x90, 0x38, 0xe5,
				0x79, 0x24, 0xb1, 0xf7, 0x8b, 0x3e, 0x1a, 0xd9, 0x0b, 0xab, 0x2a, 0x07, 0x87, 0x1b, 0x72, 0xdb,
				0x5e, 0xef, 0x96, 0xc3, 0x34, 0x04, 0x49, 0x66, 0xdb, 0x0c, 0x37, 0xca, 0xfd, 0x1a, 0x89, 0xe5,
				0x64, 0x6a, 0x35, 0x80, 0xeb, 0x64, 0x65, 0xf1, 0x21, 0xdc, 0xe9, 0xcb, 0x88, 0xd8, 0x5b, 0x96,
				0xcf, 0x23, 0xcc, 0xcc, 0xd4, 0x28, 0x07, 0x67, 0xbe, 0xe8, 0xee, 0xb2, 0x3d, 0x86, 0x52, 0x46,
				0x1d, 0xb6, 0x49, 0x31, 0x03, 0x00, 0x3b, 0xaf, 0x89, 0xf5, 0xe1, 0x82, 0x61, 0xea, 0x43, 0xc8,
				0x4a, 0x92, 0xeb, 0xff, 0xff, 0xe4, 0x90, 0x9d, 0xc4, 0x6c, 0x51, 0x92, 0xf8, 0x25, 0xf7, 0x70,
				0x60, 0x0b, 0x96, 0x02, 0xc5, 0x57, 0xb5, 0xf8, 0xb4, 0x31, 0xa7, 0x9d, 0x45, 0x97, 0x7d, 0xd9,
				0xc4, 0x1b, 0x86, 0x3d, 0xa9, 0xe1, 0x42, 0xe9, 0x00, 0x20, 0xcf, 0xd0, 0x74, 0xd6, 0x92, 0x7b,
				0x7a, 0xb3, 0xb6, 0x72, 0x5d, 0x1a, 0x6f, 0x3f, 0x98, 0xb9, 0xc9, 0xda, 0xa8, 0x98, 0x2a, 0xff,
				0x06, 0x78,
			},
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			obs, err := NEA2(tc.Ck, tc.CountC, tc.Bearer, tc.Direction, tc.Ibs)
			require.NoError(t, err)
			require.Equal(t, tc.Obs, obs)
		})
	}
}

func TestNIA2(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		CountI    uint32
		Bearer    byte
		Direction uint8
		Ik        [16]byte
		Length    uint64
		Msg       []byte
		MacI      uint32
	}{
		{
			name:      "NIA2TestCase1",
			CountI:    0x398a59b4,
			Bearer:    0x1a,
			Direction: 1,
			Ik:        [16]byte{0xd3, 0xc5, 0xd5, 0x92, 0x32, 0x7f, 0xb1, 0x1c, 0x40, 0x35, 0xc6, 0x68, 0x0a, 0xf8, 0xc6, 0xd1},
			Length:    64,
			Msg: []byte{
				0x48, 0x45, 0x83, 0xd5, 0xaf, 0xe0, 0x82, 0xae,
			},
			MacI: 0xb93787e6,
		},
		{
			name:      "NIA2TestCase2",
			CountI:    0x296f393c,
			Bearer:    0x0b,
			Direction: 1,
			Ik:        [16]byte{0xb3, 0x12, 0x0f, 0xfd, 0xb2, 0xcf, 0x6a, 0xf4, 0xe7, 0x3e, 0xaf, 0x2e, 0xf4, 0xeb, 0xec, 0x69},
			Length:    16448,
			Msg: []byte{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
				0xe0, 0x95, 0x80, 0x45, 0xf3, 0xa0, 0xbb, 0xa4, 0xe3, 0x96, 0x83, 0x46, 0xf0, 0xa3, 0xb8, 0xa7,
				0xc0, 0x2a, 0x01, 0x8a, 0xe6, 0x40, 0x76, 0x52, 0x26, 0xb9, 0x87, 0xc9, 0x13, 0xe6, 0xcb, 0xf0,
				0x83, 0x57, 0x00, 0x16, 0xcf, 0x83, 0xef, 0xbc, 0x61, 0xc0, 0x82, 0x51, 0x3e, 0x21, 0x56, 0x1a,
				0x42, 0x7c, 0x00, 0x9d, 0x28, 0xc2, 0x98, 0xef, 0xac, 0xe7, 0x8e, 0xd6, 0xd5, 0x6c, 0x2d, 0x45,
				0x05, 0xad, 0x03, 0x2e, 0x9c, 0x04, 0xdc, 0x60, 0xe7, 0x3a, 0x81, 0x69, 0x6d, 0xa6, 0x65, 0xc6,
				0xc4, 0x86, 0x03, 0xa5, 0x7b, 0x45, 0xab, 0x33, 0x22, 0x15, 0x85, 0xe6, 0x8e, 0xe3, 0x16, 0x91,
				0x87, 0xfb, 0x02, 0x39, 0x52, 0x86, 0x32, 0xdd, 0x65, 0x6c, 0x80, 0x7e, 0xa3, 0x24, 0x8b, 0x7b,
				0x46, 0xd0, 0x02, 0xb2, 0xb5, 0xc7, 0x45, 0x8e, 0xb8, 0x5b, 0x9c, 0xe9, 0x58, 0x79, 0xe0, 0x34,
				0x08, 0x59, 0x05, 0x5e, 0x3b, 0x0a, 0xbb, 0xc3, 0xea, 0xce, 0x87, 0x19, 0xca, 0xa8, 0x02, 0x65,
				0xc9, 0x72, 0x05, 0xd5, 0xdc, 0x4b, 0xcc, 0x90, 0x2f, 0xe1, 0x83, 0x96, 0x29, 0xed, 0x71, 0x32,
				0x8a, 0x0f, 0x04, 0x49, 0xf5, 0x88, 0x55, 0x7e, 0x68, 0x98, 0x86, 0x0e, 0x04, 0x2a, 0xec, 0xd8,
				0x4b, 0x24, 0x04, 0xc2, 0x12, 0xc9, 0x22, 0x2d, 0xa5, 0xbf, 0x8a, 0x89, 0xef, 0x67, 0x97, 0x87,
				0x0c, 0xf5, 0x07, 0x71, 0xa6, 0x0f, 0x66, 0xa2, 0xee, 0x62, 0x85, 0x36, 0x57, 0xad, 0xdf, 0x04,
				0xcd, 0xde, 0x07, 0xfa, 0x41, 0x4e, 0x11, 0xf1, 0x2b, 0x4d, 0x81, 0xb9, 0xb4, 0xe8, 0xac, 0x53,
				0x8e, 0xa3, 0x06, 0x66, 0x68, 0x8d, 0x88, 0x1f, 0x6c, 0x34, 0x84, 0x21, 0x99, 0x2f, 0x31, 0xb9,
				0x4f, 0x88, 0x06, 0xed, 0x8f, 0xcc, 0xff, 0x4c, 0x91, 0x23, 0xb8, 0x96, 0x42, 0x52, 0x7a, 0xd6,
				0x13, 0xb1, 0x09, 0xbf, 0x75, 0x16, 0x74, 0x85, 0xf1, 0x26, 0x8b, 0xf8, 0x84, 0xb4, 0xcd, 0x23,
				0xd2, 0x9a, 0x09, 0x34, 0x92, 0x57, 0x03, 0xd6, 0x34, 0x09, 0x8f, 0x77, 0x67, 0xf1, 0xbe, 0x74,
				0x91, 0xe7, 0x08, 0xa8, 0xbb, 0x94, 0x9a, 0x38, 0x73, 0x70, 0x8a, 0xef, 0x4a, 0x36, 0x23, 0x9e,
				0x50, 0xcc, 0x08, 0x23, 0x5c, 0xd5, 0xed, 0x6b, 0xbe, 0x57, 0x86, 0x68, 0xa1, 0x7b, 0x58, 0xc1,
				0x17, 0x1d, 0x0b, 0x90, 0xe8, 0x13, 0xa9, 0xe4, 0xf5, 0x8a, 0x89, 0xd7, 0x19, 0xb1, 0x10, 0x42,
				0xd6, 0x36, 0x0b, 0x1b, 0x0f, 0x52, 0xde, 0xb7, 0x30, 0xa5, 0x8d, 0x58, 0xfa, 0xf4, 0x63, 0x15,
				0x95, 0x4b, 0x0a, 0x87, 0x26, 0x91, 0x47, 0x59, 0x77, 0xdc, 0x88, 0xc0, 0xd7, 0x33, 0xfe, 0xff,
				0x54, 0x60, 0x0a, 0x0c, 0xc1, 0xd0, 0x30, 0x0a, 0xaa, 0xeb, 0x94, 0x57, 0x2c, 0x6e, 0x95, 0xb0,
				0x1a, 0xe9, 0x0d, 0xe0, 0x4f, 0x1d, 0xce, 0x47, 0xf8, 0x7e, 0x8f, 0xa7, 0xbe, 0xbf, 0x77, 0xe1,
				0xdb, 0xc2, 0x0d, 0x6b, 0xa8, 0x5c, 0xb9, 0x14, 0x3d, 0x51, 0x8b, 0x28, 0x5d, 0xfa, 0x04, 0xb6,
				0x98, 0xbf, 0x0c, 0xf7, 0x81, 0x9f, 0x20, 0xfa, 0x7a, 0x28, 0x8e, 0xb0, 0x70, 0x3d, 0x99, 0x5c,
				0x59, 0x94, 0x0c, 0x7c, 0x66, 0xde, 0x57, 0xa9, 0xb7, 0x0f, 0x82, 0x37, 0x9b, 0x70, 0xe2, 0x03,
				0x1e, 0x45, 0x0f, 0xcf, 0xd2, 0x18, 0x13, 0x26, 0xfc, 0xd2, 0x8d, 0x88, 0x23, 0xba, 0xaa, 0x80,
				0xdf, 0x6e, 0x0f, 0x44, 0x35, 0x59, 0x64, 0x75, 0x39, 0xfd, 0x89, 0x07, 0xc0, 0xff, 0xd9, 0xd7,
				0x9c, 0x13, 0x0e, 0xd8, 0x1c, 0x9a, 0xfd, 0x9b, 0x7e, 0x84, 0x8c, 0x9f, 0xed, 0x38, 0x44, 0x3d,
				0x5d, 0x38, 0x0e, 0x53, 0xfb, 0xdb, 0x8a, 0xc8, 0xc3, 0xd3, 0xf0, 0x68, 0x76, 0x05, 0x4f, 0x12,
				0x24, 0x61, 0x10, 0x7d, 0xe9, 0x2f, 0xea, 0x09, 0xc6, 0xf6, 0x92, 0x3a, 0x18, 0x8d, 0x53, 0xaf,
				0xe5, 0x4a, 0x10, 0xf6, 0x0e, 0x6e, 0x9d, 0x5a, 0x03, 0xd9, 0x96, 0xb5, 0xfb, 0xc8, 0x20, 0xf8,
				0xa6, 0x37, 0x11, 0x6a, 0x27, 0xad, 0x04, 0xb4, 0x44, 0xa0, 0x93, 0x2d, 0xd6, 0x0f, 0xbd, 0x12,
				0x67, 0x1c, 0x11, 0xe1, 0xc0, 0xec, 0x73, 0xe7, 0x89, 0x87, 0x9f, 0xaa, 0x3d, 0x42, 0xc6, 0x4d,
				0x20, 0xcd, 0x12, 0x52, 0x74, 0x2a, 0x37, 0x68, 0xc2, 0x5a, 0x90, 0x15, 0x85, 0x88, 0x8e, 0xce,
				0xe1, 0xe6, 0x12, 0xd9, 0x93, 0x6b, 0x40, 0x3b, 0x07, 0x75, 0x94, 0x9a, 0x66, 0xcd, 0xfd, 0x99,
				0xa2, 0x9b, 0x13, 0x45, 0xba, 0xa8, 0xd9, 0xd5, 0x40, 0x0c, 0x91, 0x02, 0x4b, 0x0a, 0x60, 0x73,
				0x63, 0xb0, 0x13, 0xce, 0x5d, 0xe9, 0xae, 0x86, 0x9d, 0x3b, 0x8d, 0x95, 0xb0, 0x57, 0x0b, 0x3c,
				0x2d, 0x39, 0x14, 0x22, 0xd3, 0x24, 0x50, 0xcb, 0xcf, 0xae, 0x96, 0x65, 0x22, 0x86, 0xe9, 0x6d,
				0xec, 0x12, 0x14, 0xa9, 0x34, 0x65, 0x27, 0x98, 0x0a, 0x81, 0x92, 0xea, 0xc1, 0xc3, 0x9a, 0x3a,
				0xaf, 0x6f, 0x15, 0x35, 0x1d, 0xa6, 0xbe, 0x76, 0x4d, 0xf8, 0x97, 0x72, 0xec, 0x04, 0x07, 0xd0,
				0x6e, 0x44, 0x15, 0xbe, 0xfa, 0xe7, 0xc9, 0x25, 0x80, 0xdf, 0x9b, 0xf5, 0x07, 0x49, 0x7c, 0x8f,
				0x29, 0x95, 0x16, 0x0d, 0x4e, 0x21, 0x8d, 0xaa, 0xcb, 0x02, 0x94, 0x4a, 0xbf, 0x83, 0x34, 0x0c,
				0xe8, 0xbe, 0x16, 0x86, 0xa9, 0x60, 0xfa, 0xf9, 0x0e, 0x2d, 0x90, 0xc5, 0x5c, 0xc6, 0x47, 0x5b,
				0xab, 0xc3, 0x17, 0x1a, 0x80, 0xa3, 0x63, 0x17, 0x49, 0x54, 0x95, 0x5d, 0x71, 0x01, 0xda, 0xb1,
				0x6a, 0xe8, 0x17, 0x91, 0x67, 0xe2, 0x14, 0x44, 0xb4, 0x43, 0xa9, 0xea, 0xaa, 0x7c, 0x91, 0xde,
				0x36, 0xd1, 0x18, 0xc3, 0x9d, 0x38, 0x9f, 0x8d, 0xd4, 0x46, 0x9a, 0x84, 0x6c, 0x9a, 0x26, 0x2b,
				0xf7, 0xfa, 0x18, 0x48, 0x7a, 0x79, 0xe8, 0xde, 0x11, 0x69, 0x9e, 0x0b, 0x8f, 0xdf, 0x55, 0x7c,
				0xb4, 0x87, 0x19, 0xd4, 0x53, 0xba, 0x71, 0x30, 0x56, 0x10, 0x9b, 0x93, 0xa2, 0x18, 0xc8, 0x96,
				0x75, 0xac, 0x19, 0x5f, 0xb4, 0xfb, 0x06, 0x63, 0x9b, 0x37, 0x97, 0x14, 0x49, 0x55, 0xb3, 0xc9,
				0x32, 0x7d, 0x1a, 0xec, 0x00, 0x3d, 0x42, 0xec, 0xd0, 0xea, 0x98, 0xab, 0xf1, 0x9f, 0xfb, 0x4a,
				0xf3, 0x56, 0x1a, 0x67, 0xe7, 0x7c, 0x35, 0xbf, 0x15, 0xc5, 0x9c, 0x24, 0x12, 0xda, 0x88, 0x1d,
				0xb0, 0x2b, 0x1b, 0xfb, 0xce, 0xbf, 0xac, 0x51, 0x52, 0xbc, 0x99, 0xbc, 0x3f, 0x1d, 0x15, 0xf7,
				0x71, 0x00, 0x1b, 0x70, 0x29, 0xfe, 0xdb, 0x02, 0x8f, 0x8b, 0x85, 0x2b, 0xc4, 0x40, 0x7e, 0xb8,
				0x3f, 0x89, 0x1c, 0x9c, 0xa7, 0x33, 0x25, 0x4f, 0xdd, 0x1e, 0x9e, 0xdb, 0x56, 0x91, 0x9c, 0xe9,
				0xfe, 0xa2, 0x1c, 0x17, 0x40, 0x72, 0x52, 0x1c, 0x18, 0x31, 0x9a, 0x54, 0xb5, 0xd4, 0xef, 0xbe,
				0xbd, 0xdf, 0x1d, 0x8b, 0x69, 0xb1, 0xcb, 0xf2, 0x5f, 0x48, 0x9f, 0xcc, 0x98, 0x13, 0x72, 0x54,
				0x7c, 0xf4, 0x1d, 0x00, 0x8e, 0xf0, 0xbc, 0xa1, 0x92, 0x6f, 0x93, 0x4b, 0x73, 0x5e, 0x09, 0x0b,
				0x3b, 0x25, 0x1e, 0xb3, 0x3a, 0x36, 0xf8, 0x2e, 0xd9, 0xb2, 0x9c, 0xf4, 0xcb, 0x94, 0x41, 0x88,
				0xfa, 0x0e, 0x1e, 0x38, 0xdd, 0x77, 0x8f, 0x7d, 0x1c, 0x9d, 0x98, 0x7b, 0x28, 0xd1, 0x32, 0xdf,
				0xb9, 0x73, 0x1f, 0xa4, 0xf4, 0xb4, 0x16, 0x93, 0x5b, 0xe4, 0x9d, 0xe3, 0x05, 0x16, 0xaf, 0x35,
				0x78, 0x58, 0x1f, 0x2f, 0x13, 0xf5, 0x61, 0xc0, 0x66, 0x33, 0x61, 0x94, 0x1e, 0xab, 0x24, 0x9a,
				0x4b, 0xc1, 0x23, 0xf8, 0xd1, 0x5c, 0xd7, 0x11, 0xa9, 0x56, 0xa1, 0xbf, 0x20, 0xfe, 0x6e, 0xb7,
				0x8a, 0xea, 0x23, 0x73, 0x36, 0x1d, 0xa0, 0x42, 0x6c, 0x79, 0xa5, 0x30, 0xc3, 0xbb, 0x1d, 0xe0,
				0xc9, 0x97, 0x22, 0xef, 0x1f, 0xde, 0x39, 0xac, 0x2b, 0x00, 0xa0, 0xa8, 0xee, 0x7c, 0x80, 0x0a,
				0x08, 0xbc, 0x22, 0x64, 0xf8, 0x9f, 0x4e, 0xff, 0xe6, 0x27, 0xac, 0x2f, 0x05, 0x31, 0xfb, 0x55,
				0x4f, 0x6d, 0x21, 0xd7, 0x4c, 0x59, 0x0a, 0x70, 0xad, 0xfa, 0xa3, 0x90, 0xbd, 0xfb, 0xb3, 0xd6,
				0x8e, 0x46, 0x21, 0x5c, 0xab, 0x18, 0x7d, 0x23, 0x68, 0xd5, 0xa7, 0x1f, 0x5e, 0xbe, 0xc0, 0x81,
				0xcd, 0x3b, 0x20, 0xc0, 0x82, 0xdb, 0xe4, 0xcd, 0x2f, 0xac, 0xa2, 0x87, 0x73, 0x79, 0x5d, 0x6b,
				0x0c, 0x10, 0x20, 0x4b, 0x65, 0x9a, 0x93, 0x9e, 0xf2, 0x9b, 0xbe, 0x10, 0x88, 0x24, 0x36, 0x24,
				0x42, 0x99, 0x27, 0xa7, 0xeb, 0x57, 0x6d, 0xd3, 0xa0, 0x0e, 0xa5, 0xe0, 0x1a, 0xf5, 0xd4, 0x75,
				0x83, 0xb2, 0x27, 0x2c, 0x0c, 0x16, 0x1a, 0x80, 0x65, 0x21, 0xa1, 0x6f, 0xf9, 0xb0, 0xa7, 0x22,
				0xc0, 0xcf, 0x26, 0xb0, 0x25, 0xd5, 0x83, 0x6e, 0x22, 0x58, 0xa4, 0xf7, 0xd4, 0x77, 0x3a, 0xc8,
				0x01, 0xe4, 0x26, 0x3b, 0xc2, 0x94, 0xf4, 0x3d, 0xef, 0x7f, 0xa8, 0x70, 0x3f, 0x3a, 0x41, 0x97,
				0x46, 0x35, 0x25, 0x88, 0x76, 0x52, 0xb0, 0xb2, 0xa4, 0xa2, 0xa7, 0xcf, 0x87, 0xf0, 0x09, 0x14,
				0x87, 0x1e, 0x25, 0x03, 0x91, 0x13, 0xc7, 0xe1, 0x61, 0x8d, 0xa3, 0x40, 0x64, 0xb5, 0x7a, 0x43,
				0xc4, 0x63, 0x24, 0x9f, 0xb8, 0xd0, 0x5e, 0x0f, 0x26, 0xf4, 0xa6, 0xd8, 0x49, 0x72, 0xe7, 0xa9,
				0x05, 0x48, 0x24, 0x14, 0x5f, 0x91, 0x29, 0x5c, 0xdb, 0xe3, 0x9a, 0x6f, 0x92, 0x0f, 0xac, 0xc6,
				0x59, 0x71, 0x2b, 0x46, 0xa5, 0x4b, 0xa2, 0x95, 0xbb, 0xe6, 0xa9, 0x01, 0x54, 0xe9, 0x1b, 0x33,
				0x98, 0x5a, 0x2b, 0xcd, 0x42, 0x0a, 0xd5, 0xc6, 0x7e, 0xc9, 0xad, 0x8e, 0xb7, 0xac, 0x68, 0x64,
				0xdb, 0x27, 0x2a, 0x51, 0x6b, 0xc9, 0x4c, 0x28, 0x39, 0xb0, 0xa8, 0x16, 0x9a, 0x6b, 0xf5, 0x8e,
				0x1a, 0x0c, 0x2a, 0xda, 0x8c, 0x88, 0x3b, 0x7b, 0xf4, 0x97, 0xa4, 0x91, 0x71, 0x26, 0x8e, 0xd1,
				0x5d, 0xdd, 0x29, 0x69, 0x38, 0x4e, 0x7f, 0xf4, 0xbf, 0x4a, 0xab, 0x2e, 0xc9, 0xec, 0xc6, 0x52,
				0x9c, 0xf6, 0x29, 0xe2, 0xdf, 0x0f, 0x08, 0xa7, 0x7a, 0x65, 0xaf, 0xa1, 0x2a, 0xa9, 0xb5, 0x05,
				0xdf, 0x8b, 0x28, 0x7e, 0xf6, 0xcc, 0x91, 0x49, 0x3d, 0x1c, 0xaa, 0x39, 0x07, 0x6e, 0x28, 0xef,
				0x1e, 0xa0, 0x28, 0xf5, 0x11, 0x8d, 0xe6, 0x1a, 0xe0, 0x2b, 0xb6, 0xae, 0xfc, 0x33, 0x43, 0xa0,
				0x50, 0x29, 0x2f, 0x19, 0x9f, 0x40, 0x18, 0x57, 0xb2, 0xbe, 0xad, 0x5e, 0x6e, 0xe2, 0xa1, 0xf1,
				0x91, 0x02, 0x2f, 0x92, 0x78, 0x01, 0x6f, 0x04, 0x77, 0x91, 0xa9, 0xd1, 0x8d, 0xa7, 0xd2, 0xa6,
				0xd2, 0x7f, 0x2e, 0x0e, 0x51, 0xc2, 0xf6, 0xea, 0x30, 0xe8, 0xac, 0x49, 0xa0, 0x60, 0x4f, 0x4c,
				0x13, 0x54, 0x2e, 0x85, 0xb6, 0x83, 0x81, 0xb9, 0xfd, 0xcf, 0xa0, 0xce, 0x4b, 0x2d, 0x34, 0x13,
				0x54, 0x85, 0x2d, 0x36, 0x02, 0x45, 0xc5, 0x36, 0xb6, 0x12, 0xaf, 0x71, 0xf3, 0xe7, 0x7c, 0x90,
				0x95, 0xae, 0x2d, 0xbd, 0xe5, 0x04, 0xb2, 0x65, 0x73, 0x3d, 0xab, 0xfe, 0x10, 0xa2, 0x0f, 0xc7,
				0xd6, 0xd3, 0x2c, 0x21, 0xcc, 0xc7, 0x2b, 0x8b, 0x34, 0x44, 0xae, 0x66, 0x3d, 0x65, 0x92, 0x2d,
				0x17, 0xf8, 0x2c, 0xaa, 0x2b, 0x86, 0x5c, 0xd8, 0x89, 0x13, 0xd2, 0x91, 0xa6, 0x58, 0x99, 0x02,
				0x6e, 0xa1, 0x32, 0x84, 0x39, 0x72, 0x3c, 0x19, 0x8c, 0x36, 0xb0, 0xc3, 0xc8, 0xd0, 0x85, 0xbf,
				0xaf, 0x8a, 0x32, 0x0f, 0xde, 0x33, 0x4b, 0x4a, 0x49, 0x19, 0xb4, 0x4c, 0x2b, 0x95, 0xf6, 0xe8,
				0xec, 0xf7, 0x33, 0x93, 0xf7, 0xf0, 0xd2, 0xa4, 0x0e, 0x60, 0xb1, 0xd4, 0x06, 0x52, 0x6b, 0x02,
				0x2d, 0xdc, 0x33, 0x18, 0x10, 0xb1, 0xa5, 0xf7, 0xc3, 0x47, 0xbd, 0x53, 0xed, 0x1f, 0x10, 0x5d,
				0x6a, 0x0d, 0x30, 0xab, 0xa4, 0x77, 0xe1, 0x78, 0x88, 0x9a, 0xb2, 0xec, 0x55, 0xd5, 0x58, 0xde,
				0xab, 0x26, 0x30, 0x20, 0x43, 0x36, 0x96, 0x2b, 0x4d, 0xb5, 0xb6, 0x63, 0xb6, 0x90, 0x2b, 0x89,
				0xe8, 0x5b, 0x31, 0xbc, 0x6a, 0xf5, 0x0f, 0xc5, 0x0a, 0xcc, 0xb3, 0xfb, 0x9b, 0x57, 0xb6, 0x63,
				0x29, 0x70, 0x31, 0x37, 0x8d, 0xb4, 0x78, 0x96, 0xd7, 0xfb, 0xaf, 0x6c, 0x60, 0x0a, 0xdd, 0x2c,
				0x67, 0xf9, 0x36, 0xdb, 0x03, 0x79, 0x86, 0xdb, 0x85, 0x6e, 0xb4, 0x9c, 0xf2, 0xdb, 0x3f, 0x7d,
				0xa6, 0xd2, 0x36, 0x50, 0xe4, 0x38, 0xf1, 0x88, 0x40, 0x41, 0xb0, 0x13, 0x11, 0x9e, 0x4c, 0x2a,
				0xe5, 0xaf, 0x37, 0xcc, 0xcd, 0xfb, 0x68, 0x66, 0x07, 0x38, 0xb5, 0x8b, 0x3c, 0x59, 0xd1, 0xc0,
				0x24, 0x84, 0x37, 0x47, 0x2a, 0xba, 0x1f, 0x35, 0xca, 0x1f, 0xb9, 0x0c, 0xd7, 0x14, 0xaa, 0x9f,
				0x63, 0x55, 0x34, 0xf4, 0x9e, 0x7c, 0x5b, 0xba, 0x81, 0xc2, 0xb6, 0xb3, 0x6f, 0xde, 0xe2, 0x1c,
				0xa2, 0x7e, 0x34, 0x7f, 0x79, 0x3d, 0x2c, 0xe9, 0x44, 0xed, 0xb2, 0x3c, 0x8c, 0x9b, 0x91, 0x4b,
				0xe1, 0x03, 0x35, 0xe3, 0x50, 0xfe, 0xb5, 0x07, 0x03, 0x94, 0xb7, 0xa4, 0xa1, 0x5c, 0x0c, 0xa1,
				0x20, 0x28, 0x35, 0x68, 0xb7, 0xbf, 0xc2, 0x54, 0xfe, 0x83, 0x8b, 0x13, 0x7a, 0x21, 0x47, 0xce,
				0x7c, 0x11, 0x3a, 0x3a, 0x4d, 0x65, 0x49, 0x9d, 0x9e, 0x86, 0xb8, 0x7d, 0xbc, 0xc7, 0xf0, 0x3b,
				0xbd, 0x3a, 0x3a, 0xb1, 0xaa, 0x24, 0x3e, 0xce, 0x5b, 0xa9, 0xbc, 0xf2, 0x5f, 0x82, 0x83, 0x6c,
				0xfe, 0x47, 0x3b, 0x2d, 0x83, 0xe7, 0xa7, 0x20, 0x1c, 0xd0, 0xb9, 0x6a, 0x72, 0x45, 0x1e, 0x86,
				0x3f, 0x6c, 0x3b, 0xa6, 0x64, 0xa6, 0xd0, 0x73, 0xd1, 0xf7, 0xb5, 0xed, 0x99, 0x08, 0x65, 0xd9,
				0x78, 0xbd, 0x38, 0x15, 0xd0, 0x60, 0x94, 0xfc, 0x9a, 0x2a, 0xba, 0x52, 0x21, 0xc2, 0x2d, 0x5a,
				0xb9, 0x96, 0x38, 0x9e, 0x37, 0x21, 0xe3, 0xaf, 0x5f, 0x05, 0xbe, 0xdd, 0xc2, 0x87, 0x5e, 0x0d,
				0xfa, 0xeb, 0x39, 0x02, 0x1e, 0xe2, 0x7a, 0x41, 0x18, 0x7c, 0xbb, 0x45, 0xef, 0x40, 0xc3, 0xe7,
				0x3b, 0xc0, 0x39, 0x89, 0xf9, 0xa3, 0x0d, 0x12, 0xc5, 0x4b, 0xa7, 0xd2, 0x14, 0x1d, 0xa8, 0xa8,
				0x75, 0x49, 0x3e, 0x65, 0x77, 0x6e, 0xf3, 0x5f, 0x97, 0xde, 0xbc, 0x22, 0x86, 0xcc, 0x4a, 0xf9,
				0xb4, 0x62, 0x3e, 0xee, 0x90, 0x2f, 0x84, 0x0c, 0x52, 0xf1, 0xb8, 0xad, 0x65, 0x89, 0x39, 0xae,
				0xf7, 0x1f, 0x3f, 0x72, 0xb9, 0xec, 0x1d, 0xe2, 0x15, 0x88, 0xbd, 0x35, 0x48, 0x4e, 0xa4, 0x44,
				0x36, 0x34, 0x3f, 0xf9, 0x5e, 0xad, 0x6a, 0xb1, 0xd8, 0xaf, 0xb1, 0xb2, 0xa3, 0x03, 0xdf, 0x1b,
				0x71, 0xe5, 0x3c, 0x4a, 0xea, 0x6b, 0x2e, 0x3e, 0x93, 0x72, 0xbe, 0x0d, 0x1b, 0xc9, 0x97, 0x98,
				0xb0, 0xce, 0x3c, 0xc1, 0x0d, 0x2a, 0x59, 0x6d, 0x56, 0x5d, 0xba, 0x82, 0xf8, 0x8c, 0xe4, 0xcf,
				0xf3, 0xb3, 0x3d, 0x5d, 0x24, 0xe9, 0xc0, 0x83, 0x11, 0x24, 0xbf, 0x1a, 0xd5, 0x4b, 0x79, 0x25,
				0x32, 0x98, 0x3d, 0xd6, 0xc3, 0xa8, 0xb7, 0xd0,
			},
			MacI: 0xebd5ccb0,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			buf, err := NIA2(tc.Ik, tc.CountI, tc.Bearer, tc.Direction, tc.Msg)
			require.NoError(t, err)
			mac := binary.BigEndian.Uint32(buf)
			require.Equal(t, tc.MacI, mac)
		})
	}
}

func TestNEA3(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		Count     uint32
		Bearer    uint8
		Direction uint8
		Ck        [16]byte
		Length    uint32
		Ibs       []byte
		Obs       []byte
	}{
		{
			name:      "NEA3Test1",
			Count:     0x66035492,
			Bearer:    0x0f,
			Direction: 0,
			Ck:        [16]byte{0x17, 0x3d, 0x14, 0xba, 0x50, 0x03, 0x73, 0x1d, 0x7a, 0x60, 0x04, 0x94, 0x70, 0xf0, 0x0a, 0x29},
			Length:    193,
			Ibs: []byte{
				0x6c, 0xf6, 0x53, 0x40, 0x73, 0x55, 0x52, 0xab, 0x0c, 0x97, 0x52, 0xfa, 0x6f, 0x90, 0x25, 0xfe,
				0x0b, 0xd6, 0x75, 0xd9, 0x00, 0x58, 0x75, 0xb2, 0x00, 0x00, 0x00, 0x00,
			},
			Obs: []byte{
				0xa6, 0xc8, 0x5f, 0xc6, 0x6a, 0xfb, 0x85, 0x33, 0xaa, 0xfc, 0x25, 0x18, 0xdf, 0xe7, 0x84, 0x94,
				0x0e, 0xe1, 0xe4, 0xb0, 0x30, 0x23, 0x8c, 0xc8, 0x00, 0x00, 0x00, 0x00,
			},
		},
		{
			name:      "NEA3Test2",
			Count:     0x56823,
			Bearer:    0x18,
			Direction: 1,
			Ck:        [16]byte{0xe5, 0xbd, 0x3e, 0xa0, 0xeb, 0x55, 0xad, 0xe8, 0x66, 0xc6, 0xac, 0x58, 0xbd, 0x54, 0x30, 0x2a},
			Length:    800,
			Ibs: []byte{
				0x14, 0xa8, 0xef, 0x69, 0x3d, 0x67, 0x85, 0x07, 0xbb, 0xe7, 0x27, 0x0a, 0x7f, 0x67, 0xff, 0x50,
				0x06, 0xc3, 0x52, 0x5b, 0x98, 0x07, 0xe4, 0x67, 0xc4, 0xe5, 0x60, 0x00, 0xba, 0x33, 0x8f, 0x5d,
				0x42, 0x95, 0x59, 0x03, 0x67, 0x51, 0x82, 0x22, 0x46, 0xc8, 0x0d, 0x3b, 0x38, 0xf0, 0x7f, 0x4b,
				0xe2, 0xd8, 0xff, 0x58, 0x05, 0xf5, 0x13, 0x22, 0x29, 0xbd, 0xe9, 0x3b, 0xbb, 0xdc, 0xaf, 0x38,
				0x2b, 0xf1, 0xee, 0x97, 0x2f, 0xbf, 0x99, 0x77, 0xba, 0xda, 0x89, 0x45, 0x84, 0x7a, 0x2a, 0x6c,
				0x9a, 0xd3, 0x4a, 0x66, 0x75, 0x54, 0xe0, 0x4d, 0x1f, 0x7f, 0xa2, 0xc3, 0x32, 0x41, 0xbd, 0x8f,
				0x01, 0xba, 0x22, 0x0d,
			},
			Obs: []byte{
				0x13, 0x1d, 0x43, 0xe0, 0xde, 0xa1, 0xbe, 0x5c, 0x5a, 0x1b, 0xfd, 0x97, 0x1d, 0x85, 0x2c, 0xbf,
				0x71, 0x2d, 0x7b, 0x4f, 0x57, 0x96, 0x1f, 0xea, 0x32, 0x08, 0xaf, 0xa8, 0xbc, 0xa4, 0x33, 0xf4,
				0x56, 0xad, 0x09, 0xc7, 0x41, 0x7e, 0x58, 0xbc, 0x69, 0xcf, 0x88, 0x66, 0xd1, 0x35, 0x3f, 0x74,
				0x86, 0x5e, 0x80, 0x78, 0x1d, 0x20, 0x2d, 0xfb, 0x3e, 0xcf, 0xf7, 0xfc, 0xbc, 0x3b, 0x19, 0x0f,
				0xe8, 0x2a, 0x20, 0x4e, 0xd0, 0xe3, 0x50, 0xfc, 0x0f, 0x6f, 0x26, 0x13, 0xb2, 0xf2, 0xbc, 0xa6,
				0xdf, 0x5a, 0x47, 0x3a, 0x57, 0xa4, 0xa0, 0x0d, 0x98, 0x5e, 0xba, 0xd8, 0x80, 0xd6, 0xf2, 0x38,
				0x64, 0xa0, 0x7b, 0x01,
			},
		},
		{
			name:      "NEA3Test3",
			Count:     0x76452ec1,
			Bearer:    0x2,
			Direction: 1,
			Ck:        [16]byte{0xd4, 0x55, 0x2a, 0x8f, 0xd6, 0xe6, 0x1c, 0xc8, 0x1a, 0x20, 0x09, 0x14, 0x1a, 0x29, 0xc1, 0x0b},
			Length:    1570,
			Ibs: []byte{
				0x38, 0xf0, 0x7f, 0x4b, 0xe2, 0xd8, 0xff, 0x58, 0x05, 0xf5, 0x13, 0x22, 0x29, 0xbd, 0xe9, 0x3b,
				0xbb, 0xdc, 0xaf, 0x38, 0x2b, 0xf1, 0xee, 0x97, 0x2f, 0xbf, 0x99, 0x77, 0xba, 0xda, 0x89, 0x45,
				0x84, 0x7a, 0x2a, 0x6c, 0x9a, 0xd3, 0x4a, 0x66, 0x75, 0x54, 0xe0, 0x4d, 0x1f, 0x7f, 0xa2, 0xc3,
				0x32, 0x41, 0xbd, 0x8f, 0x01, 0xba, 0x22, 0x0d, 0x3c, 0xa4, 0xec, 0x41, 0xe0, 0x74, 0x59, 0x5f,
				0x54, 0xae, 0x2b, 0x45, 0x4f, 0xd9, 0x71, 0x43, 0x20, 0x43, 0x60, 0x19, 0x65, 0xcc, 0xa8, 0x5c,
				0x24, 0x17, 0xed, 0x6c, 0xbe, 0xc3, 0xba, 0xda, 0x84, 0xfc, 0x8a, 0x57, 0x9a, 0xea, 0x78, 0x37,
				0xb0, 0x27, 0x11, 0x77, 0x24, 0x2a, 0x64, 0xdc, 0x0a, 0x9d, 0xe7, 0x1a, 0x8e, 0xde, 0xe8, 0x6c,
				0xa3, 0xd4, 0x7d, 0x03, 0x3d, 0x6b, 0xf5, 0x39, 0x80, 0x4e, 0xca, 0x86, 0xc5, 0x84, 0xa9, 0x05,
				0x2d, 0xe4, 0x6a, 0xd3, 0xfc, 0xed, 0x65, 0x54, 0x3b, 0xd9, 0x02, 0x07, 0x37, 0x2b, 0x27, 0xaf,
				0xb7, 0x92, 0x34, 0xf5, 0xff, 0x43, 0xea, 0x87, 0x08, 0x20, 0xe2, 0xc2, 0xb7, 0x8a, 0x8a, 0xae,
				0x61, 0xcc, 0xe5, 0x2a, 0x05, 0x15, 0xe3, 0x48, 0xd1, 0x96, 0x66, 0x4a, 0x34, 0x56, 0xb1, 0x82,
				0xa0, 0x7c, 0x40, 0x6e, 0x4a, 0x20, 0x79, 0x12, 0x71, 0xcf, 0xed, 0xa1, 0x65, 0xd5, 0x35, 0xec,
				0x5e, 0xa2, 0xd4, 0xdf, 0x40, 0x00, 0x00, 0x00,
			},
			Obs: []byte{
				0x83, 0x83, 0xb0, 0x22, 0x9f, 0xcc, 0x0b, 0x9d, 0x22, 0x95, 0xec, 0x41, 0xc9, 0x77, 0xe9, 0xc2,
				0xbb, 0x72, 0xe2, 0x20, 0x37, 0x81, 0x41, 0xf9, 0xc8, 0x31, 0x8f, 0x3a, 0x27, 0x0d, 0xfb, 0xcd,
				0xee, 0x64, 0x11, 0xc2, 0xb3, 0x04, 0x4f, 0x17, 0x6d, 0xc6, 0xe0, 0x0f, 0x89, 0x60, 0xf9, 0x7a,
				0xfa, 0xcd, 0x13, 0x1a, 0xd6, 0xa3, 0xb4, 0x9b, 0x16, 0xb7, 0xba, 0xbc, 0xf2, 0xa5, 0x09, 0xeb,
				0xb1, 0x6a, 0x75, 0xdc, 0xab, 0x14, 0xff, 0x27, 0x5d, 0xbe, 0xee, 0xa1, 0xa2, 0xb1, 0x55, 0xf9,
				0xd5, 0x2c, 0x26, 0x45, 0x2d, 0x01, 0x87, 0xc3, 0x10, 0xa4, 0xee, 0x55, 0xbe, 0xaa, 0x78, 0xab,
				0x40, 0x24, 0x61, 0x5b, 0xa9, 0xf5, 0xd5, 0xad, 0xc7, 0x72, 0x8f, 0x73, 0x56, 0x06, 0x71, 0xf0,
				0x13, 0xe5, 0xe5, 0x50, 0x08, 0x5d, 0x32, 0x91, 0xdf, 0x7d, 0x5f, 0xec, 0xed, 0xde, 0xd5, 0x59,
				0x64, 0x1b, 0x6c, 0x2f, 0x58, 0x52, 0x33, 0xbc, 0x71, 0xe9, 0x60, 0x2b, 0xd2, 0x30, 0x58, 0x55,
				0xbb, 0xd2, 0x5f, 0xfa, 0x7f, 0x17, 0xec, 0xbc, 0x04, 0x2d, 0xaa, 0xe3, 0x8c, 0x1f, 0x57, 0xad,
				0x8e, 0x8e, 0xbd, 0x37, 0x34, 0x6f, 0x71, 0xbe, 0xfd, 0xbb, 0x74, 0x32, 0xe0, 0xe0, 0xbb, 0x2c,
				0xfc, 0x09, 0xbc, 0xd9, 0x65, 0x70, 0xcb, 0x0c, 0x0c, 0x39, 0xdf, 0x5e, 0x29, 0x29, 0x4e, 0x82,
				0x70, 0x3a, 0x63, 0x7f, 0x80, 0x00, 0x00, 0x00,
			},
		},
		{
			name:      "NEA3Test4",
			Count:     0xe4850fe1,
			Bearer:    0x10,
			Direction: 1,
			Ck:        [16]byte{0xdb, 0x84, 0xb4, 0xfb, 0xcc, 0xda, 0x56, 0x3b, 0x66, 0x22, 0x7b, 0xfe, 0x45, 0x6f, 0x0f, 0x77},
			Length:    2798,
			Ibs: []byte{
				0xe5, 0x39, 0xf3, 0xb8, 0x97, 0x32, 0x40, 0xda, 0x03, 0xf2, 0xb8, 0xaa, 0x05, 0xee, 0x0a, 0x00,
				0xdb, 0xaf, 0xc0, 0xe1, 0x82, 0x05, 0x5d, 0xfe, 0x3d, 0x73, 0x83, 0xd9, 0x2c, 0xef, 0x40, 0xe9,
				0x29, 0x28, 0x60, 0x5d, 0x52, 0xd0, 0x5f, 0x4f, 0x90, 0x18, 0xa1, 0xf1, 0x89, 0xae, 0x39, 0x97,
				0xce, 0x19, 0x15, 0x5f, 0xb1, 0x22, 0x1d, 0xb8, 0xbb, 0x09, 0x51, 0xa8, 0x53, 0xad, 0x85, 0x2c,
				0xe1, 0x6c, 0xff, 0x07, 0x38, 0x2c, 0x93, 0xa1, 0x57, 0xde, 0x00, 0xdd, 0xb1, 0x25, 0xc7, 0x53,
				0x9f, 0xd8, 0x50, 0x45, 0xe4, 0xee, 0x07, 0xe0, 0xc4, 0x3f, 0x9e, 0x9d, 0x6f, 0x41, 0x4f, 0xc4,
				0xd1, 0xc6, 0x29, 0x17, 0x81, 0x3f, 0x74, 0xc0, 0x0f, 0xc8, 0x3f, 0x3e, 0x2e, 0xd7, 0xc4, 0x5b,
				0xa5, 0x83, 0x52, 0x64, 0xb4, 0x3e, 0x0b, 0x20, 0xaf, 0xda, 0x6b, 0x30, 0x53, 0xbf, 0xb6, 0x42,
				0x3b, 0x7f, 0xce, 0x25, 0x47, 0x9f, 0xf5, 0xf1, 0x39, 0xdd, 0x9b, 0x5b, 0x99, 0x55, 0x58, 0xe2,
				0xa5, 0x6b, 0xe1, 0x8d, 0xd5, 0x81, 0xcd, 0x01, 0x7c, 0x73, 0x5e, 0x6f, 0x0d, 0x0d, 0x97, 0xc4,
				0xdd, 0xc1, 0xd1, 0xda, 0x70, 0xc6, 0xdb, 0x4a, 0x12, 0xcc, 0x92, 0x77, 0x8e, 0x2f, 0xbb, 0xd6,
				0xf3, 0xba, 0x52, 0xaf, 0x91, 0xc9, 0xc6, 0xb6, 0x4e, 0x8d, 0xa4, 0xf7, 0xa2, 0xc2, 0x66, 0xd0,
				0x2d, 0x00, 0x17, 0x53, 0xdf, 0x08, 0x96, 0x03, 0x93, 0xc5, 0xd5, 0x68, 0x88, 0xbf, 0x49, 0xeb,
				0x5c, 0x16, 0xd9, 0xa8, 0x04, 0x27, 0xa4, 0x16, 0xbc, 0xb5, 0x97, 0xdf, 0x5b, 0xfe, 0x6f, 0x13,
				0x89, 0x0a, 0x07, 0xee, 0x13, 0x40, 0xe6, 0x47, 0x6b, 0x0d, 0x9a, 0xa8, 0xf8, 0x22, 0xab, 0x0f,
				0xd1, 0xab, 0x0d, 0x20, 0x4f, 0x40, 0xb7, 0xce, 0x6f, 0x2e, 0x13, 0x6e, 0xb6, 0x74, 0x85, 0xe5,
				0x07, 0x80, 0x4d, 0x50, 0x45, 0x88, 0xad, 0x37, 0xff, 0xd8, 0x16, 0x56, 0x8b, 0x2d, 0xc4, 0x03,
				0x11, 0xdf, 0xb6, 0x54, 0xcd, 0xea, 0xd4, 0x7e, 0x23, 0x85, 0xc3, 0x43, 0x62, 0x03, 0xdd, 0x83,
				0x6f, 0x9c, 0x64, 0xd9, 0x74, 0x62, 0xad, 0x5d, 0xfa, 0x63, 0xb5, 0xcf, 0xe0, 0x8a, 0xcb, 0x95,
				0x32, 0x86, 0x6f, 0x5c, 0xa7, 0x87, 0x56, 0x6f, 0xca, 0x93, 0xe6, 0xb1, 0x69, 0x3e, 0xe1, 0x5c,
				0xf6, 0xf7, 0xa2, 0xd6, 0x89, 0xd9, 0x74, 0x17, 0x98, 0xdc, 0x1c, 0x23, 0x8e, 0x1b, 0xe6, 0x50,
				0x73, 0x3b, 0x18, 0xfb, 0x34, 0xff, 0x88, 0x0e, 0x16, 0xbb, 0xd2, 0x1b, 0x47, 0xac, 0x00, 0x00,
			},
			Obs: []byte{
				0x4b, 0xbf, 0xa9, 0x1b, 0xa2, 0x5d, 0x47, 0xdb, 0x9a, 0x9f, 0x19, 0x0d, 0x96, 0x2a, 0x19, 0xab,
				0x32, 0x39, 0x26, 0xb3, 0x51, 0xfb, 0xd3, 0x9e, 0x35, 0x1e, 0x05, 0xda, 0x8b, 0x89, 0x25, 0xe3,
				0x0b, 0x1c, 0xce, 0x0d, 0x12, 0x21, 0x10, 0x10, 0x95, 0x81, 0x5c, 0xc7, 0xcb, 0x63, 0x19, 0x50,
				0x9e, 0xc0, 0xd6, 0x79, 0x40, 0x49, 0x19, 0x87, 0xe1, 0x3f, 0x0a, 0xff, 0xac, 0x33, 0x2a, 0xa6,
				0xaa, 0x64, 0x62, 0x6d, 0x3e, 0x9a, 0x19, 0x17, 0x51, 0x9e, 0x0b, 0x97, 0xb6, 0x55, 0xc6, 0xa1,
				0x65, 0xe4, 0x4c, 0xa9, 0xfe, 0xac, 0x07, 0x90, 0xd2, 0xa3, 0x21, 0xad, 0x3d, 0x86, 0xb7, 0x9c,
				0x51, 0x38, 0x73, 0x9f, 0xa3, 0x8d, 0x88, 0x7e, 0xc7, 0xde, 0xf4, 0x49, 0xce, 0x8a, 0xbd, 0xd3,
				0xe7, 0xf8, 0xdc, 0x4c, 0xa9, 0xe7, 0xb7, 0x33, 0x14, 0xad, 0x31, 0x0f, 0x90, 0x25, 0xe6, 0x19,
				0x46, 0xb3, 0xa5, 0x6d, 0xc6, 0x49, 0xec, 0x0d, 0xa0, 0xd6, 0x39, 0x43, 0xdf, 0xf5, 0x92, 0xcf,
				0x96, 0x2a, 0x7e, 0xfb, 0x2c, 0x85, 0x24, 0xe3, 0x5a, 0x2a, 0x6e, 0x78, 0x79, 0xd6, 0x26, 0x04,
				0xef, 0x26, 0x86, 0x95, 0xfa, 0x40, 0x03, 0x02, 0x7e, 0x22, 0xe6, 0x08, 0x30, 0x77, 0x52, 0x20,
				0x64, 0xbd, 0x4a, 0x5b, 0x90, 0x6b, 0x5f, 0x53, 0x12, 0x74, 0xf2, 0x35, 0xed, 0x50, 0x6c, 0xff,
				0x01, 0x54, 0xc7, 0x54, 0x92, 0x8a, 0x0c, 0xe5, 0x47, 0x6f, 0x2c, 0xb1, 0x02, 0x0a, 0x12, 0x22,
				0xd3, 0x2c, 0x14, 0x55, 0xec, 0xae, 0xf1, 0xe3, 0x68, 0xfb, 0x34, 0x4d, 0x17, 0x35, 0xbf, 0xbe,
				0xde, 0xb7, 0x1d, 0x0a, 0x33, 0xa2, 0xa5, 0x4b, 0x1d, 0xa5, 0xa2, 0x94, 0xe6, 0x79, 0x14, 0x4d,
				0xdf, 0x11, 0xeb, 0x1a, 0x3d, 0xe8, 0xcf, 0x0c, 0xc0, 0x61, 0x91, 0x79, 0x74, 0xf3, 0x5c, 0x1d,
				0x9c, 0xa0, 0xac, 0x81, 0x80, 0x7f, 0x8f, 0xcc, 0xe6, 0x19, 0x9a, 0x6c, 0x77, 0x12, 0xda, 0x86,
				0x50, 0x21, 0xb0, 0x4c, 0xe0, 0x43, 0x95, 0x16, 0xf1, 0xa5, 0x26, 0xcc, 0xda, 0x9f, 0xd9, 0xab,
				0xbd, 0x53, 0xc3, 0xa6, 0x84, 0xf9, 0xae, 0x1e, 0x7e, 0xe6, 0xb1, 0x1d, 0xa1, 0x38, 0xea, 0x82,
				0x6c, 0x55, 0x16, 0xb5, 0xaa, 0xdf, 0x1a, 0xbb, 0xe3, 0x6f, 0xa7, 0xff, 0xf9, 0x2e, 0x3a, 0x11,
				0x76, 0x06, 0x4e, 0x8d, 0x95, 0xf2, 0xe4, 0x88, 0x2b, 0x55, 0x00, 0xb9, 0x32, 0x28, 0xb2, 0x19,
				0x4a, 0x47, 0x5c, 0x1a, 0x27, 0xf6, 0x3f, 0x9f, 0xfd, 0x26, 0x49, 0x89, 0xa1, 0xbc, 0x00, 0x00,
			},
		},
		{
			name:      "NEA3Test5",
			Count:     0x2738cdaa,
			Bearer:    0x1a,
			Direction: 0,
			Ck:        [16]byte{0xe1, 0x3f, 0xed, 0x21, 0xb4, 0x6e, 0x4e, 0x7e, 0xc3, 0x12, 0x53, 0xb2, 0xbb, 0x17, 0xb3, 0xe0},
			Length:    4019,
			Ibs: []byte{
				0x8d, 0x74, 0xe2, 0x0d, 0x54, 0x89, 0x4e, 0x06, 0xd3, 0xcb, 0x13, 0xcb, 0x39, 0x33, 0x06, 0x5e,
				0x86, 0x74, 0xbe, 0x62, 0xad, 0xb1, 0xc7, 0x2b, 0x3a, 0x64, 0x69, 0x65, 0xab, 0x63, 0xcb, 0x7b,
				0x78, 0x54, 0xdf, 0xdc, 0x27, 0xe8, 0x49, 0x29, 0xf4, 0x9c, 0x64, 0xb8, 0x72, 0xa4, 0x90, 0xb1,
				0x3f, 0x95, 0x7b, 0x64, 0x82, 0x7e, 0x71, 0xf4, 0x1f, 0xbd, 0x42, 0x69, 0xa4, 0x2c, 0x97, 0xf8,
				0x24, 0x53, 0x70, 0x27, 0xf8, 0x6e, 0x9f, 0x4a, 0xd8, 0x2d, 0x1d, 0xf4, 0x51, 0x69, 0x0f, 0xdd,
				0x98, 0xb6, 0xd0, 0x3f, 0x3a, 0x0e, 0xbe, 0x3a, 0x31, 0x2d, 0x6b, 0x84, 0x0b, 0xa5, 0xa1, 0x82,
				0x0b, 0x2a, 0x2c, 0x97, 0x09, 0xc0, 0x90, 0xd2, 0x45, 0xed, 0x26, 0x7c, 0xf8, 0x45, 0xae, 0x41,
				0xfa, 0x97, 0x5d, 0x33, 0x33, 0xac, 0x30, 0x09, 0xfd, 0x40, 0xeb, 0xa9, 0xeb, 0x5b, 0x88, 0x57,
				0x14, 0xb7, 0x68, 0xb6, 0x97, 0x13, 0x8b, 0xaf, 0x21, 0x38, 0x0e, 0xca, 0x49, 0xf6, 0x44, 0xd4,
				0x86, 0x89, 0xe4, 0x21, 0x57, 0x60, 0xb9, 0x06, 0x73, 0x9f, 0x0d, 0x2b, 0x3f, 0x09, 0x11, 0x33,
				0xca, 0x15, 0xd9, 0x81, 0xcb, 0xe4, 0x01, 0xba, 0xf7, 0x2d, 0x05, 0xac, 0xe0, 0x5c, 0xcc, 0xb2,
				0xd2, 0x97, 0xf4, 0xef, 0x6a, 0x5f, 0x58, 0xd9, 0x12, 0x46, 0xcf, 0xa7, 0x72, 0x15, 0xb8, 0x92,
				0xab, 0x44, 0x1d, 0x52, 0x78, 0x45, 0x27, 0x95, 0xcc, 0xb7, 0xf5, 0xd7, 0x90, 0x57, 0xa1, 0xc4,
				0xf7, 0x7f, 0x80, 0xd4, 0x6d, 0xb2, 0x03, 0x3c, 0xb7, 0x9b, 0xed, 0xf8, 0xe6, 0x05, 0x51, 0xce,
				0x10, 0xc6, 0x67, 0xf6, 0x2a, 0x97, 0xab, 0xaf, 0xab, 0xbc, 0xd6, 0x77, 0x20, 0x18, 0xdf, 0x96,
				0xa2, 0x82, 0xea, 0x73, 0x7c, 0xe2, 0xcb, 0x33, 0x12, 0x11, 0xf6, 0x0d, 0x53, 0x54, 0xce, 0x78,
				0xf9, 0x91, 0x8d, 0x9c, 0x20, 0x6c, 0xa0, 0x42, 0xc9, 0xb6, 0x23, 0x87, 0xdd, 0x70, 0x96, 0x04,
				0xa5, 0x0a, 0xf1, 0x6d, 0x8d, 0x35, 0xa8, 0x90, 0x6b, 0xe4, 0x84, 0xcf, 0x2e, 0x74, 0xa9, 0x28,
				0x99, 0x40, 0x36, 0x43, 0x53, 0x24, 0x9b, 0x27, 0xb4, 0xc9, 0xae, 0x29, 0xed, 0xdf, 0xc7, 0xda,
				0x64, 0x18, 0x79, 0x1a, 0x4e, 0x7b, 0xaa, 0x06, 0x60, 0xfa, 0x64, 0x51, 0x1f, 0x2d, 0x68, 0x5c,
				0xc3, 0xa5, 0xff, 0x70, 0xe0, 0xd2, 0xb7, 0x42, 0x92, 0xe3, 0xb8, 0xa0, 0xcd, 0x6b, 0x04, 0xb1,
				0xc7, 0x90, 0xb8, 0xea, 0xd2, 0x70, 0x37, 0x08, 0x54, 0x0d, 0xea, 0x2f, 0xc0, 0x9c, 0x3d, 0xa7,
				0x70, 0xf6, 0x54, 0x49, 0xe8, 0x4d, 0x81, 0x7a, 0x4f, 0x55, 0x10, 0x55, 0xe1, 0x9a, 0xb8, 0x50,
				0x18, 0xa0, 0x02, 0x8b, 0x71, 0xa1, 0x44, 0xd9, 0x67, 0x91, 0xe9, 0xa3, 0x57, 0x79, 0x33, 0x50,
				0x4e, 0xee, 0x00, 0x60, 0x34, 0x0c, 0x69, 0xd2, 0x74, 0xe1, 0xbf, 0x9d, 0x80, 0x5d, 0xcb, 0xcc,
				0x1a, 0x6f, 0xaa, 0x97, 0x68, 0x00, 0xb6, 0xff, 0x2b, 0x67, 0x1d, 0xc4, 0x63, 0x65, 0x2f, 0xa8,
				0xa3, 0x3e, 0xe5, 0x09, 0x74, 0xc1, 0xc2, 0x1b, 0xe0, 0x1e, 0xab, 0xb2, 0x16, 0x74, 0x30, 0x26,
				0x9d, 0x72, 0xee, 0x51, 0x1c, 0x9d, 0xde, 0x30, 0x79, 0x7c, 0x9a, 0x25, 0xd8, 0x6c, 0xe7, 0x4f,
				0x5b, 0x96, 0x1b, 0xe5, 0xfd, 0xfb, 0x68, 0x07, 0x81, 0x40, 0x39, 0xe7, 0x13, 0x76, 0x36, 0xbd,
				0x1d, 0x7f, 0xa9, 0xe0, 0x9e, 0xfd, 0x20, 0x07, 0x50, 0x59, 0x06, 0xa5, 0xac, 0x45, 0xdf, 0xde,
				0xed, 0x77, 0x57, 0xbb, 0xee, 0x74, 0x57, 0x49, 0xc2, 0x96, 0x33, 0x35, 0x0b, 0xee, 0x0e, 0xa6,
				0xf4, 0x09, 0xdf, 0x45, 0x80, 0x16, 0x00, 0x00,
			},
			Obs: []byte{
				0x94, 0xea, 0xa4, 0xaa, 0x30, 0xa5, 0x71, 0x37, 0xdd, 0xf0, 0x9b, 0x97, 0xb2, 0x56, 0x18, 0xa2,
				0x0a, 0x13, 0xe2, 0xf1, 0x0f, 0xa5, 0xbf, 0x81, 0x61, 0xa8, 0x79, 0xcc, 0x2a, 0xe7, 0x97, 0xa6,
				0xb4, 0xcf, 0x2d, 0x9d, 0xf3, 0x1d, 0xeb, 0xb9, 0x90, 0x5c, 0xcf, 0xec, 0x97, 0xde, 0x60, 0x5d,
				0x21, 0xc6, 0x1a, 0xb8, 0x53, 0x1b, 0x7f, 0x3c, 0x9d, 0xa5, 0xf0, 0x39, 0x31, 0xf8, 0xa0, 0x64,
				0x2d, 0xe4, 0x82, 0x11, 0xf5, 0xf5, 0x2f, 0xfe, 0xa1, 0x0f, 0x39, 0x2a, 0x04, 0x76, 0x69, 0x98,
				0x5d, 0xa4, 0x54, 0xa2, 0x8f, 0x08, 0x09, 0x61, 0xa6, 0xc2, 0xb6, 0x2d, 0xaa, 0x17, 0xf3, 0x3c,
				0xd6, 0x0a, 0x49, 0x71, 0xf4, 0x8d, 0x2d, 0x90, 0x93, 0x94, 0xa5, 0x5f, 0x48, 0x11, 0x7a, 0xce,
				0x43, 0xd7, 0x08, 0xe6, 0xb7, 0x7d, 0x3d, 0xc4, 0x6d, 0x8b, 0xc0, 0x17, 0xd4, 0xd1, 0xab, 0xb7,
				0x7b, 0x74, 0x28, 0xc0, 0x42, 0xb0, 0x6f, 0x2f, 0x99, 0xd8, 0xd0, 0x7c, 0x98, 0x79, 0xd9, 0x96,
				0x00, 0x12, 0x7a, 0x31, 0x98, 0x5f, 0x10, 0x99, 0xbb, 0xd7, 0xd6, 0xc1, 0x51, 0x9e, 0xde, 0x8f,
				0x5e, 0xeb, 0x4a, 0x61, 0x0b, 0x34, 0x9a, 0xc0, 0x1e, 0xa2, 0x35, 0x06, 0x91, 0x75, 0x6b, 0xd1,
				0x05, 0xc9, 0x74, 0xa5, 0x3e, 0xdd, 0xb3, 0x5d, 0x1d, 0x41, 0x00, 0xb0, 0x12, 0xe5, 0x22, 0xab,
				0x41, 0xf4, 0xc5, 0xf2, 0xfd, 0xe7, 0x6b, 0x59, 0xcb, 0x8b, 0x96, 0xd8, 0x85, 0xcf, 0xe4, 0x08,
				0x0d, 0x13, 0x28, 0xa0, 0xd6, 0x36, 0xcc, 0x0e, 0xdc, 0x05, 0x80, 0x0b, 0x76, 0xac, 0xca, 0x8f,
				0xef, 0x67, 0x20, 0x84, 0xd1, 0xf5, 0x2a, 0x8b, 0xbd, 0x8e, 0x09, 0x93, 0x32, 0x09, 0x92, 0xc7,
				0xff, 0xba, 0xe1, 0x7c, 0x40, 0x84, 0x41, 0xe0, 0xee, 0x88, 0x3f, 0xc8, 0xa8, 0xb0, 0x5e, 0x22,
				0xf5, 0xff, 0x7f, 0x8d, 0x1b, 0x48, 0xc7, 0x4c, 0x46, 0x8c, 0x46, 0x7a, 0x02, 0x8f, 0x09, 0xfd,
				0x7c, 0xe9, 0x11, 0x09, 0xa5, 0x70, 0xa2, 0xd5, 0xc4, 0xd5, 0xf4, 0xfa, 0x18, 0xc5, 0xdd, 0x3e,
				0x45, 0x62, 0xaf, 0xe2, 0x4e, 0xf7, 0x71, 0x90, 0x1f, 0x59, 0xaf, 0x64, 0x58, 0x98, 0xac, 0xef,
				0x08, 0x8a, 0xba, 0xe0, 0x7e, 0x92, 0xd5, 0x2e, 0xb2, 0xde, 0x55, 0x04, 0x5b, 0xb1, 0xb7, 0xc4,
				0x16, 0x4e, 0xf2, 0xd7, 0xa6, 0xca, 0xc1, 0x5e, 0xeb, 0x92, 0x6d, 0x7e, 0xa2, 0xf0, 0x8b, 0x66,
				0xe1, 0xf7, 0x59, 0xf3, 0xae, 0xe4, 0x46, 0x14, 0x72, 0x5a, 0xa3, 0xc7, 0x48, 0x2b, 0x30, 0x84,
				0x4c, 0x14, 0x3f, 0xf8, 0x5b, 0x53, 0xf1, 0xe5, 0x83, 0xc5, 0x01, 0x25, 0x7d, 0xdd, 0xd0, 0x96,
				0xb8, 0x12, 0x68, 0xda, 0xa3, 0x03, 0xf1, 0x72, 0x34, 0xc2, 0x33, 0x35, 0x41, 0xf0, 0xbb, 0x8e,
				0x19, 0x06, 0x48, 0xc5, 0x80, 0x7c, 0x86, 0x6d, 0x71, 0x93, 0x22, 0x86, 0x09, 0xad, 0xb9, 0x48,
				0x68, 0x6f, 0x7d, 0xe2, 0x94, 0xa8, 0x02, 0xcc, 0x38, 0xf7, 0xfe, 0x52, 0x08, 0xf5, 0xea, 0x31,
				0x96, 0xd0, 0x16, 0x7b, 0x9b, 0xdd, 0x02, 0xf0, 0xd2, 0xa5, 0x22, 0x1c, 0xa5, 0x08, 0xf8, 0x93,
				0xaf, 0x5c, 0x4b, 0x4b, 0xb9, 0xf4, 0xf5, 0x20, 0xfd, 0x84, 0x28, 0x9b, 0x3d, 0xbe, 0x7e, 0x61,
				0x49, 0x7a, 0x7e, 0x2a, 0x58, 0x40, 0x37, 0xea, 0x63, 0x7b, 0x69, 0x81, 0x12, 0x71, 0x74, 0xaf,
				0x57, 0xb4, 0x71, 0xdf, 0x4b, 0x27, 0x68, 0xfd, 0x79, 0xc1, 0x54, 0x0f, 0xb3, 0xed, 0xf2, 0xea,
				0x22, 0xcb, 0x69, 0xbe, 0xc0, 0xcf, 0x8d, 0x93, 0x3d, 0x9c, 0x6f, 0xdd, 0x64, 0x5e, 0x85, 0x05,
				0x91, 0xcc, 0xa3, 0xd6, 0x2c, 0x0c, 0xc0, 0x00,
			},
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			obs, err := NEA3(tc.Ck, tc.Count, tc.Bearer, tc.Direction, tc.Ibs, tc.Length)
			require.NoError(t, err)
			require.Equal(t, tc.Obs, obs)
		})
	}
}

func TestNIA3(t *testing.T) {
	t.Parallel()

	testCases := []struct {
		name      string
		Count     uint32
		Bearer    uint8
		Direction uint8
		Ik        [16]byte
		Length    uint32
		Msg       []byte
		Mac       []byte
	}{
		{
			name:      "NIA3Test1",
			Count:     0x0,
			Bearer:    0x0,
			Direction: 0,
			Ik:        [16]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
			Length:    1,
			Msg: []byte{
				0x00, 0x00, 0x00, 0x00,
			},
			Mac: []byte{
				0xc8, 0xa9, 0x59, 0x5e,
			},
		},
		{
			name:      "NIA3Test2",
			Count:     0x561eb2dd,
			Bearer:    0x14,
			Direction: 0,
			Ik:        [16]byte{0x47, 0x05, 0x41, 0x25, 0x56, 0x1e, 0xb2, 0xdd, 0xa9, 0x40, 0x59, 0xda, 0x05, 0x09, 0x78, 0x50},
			Length:    90,
			Msg: []byte{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Mac: []byte{
				0x67, 0x19, 0xa0, 0x88,
			},
		},
		{
			name:      "NIA3Test3",
			Count:     0xa94059da,
			Bearer:    0xa,
			Direction: 1,
			Ik:        [16]byte{0xc9, 0xe6, 0xce, 0xc4, 0x60, 0x7c, 0x72, 0xdb, 0x00, 0x0a, 0xef, 0xa8, 0x83, 0x85, 0xab, 0x0a},
			Length:    577,
			Msg: []byte{
				0x98, 0x3b, 0x41, 0xd4, 0x7d, 0x78, 0x0c, 0x9e, 0x1a, 0xd1, 0x1d, 0x7e, 0xb7, 0x03, 0x91, 0xb1,
				0xde, 0x0b, 0x35, 0xda, 0x2d, 0xc6, 0x2f, 0x83, 0xe7, 0xb7, 0x8d, 0x63, 0x06, 0xca, 0x0e, 0xa0,
				0x7e, 0x94, 0x1b, 0x7b, 0xe9, 0x13, 0x48, 0xf9, 0xfc, 0xb1, 0x70, 0xe2, 0x21, 0x7f, 0xec, 0xd9,
				0x7f, 0x9f, 0x68, 0xad, 0xb1, 0x6e, 0x5d, 0x7d, 0x21, 0xe5, 0x69, 0xd2, 0x80, 0xed, 0x77, 0x5c,
				0xeb, 0xde, 0x3f, 0x40, 0x93, 0xc5, 0x38, 0x81, 0x00, 0x00, 0x00, 0x00,
			},
			Mac: []byte{
				0xfa, 0xe8, 0xff, 0x0b,
			},
		},
		{
			name:      "NIA3Test4",
			Count:     0x05097850,
			Bearer:    0x10,
			Direction: 1,
			Ik:        [16]byte{0xc8, 0xa4, 0x82, 0x62, 0xd0, 0xc2, 0xe2, 0xba, 0xc4, 0xb9, 0x6e, 0xf7, 0x7e, 0x80, 0xca, 0x59},
			Length:    2079,
			Msg: []byte{
				0xb5, 0x46, 0x43, 0x0b, 0xf8, 0x7b, 0x4f, 0x1e, 0xe8, 0x34, 0x70, 0x4c, 0xd6, 0x95, 0x1c, 0x36,
				0xe2, 0x6f, 0x10, 0x8c, 0xf7, 0x31, 0x78, 0x8f, 0x48, 0xdc, 0x34, 0xf1, 0x67, 0x8c, 0x05, 0x22,
				0x1c, 0x8f, 0xa7, 0xff, 0x2f, 0x39, 0xf4, 0x77, 0xe7, 0xe4, 0x9e, 0xf6, 0x0a, 0x4e, 0xc2, 0xc3,
				0xde, 0x24, 0x31, 0x2a, 0x96, 0xaa, 0x26, 0xe1, 0xcf, 0xba, 0x57, 0x56, 0x38, 0x38, 0xb2, 0x97,
				0xf4, 0x7e, 0x85, 0x10, 0xc7, 0x79, 0xfd, 0x66, 0x54, 0xb1, 0x43, 0x38, 0x6f, 0xa6, 0x39, 0xd3,
				0x1e, 0xdb, 0xd6, 0xc0, 0x6e, 0x47, 0xd1, 0x59, 0xd9, 0x43, 0x62, 0xf2, 0x6a, 0xee, 0xed, 0xee,
				0x0e, 0x4f, 0x49, 0xd9, 0xbf, 0x84, 0x12, 0x99, 0x54, 0x15, 0xbf, 0xad, 0x56, 0xee, 0x82, 0xd1,
				0xca, 0x74, 0x63, 0xab, 0xf0, 0x85, 0xb0, 0x82, 0xb0, 0x99, 0x04, 0xd6, 0xd9, 0x90, 0xd4, 0x3c,
				0xf2, 0xe0, 0x62, 0xf4, 0x08, 0x39, 0xd9, 0x32, 0x48, 0xb1, 0xeb, 0x92, 0xcd, 0xfe, 0xd5, 0x30,
				0x0b, 0xc1, 0x48, 0x28, 0x04, 0x30, 0xb6, 0xd0, 0xca, 0xa0, 0x94, 0xb6, 0xec, 0x89, 0x11, 0xab,
				0x7d, 0xc3, 0x68, 0x24, 0xb8, 0x24, 0xdc, 0x0a, 0xf6, 0x68, 0x2b, 0x09, 0x35, 0xfd, 0xe7, 0xb4,
				0x92, 0xa1, 0x4d, 0xc2, 0xf4, 0x36, 0x48, 0x03, 0x8d, 0xa2, 0xcf, 0x79, 0x17, 0x0d, 0x2d, 0x50,
				0x13, 0x3f, 0xd4, 0x94, 0x16, 0xcb, 0x6e, 0x33, 0xbe, 0xa9, 0x0b, 0x8b, 0xf4, 0x55, 0x9b, 0x03,
				0x73, 0x2a, 0x01, 0xea, 0x29, 0x0e, 0x6d, 0x07, 0x4f, 0x79, 0xbb, 0x83, 0xc1, 0x0e, 0x58, 0x00,
				0x15, 0xcc, 0x1a, 0x85, 0xb3, 0x6b, 0x55, 0x01, 0x04, 0x6e, 0x9c, 0x4b, 0xdc, 0xae, 0x51, 0x35,
				0x69, 0x0b, 0x86, 0x66, 0xbd, 0x54, 0xb7, 0xa7, 0x03, 0xea, 0x7b, 0x6f, 0x22, 0x0a, 0x54, 0x69,
				0xa5, 0x68, 0x02, 0x7e,
			},
			Mac: []byte{
				0x00, 0x4a, 0xc4, 0xd6,
			},
		},
		{
			name:      "NIA3Test5",
			Count:     0x561eb2dd,
			Bearer:    0x1c,
			Direction: 0,
			Ik:        [16]byte{0x6b, 0x8b, 0x08, 0xee, 0x79, 0xe0, 0xb5, 0x98, 0x2d, 0x6d, 0x12, 0x8e, 0xa9, 0xf2, 0x20, 0xcb},
			Length:    5670,
			Msg: []byte{
				0x5b, 0xad, 0x72, 0x47, 0x10, 0xba, 0x1c, 0x56, 0xd5, 0xa3, 0x15, 0xf8, 0xd4, 0x0f, 0x6e, 0x09,
				0x37, 0x80, 0xbe, 0x8e, 0x8d, 0xe0, 0x7b, 0x69, 0x92, 0x43, 0x20, 0x18, 0xe0, 0x8e, 0xd9, 0x6a,
				0x57, 0x34, 0xaf, 0x8b, 0xad, 0x8a, 0x57, 0x5d, 0x3a, 0x1f, 0x16, 0x2f, 0x85, 0x04, 0x5c, 0xc7,
				0x70, 0x92, 0x55, 0x71, 0xd9, 0xf5, 0xb9, 0x4e, 0x45, 0x4a, 0x77, 0xc1, 0x6e, 0x72, 0x93, 0x6b,
				0xf0, 0x16, 0xae, 0x15, 0x74, 0x99, 0xf0, 0x54, 0x3b, 0x5d, 0x52, 0xca, 0xa6, 0xdb, 0xea, 0xb6,
				0x97, 0xd2, 0xbb, 0x73, 0xe4, 0x1b, 0x80, 0x75, 0xdc, 0xe7, 0x9b, 0x4b, 0x86, 0x04, 0x4f, 0x66,
				0x1d, 0x44, 0x85, 0xa5, 0x43, 0xdd, 0x78, 0x60, 0x6e, 0x04, 0x19, 0xe8, 0x05, 0x98, 0x59, 0xd3,
				0xcb, 0x2b, 0x67, 0xce, 0x09, 0x77, 0x60, 0x3f, 0x81, 0xff, 0x83, 0x9e, 0x33, 0x18, 0x59, 0x54,
				0x4c, 0xfb, 0xc8, 0xd0, 0x0f, 0xef, 0x1a, 0x4c, 0x85, 0x10, 0xfb, 0x54, 0x7d, 0x6b, 0x06, 0xc6,
				0x11, 0xef, 0x44, 0xf1, 0xbc, 0xe1, 0x07, 0xcf, 0xa4, 0x5a, 0x06, 0xaa, 0xb3, 0x60, 0x15, 0x2b,
				0x28, 0xdc, 0x1e, 0xbe, 0x6f, 0x7f, 0xe0, 0x9b, 0x05, 0x16, 0xf9, 0xa5, 0xb0, 0x2a, 0x1b, 0xd8,
				0x4b, 0xb0, 0x18, 0x1e, 0x2e, 0x89, 0xe1, 0x9b, 0xd8, 0x12, 0x59, 0x30, 0xd1, 0x78, 0x68, 0x2f,
				0x38, 0x62, 0xdc, 0x51, 0xb6, 0x36, 0xf0, 0x4e, 0x72, 0x0c, 0x47, 0xc3, 0xce, 0x51, 0xad, 0x70,
				0xd9, 0x4b, 0x9b, 0x22, 0x55, 0xfb, 0xae, 0x90, 0x65, 0x49, 0xf4, 0x99, 0xf8, 0xc6, 0xd3, 0x99,
				0x47, 0xed, 0x5e, 0x5d, 0xf8, 0xe2, 0xde, 0xf1, 0x13, 0x25, 0x3e, 0x7b, 0x08, 0xd0, 0xa7, 0x6b,
				0x6b, 0xfc, 0x68, 0xc8, 0x12, 0xf3, 0x75, 0xc7, 0x9b, 0x8f, 0xe5, 0xfd, 0x85, 0x97, 0x6a, 0xa6,
				0xd4, 0x6b, 0x4a, 0x23, 0x39, 0xd8, 0xae, 0x51, 0x47, 0xf6, 0x80, 0xfb, 0xe7, 0x0f, 0x97, 0x8b,
				0x38, 0xef, 0xfd, 0x7b, 0x2f, 0x78, 0x66, 0xa2, 0x25, 0x54, 0xe1, 0x93, 0xa9, 0x4e, 0x98, 0xa6,
				0x8b, 0x74, 0xbd, 0x25, 0xbb, 0x2b, 0x3f, 0x5f, 0xb0, 0xa5, 0xfd, 0x59, 0x88, 0x7f, 0x9a, 0xb6,
				0x81, 0x59, 0xb7, 0x17, 0x8d, 0x5b, 0x7b, 0x67, 0x7c, 0xb5, 0x46, 0xbf, 0x41, 0xea, 0xdc, 0xa2,
				0x16, 0xfc, 0x10, 0x85, 0x01, 0x28, 0xf8, 0xbd, 0xef, 0x5c, 0x8d, 0x89, 0xf9, 0x6a, 0xfa, 0x4f,
				0xa8, 0xb5, 0x48, 0x85, 0x56, 0x5e, 0xd8, 0x38, 0xa9, 0x50, 0xfe, 0xe5, 0xf1, 0xc3, 0xb0, 0xa4,
				0xf6, 0xfb, 0x71, 0xe5, 0x4d, 0xfd, 0x16, 0x9e, 0x82, 0xce, 0xcc, 0x72, 0x66, 0xc8, 0x50, 0xe6,
				0x7c, 0x5e, 0xf0, 0xba, 0x96, 0x0f, 0x52, 0x14, 0x06, 0x0e, 0x71, 0xeb, 0x17, 0x2a, 0x75, 0xfc,
				0x14, 0x86, 0x83, 0x5c, 0xbe, 0xa6, 0x53, 0x44, 0x65, 0xb0, 0x55, 0xc9, 0x6a, 0x72, 0xe4, 0x10,
				0x52, 0x24, 0x18, 0x23, 0x25, 0xd8, 0x30, 0x41, 0x4b, 0x40, 0x21, 0x4d, 0xaa, 0x80, 0x91, 0xd2,
				0xe0, 0xfb, 0x01, 0x0a, 0xe1, 0x5c, 0x6d, 0xe9, 0x08, 0x50, 0x97, 0x3b, 0xdf, 0x1e, 0x42, 0x3b,
				0xe1, 0x48, 0xa2, 0x37, 0xb8, 0x7a, 0x0c, 0x9f, 0x34, 0xd4, 0xb4, 0x76, 0x05, 0xb8, 0x03, 0xd7,
				0x43, 0xa8, 0x6a, 0x90, 0x39, 0x9a, 0x4a, 0xf3, 0x96, 0xd3, 0xa1, 0x20, 0x0a, 0x62, 0xf3, 0xd9,
				0x50, 0x79, 0x62, 0xe8, 0xe5, 0xbe, 0xe6, 0xd3, 0xda, 0x2b, 0xb3, 0xf7, 0x23, 0x76, 0x64, 0xac,
				0x7a, 0x29, 0x28, 0x23, 0x90, 0x0b, 0xc6, 0x35, 0x03, 0xb2, 0x9e, 0x80, 0xd6, 0x3f, 0x60, 0x67,
				0xbf, 0x8e, 0x17, 0x16, 0xac, 0x25, 0xbe, 0xba, 0x35, 0x0d, 0xeb, 0x62, 0xa9, 0x9f, 0xe0, 0x31,
				0x85, 0xeb, 0x4f, 0x69, 0x93, 0x7e, 0xcd, 0x38, 0x79, 0x41, 0xfd, 0xa5, 0x44, 0xba, 0x67, 0xdb,
				0x09, 0x11, 0x77, 0x49, 0x38, 0xb0, 0x18, 0x27, 0xbc, 0xc6, 0x9c, 0x92, 0xb3, 0xf7, 0x72, 0xa9,
				0xd2, 0x85, 0x9e, 0xf0, 0x03, 0x39, 0x8b, 0x1f, 0x6b, 0xba, 0xd7, 0xb5, 0x74, 0xf7, 0x98, 0x9a,
				0x1d, 0x10, 0xb2, 0xdf, 0x79, 0x8e, 0x0d, 0xbf, 0x30, 0xd6, 0x58, 0x74, 0x64, 0xd2, 0x48, 0x78,
				0xcd, 0x00, 0xc0, 0xea, 0xee, 0x8a, 0x1a, 0x0c, 0xc7, 0x53, 0xa2, 0x79, 0x79, 0xe1, 0x1b, 0x41,
				0xdb, 0x1d, 0xe3, 0xd5, 0x03, 0x8a, 0xfa, 0xf4, 0x9f, 0x5c, 0x68, 0x2c, 0x37, 0x48, 0xd8, 0xa3,
				0xa9, 0xec, 0x54, 0xe6, 0xa3, 0x71, 0x27, 0x5f, 0x16, 0x83, 0x51, 0x0f, 0x8e, 0x4f, 0x90, 0x93,
				0x8f, 0x9a, 0xb6, 0xe1, 0x34, 0xc2, 0xcf, 0xdf, 0x48, 0x41, 0xcb, 0xa8, 0x8e, 0x0c, 0xff, 0x2b,
				0x0b, 0xcc, 0x8e, 0x6a, 0xdc, 0xb7, 0x11, 0x09, 0xb5, 0x19, 0x8f, 0xec, 0xf1, 0xbb, 0x7e, 0x5c,
				0x53, 0x1a, 0xca, 0x50, 0xa5, 0x6a, 0x8a, 0x3b, 0x6d, 0xe5, 0x98, 0x62, 0xd4, 0x1f, 0xa1, 0x13,
				0xd9, 0xcd, 0x95, 0x78, 0x08, 0xf0, 0x85, 0x71, 0xd9, 0xa4, 0xbb, 0x79, 0x2a, 0xf2, 0x71, 0xf6,
				0xcc, 0x6d, 0xbb, 0x8d, 0xc7, 0xec, 0x36, 0xe3, 0x6b, 0xe1, 0xed, 0x30, 0x81, 0x64, 0xc3, 0x1c,
				0x7c, 0x0a, 0xfc, 0x54, 0x1c, 0x00, 0x00, 0x00,
			},
			Mac: []byte{
				0x0c, 0xa1, 0x27, 0x92,
			},
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			mac, err := NIA3(tc.Ik, tc.Count, tc.Bearer, tc.Direction, tc.Msg, tc.Length)
			require.NoError(t, err)
			require.Equal(t, tc.Mac, mac)
		})
	}
}
